# Dify Local Nginx Configuration
# 用于本地 nginx 反向代理 Docker 容器中的 Dify 服务
# Place this file in your nginx config directory (e.g., /etc/nginx/conf.d/ or /usr/local/etc/nginx/conf.d/)
# Then restart your local nginx: sudo nginx -s reload (or systemctl restart nginx)

upstream dify_api {
    server 127.0.0.1:5001 max_fails=3 fail_timeout=30s;
}

upstream dify_web {
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name _;
    
    client_max_body_size 100M;
    keepalive_timeout 65;
    
    # API service reverse proxy
    location /api/ {
        proxy_pass http://dify_api;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
    
    # Web service reverse proxy (everything else)
    location / {
        proxy_pass http://dify_web;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Health check endpoints
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}

# Optional: HTTPS configuration
# Uncomment and modify if you want to use HTTPS
# 
# server {
#     listen 443 ssl;
#     server_name your.domain.com;
#     
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/certificate.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     
#     client_max_body_size 100M;
#     keepalive_timeout 65;
#     
#     location /api/ {
#         proxy_pass http://dify_api;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Port $server_port;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_buffering off;
#         proxy_read_timeout 3600s;
#         proxy_send_timeout 3600s;
#     }
#     
#     location / {
#         proxy_pass http://dify_web;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Port $server_port;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_buffering off;
#         proxy_read_timeout 3600s;
#         proxy_send_timeout 3600s;
#         
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#     }
# }
# 
# # HTTP to HTTPS redirect
# server {
#     listen 80;
#     server_name your.domain.com;
#     return 301 https://$server_name$request_uri;
# }
