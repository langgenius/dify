# Example Kubernetes deployments for specialized Celery workers
# These examples show how to deploy different types of workers for optimal resource allocation

---
# Dataset Worker - Optimized for RAG indexing and document processing
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dify-worker-dataset
  labels:
    app: dify-worker-dataset
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dify-worker-dataset
  template:
    metadata:
      labels:
        app: dify-worker-dataset
    spec:
      containers:
      - name: worker
        image: langgenius/dify-api:1.7.2
        env:
        - name: MODE
          value: "worker"
        - name: CELERY_WORKER_QUEUES
          value: "dataset,mail,ops_trace"
        - name: CELERY_WORKER_CONCURRENCY
          value: "2"
        - name: CELERY_WORKER_POOL
          value: "prefork"  # Better for CPU-intensive RAG tasks
        # Add your other environment variables here
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: storage
          mountPath: /app/api/storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: dify-storage

---
# Workflow Worker - Optimized for workflow triggers and async execution
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dify-worker-workflow
  labels:
    app: dify-worker-workflow
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dify-worker-workflow
  template:
    metadata:
      labels:
        app: dify-worker-workflow
    spec:
      containers:
      - name: worker
        image: langgenius/dify-api:1.7.2
        env:
        - name: MODE
          value: "worker"
        - name: CELERY_WORKER_QUEUES
          value: "workflow_professional,workflow_team,workflow_sandbox,workflow"
        - name: CELERY_WORKER_CONCURRENCY
          value: "4"
        - name: CELERY_WORKER_POOL
          value: "gevent"  # Better for I/O-bound workflow tasks
        # Add your other environment variables here
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - name: storage
          mountPath: /app/api/storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: dify-storage

---
# High-Priority Professional Workflow Worker
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dify-worker-professional
  labels:
    app: dify-worker-professional
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dify-worker-professional
  template:
    metadata:
      labels:
        app: dify-worker-professional
    spec:
      containers:
      - name: worker
        image: langgenius/dify-api:1.7.2
        env:
        - name: MODE
          value: "worker"
        - name: CELERY_WORKER_QUEUES
          value: "workflow_professional"
        - name: CELERY_WORKER_CONCURRENCY
          value: "6"
        - name: CELERY_WORKER_POOL
          value: "gevent"
        # Add your other environment variables here
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: storage
          mountPath: /app/api/storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: dify-storage
      # Optional: Add node affinity for high-performance nodes
      nodeSelector:
        worker-tier: "professional"

---
# General Purpose Worker - Handles miscellaneous tasks
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dify-worker-general
  labels:
    app: dify-worker-general
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dify-worker-general
  template:
    metadata:
      labels:
        app: dify-worker-general
    spec:
      containers:
      - name: worker
        image: langgenius/dify-api:1.7.2
        env:
        - name: MODE
          value: "worker"
        - name: CELERY_WORKER_QUEUES
          value: "generation,app_deletion,plugin,workflow_storage"
        - name: CELERY_WORKER_CONCURRENCY
          value: "2"
        - name: CELERY_WORKER_POOL
          value: "gevent"
        # Add your other environment variables here
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: storage
          mountPath: /app/api/storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: dify-storage

---
# Example HorizontalPodAutoscaler for workflow workers
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dify-worker-workflow-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dify-worker-workflow
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80