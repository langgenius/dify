"""add workflow_schedule_plan table

Revision ID: 2ad189270f60
Revises: 5871f634954d
Create Date: 2025-08-28 01:14:59.101946

"""
from alembic import op
import models as models
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2ad189270f60'
down_revision = '5871f634954d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provider_credentials',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuidv7()'), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('credential_name', sa.String(length=255), nullable=False),
    sa.Column('encrypted_config', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='provider_credential_pkey')
    )
    with op.batch_alter_table('provider_credentials', schema=None) as batch_op:
        batch_op.create_index('provider_credential_tenant_provider_idx', ['tenant_id', 'provider_name'], unique=False)

    op.create_table('provider_model_credentials',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuidv7()'), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=255), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.String(length=40), nullable=False),
    sa.Column('credential_name', sa.String(length=255), nullable=False),
    sa.Column('encrypted_config', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='provider_model_credential_pkey')
    )
    with op.batch_alter_table('provider_model_credentials', schema=None) as batch_op:
        batch_op.create_index('provider_model_credential_tenant_provider_model_idx', ['tenant_id', 'provider_name', 'model_name', 'model_type'], unique=False)

    op.create_table('workflow_schedule_plans',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('node_id', sa.String(length=64), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('cron_expression', sa.String(length=255), nullable=False),
    sa.Column('timezone', sa.String(length=64), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('triggered_by', sa.String(length=16), nullable=False),
    sa.Column('next_run_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='workflow_schedule_plan_pkey'),
    sa.UniqueConstraint('app_id', 'node_id', 'triggered_by', name='uniq_app_node_trigger')
    )
    with op.batch_alter_table('workflow_schedule_plans', schema=None) as batch_op:
        batch_op.create_index('workflow_schedule_plan_enabled_next_idx', ['enabled', 'next_run_at'], unique=False)

    with op.batch_alter_table('load_balancing_model_configs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('credential_id', models.types.StringUUID(), nullable=True))
        batch_op.add_column(sa.Column('credential_source_type', sa.String(length=40), nullable=True))

    with op.batch_alter_table('provider_models', schema=None) as batch_op:
        batch_op.add_column(sa.Column('credential_id', models.types.StringUUID(), nullable=True))
        batch_op.drop_column('encrypted_config')

    with op.batch_alter_table('providers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('credential_id', models.types.StringUUID(), nullable=True))
        batch_op.drop_column('encrypted_config')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('providers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('encrypted_config', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_column('credential_id')

    with op.batch_alter_table('provider_models', schema=None) as batch_op:
        batch_op.add_column(sa.Column('encrypted_config', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_column('credential_id')

    with op.batch_alter_table('load_balancing_model_configs', schema=None) as batch_op:
        batch_op.drop_column('credential_source_type')
        batch_op.drop_column('credential_id')

    with op.batch_alter_table('workflow_schedule_plans', schema=None) as batch_op:
        batch_op.drop_index('workflow_schedule_plan_enabled_next_idx')

    op.drop_table('workflow_schedule_plans')
    with op.batch_alter_table('provider_model_credentials', schema=None) as batch_op:
        batch_op.drop_index('provider_model_credential_tenant_provider_model_idx')

    op.drop_table('provider_model_credentials')
    with op.batch_alter_table('provider_credentials', schema=None) as batch_op:
        batch_op.drop_index('provider_credential_tenant_provider_idx')

    op.drop_table('provider_credentials')
    # ### end Alembic commands ###
