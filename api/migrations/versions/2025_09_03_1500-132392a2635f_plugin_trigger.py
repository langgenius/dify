"""plugin_trigger

Revision ID: 132392a2635f
Revises: 9ee7d347f4c1
Create Date: 2025-09-03 15:00:57.326868

"""
from alembic import op
import models as models
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '132392a2635f'
down_revision = '9ee7d347f4c1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trigger_oauth_system_clients',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuidv7()'), nullable=False),
    sa.Column('plugin_id', sa.String(length=512), nullable=False),
    sa.Column('provider', sa.String(length=255), nullable=False),
    sa.Column('encrypted_oauth_params', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='trigger_oauth_system_client_pkey'),
    sa.UniqueConstraint('plugin_id', 'provider', name='trigger_oauth_system_client_plugin_id_provider_idx')
    )
    op.create_table('trigger_oauth_tenant_clients',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuidv7()'), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('plugin_id', sa.String(length=512), nullable=False),
    sa.Column('provider', sa.String(length=255), nullable=False),
    sa.Column('enabled', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('encrypted_oauth_params', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='trigger_oauth_tenant_client_pkey'),
    sa.UniqueConstraint('tenant_id', 'plugin_id', 'provider', name='unique_trigger_oauth_tenant_client')
    )
    op.create_table('trigger_subscriptions',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuidv7()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Subscription instance name'),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('user_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_id', sa.String(length=255), nullable=False, comment='Provider identifier (e.g., plugin_id/provider_name)'),
    sa.Column('endpoint_id', sa.String(length=255), nullable=False, comment='Subscription endpoint'),
    sa.Column('parameters', sa.JSON(), nullable=False, comment='Subscription parameters JSON'),
    sa.Column('properties', sa.JSON(), nullable=False, comment='Subscription properties JSON'),
    sa.Column('credentials', sa.JSON(), nullable=False, comment='Subscription credentials JSON'),
    sa.Column('credential_type', sa.String(length=50), nullable=False, comment='oauth or api_key'),
    sa.Column('credential_expires_at', sa.Integer(), nullable=False, comment='OAuth token expiration timestamp, -1 for never'),
    sa.Column('expires_at', sa.Integer(), nullable=False, comment='Subscription instance expiration timestamp, -1 for never'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='trigger_provider_pkey'),
    sa.UniqueConstraint('tenant_id', 'provider_id', 'name', name='unique_trigger_provider')
    )
    with op.batch_alter_table('trigger_subscriptions', schema=None) as batch_op:
        batch_op.create_index('idx_trigger_providers_endpoint', ['endpoint_id'], unique=True)
        batch_op.create_index('idx_trigger_providers_tenant_endpoint', ['tenant_id', 'endpoint_id'], unique=False)
        batch_op.create_index('idx_trigger_providers_tenant_provider', ['tenant_id', 'provider_id'], unique=False)

    op.create_table('workflow_plugin_triggers',
    sa.Column('id', models.types.StringUUID(), server_default=sa.text('uuidv7()'), nullable=False),
    sa.Column('app_id', models.types.StringUUID(), nullable=False),
    sa.Column('node_id', sa.String(length=64), nullable=False),
    sa.Column('tenant_id', models.types.StringUUID(), nullable=False),
    sa.Column('provider_id', sa.String(length=255), nullable=False),
    sa.Column('trigger_id', sa.String(length=510), nullable=False),
    sa.Column('triggered_by', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='workflow_plugin_trigger_pkey'),
    sa.UniqueConstraint('app_id', 'node_id', 'triggered_by', name='uniq_plugin_node'),
    sa.UniqueConstraint('trigger_id', 'node_id', name='uniq_trigger_node')
    )
    with op.batch_alter_table('workflow_plugin_triggers', schema=None) as batch_op:
        batch_op.create_index('workflow_plugin_trigger_tenant_idx', ['tenant_id'], unique=False)
        batch_op.create_index('workflow_plugin_trigger_trigger_idx', ['trigger_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workflow_plugin_triggers', schema=None) as batch_op:
        batch_op.drop_index('workflow_plugin_trigger_trigger_idx')
        batch_op.drop_index('workflow_plugin_trigger_tenant_idx')

    op.drop_table('workflow_plugin_triggers')
    with op.batch_alter_table('trigger_subscriptions', schema=None) as batch_op:
        batch_op.drop_index('idx_trigger_providers_tenant_provider')
        batch_op.drop_index('idx_trigger_providers_tenant_endpoint')
        batch_op.drop_index('idx_trigger_providers_endpoint')

    op.drop_table('trigger_subscriptions')
    op.drop_table('trigger_oauth_tenant_clients')
    op.drop_table('trigger_oauth_system_clients')

    # ### end Alembic commands ###
