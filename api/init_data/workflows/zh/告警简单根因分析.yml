app:
  description: ''
  icon: ü§ñ
  icon_background: '#FFEAD5'
  mode: workflow
  name: ÂëäË≠¶ÁÆÄÂçïÊ†πÂõ†ÂàÜÊûê
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: package
  value:
    plugin_unique_identifier: langgenius/deepseek:0.0.5@fd6efd37c2a931911de8ab9ca3ba2da303bef146d45ee87ad896b04b36d09403
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: iteration-start
        targetType: code
      id: 1741497176064start-source-1741497181784-target
      selected: false
      source: 1741497176064start
      sourceHandle: source
      target: '1741497181784'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: iteration
        targetType: llm
      id: 1741497176064-source-1741512806512-target
      selected: false
      source: '1741497176064'
      sourceHandle: source
      target: '1741512806512'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 1741512806512-source-1741502839759-target
      selected: false
      source: '1741512806512'
      sourceHandle: source
      target: '1741502839759'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: end
      id: 1741592094819-source-1741592144815-target
      selected: false
      source: '1741592094819'
      sourceHandle: source
      target: '1741592144815'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1741597274153-source-1741509454645-target
      selected: false
      source: '1741597274153'
      sourceHandle: source
      target: '1741509454645'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: variable-aggregator
      id: 1741597223833-source-1741597274153-target
      selected: false
      source: '1741597223833'
      sourceHandle: source
      target: '1741597274153'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1741599658821-source-1741597274153-target
      selected: false
      source: '1741599658821'
      sourceHandle: source
      target: '1741597274153'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: template-transform
      id: 1742453019576-false-1741592094819-target
      selected: false
      source: '1742453019576'
      sourceHandle: 'false'
      target: '1741592094819'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1742453019576-true-1741599658821-target
      selected: false
      source: '1742453019576'
      sourceHandle: 'true'
      target: '1741599658821'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1742453019576-2949ad86-bdc0-4b1d-bd84-6e01f41915eb-1741597223833-target
      selected: false
      source: '1742453019576'
      sourceHandle: 2949ad86-bdc0-4b1d-bd84-6e01f41915eb
      target: '1741597223833'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1742453019576-74dc1f70-729f-47e1-a6c8-9f0a1d2a6ad9-1742629595400-target
      selected: false
      source: '1742453019576'
      sourceHandle: 74dc1f70-729f-47e1-a6c8-9f0a1d2a6ad9
      target: '1742629595400'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: variable-aggregator
      id: 1742629595400-source-1741597274153-target
      selected: false
      source: '1742629595400'
      sourceHandle: source
      target: '1741597274153'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980720651-source-1742980228913-target
      selected: false
      source: '1742980720651'
      sourceHandle: source
      target: '1742980228913'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980748320-source-1742980318484-target
      selected: false
      source: '1742980748320'
      sourceHandle: source
      target: '1742980318484'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980780865-source-1742547917612-target
      selected: false
      source: '1742980780865'
      sourceHandle: source
      target: '1742547917612'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980837261-source-1742798505742-target
      selected: false
      source: '1742980837261'
      sourceHandle: source
      target: '1742798505742'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980885557-source-1741502699500-target
      selected: false
      source: '1742980885557'
      sourceHandle: source
      target: '1741502699500'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430595109950-source-17430595158080-target
      selected: false
      source: '17430595109950'
      sourceHandle: source
      target: '17430595158080'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430597987060-source-17430598152780-target
      selected: false
      source: '17430597987060'
      sourceHandle: source
      target: '17430598152780'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430598907140-source-17430598942980-target
      selected: false
      source: '17430598907140'
      sourceHandle: source
      target: '17430598942980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430610599980-source-17430610640640-target
      selected: false
      source: '17430610599980'
      sourceHandle: source
      target: '17430610640640'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430610719970-source-17430610756270-target
      selected: false
      source: '17430610719970'
      sourceHandle: source
      target: '17430610756270'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17430610640640-source-1744255998058-target
      selected: false
      source: '17430610640640'
      sourceHandle: source
      target: '1744255998058'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17430598942980-source-17442560822670-target
      selected: false
      source: '17430598942980'
      sourceHandle: source
      target: '17442560822670'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1744287265980-source-1744290470304-target
      selected: false
      source: '1744287265980'
      sourceHandle: source
      target: '1744290470304'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443357899060-source-17443388433580-target
      selected: false
      source: '17443357899060'
      sourceHandle: source
      target: '17443388433580'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443357893440-source-17443388421360-target
      selected: false
      source: '17443357893440'
      sourceHandle: source
      target: '17443388421360'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 17443388421360-source-17430596469370-target
      selected: false
      source: '17443388421360'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443357536900-source-17443388438160-target
      selected: false
      source: '17443357536900'
      sourceHandle: source
      target: '17443388438160'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443356883380-source-17443388443000-target
      selected: false
      source: '17443356883380'
      sourceHandle: source
      target: '17443388443000'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1744290470304-source-17430596469370-target
      selected: false
      source: '1744290470304'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1742798505742-source-1744342068305-target
      selected: false
      source: '1742798505742'
      sourceHandle: source
      target: '1744342068305'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1742547917612-source-1744342138380-target
      selected: false
      source: '1742547917612'
      sourceHandle: source
      target: '1744342138380'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342478278-source-1744342609856-target
      selected: false
      source: '1744342478278'
      sourceHandle: source
      target: '1744342609856'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342609856-source-1741506766037-target
      selected: false
      source: '1744342609856'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342426374-source-1744342800777-target
      selected: false
      source: '1744342426374'
      sourceHandle: source
      target: '1744342800777'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342800777-source-1741506766037-target
      selected: false
      source: '1744342800777'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342372882-source-1744342846753-target
      selected: false
      source: '1744342372882'
      sourceHandle: source
      target: '1744342846753'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342846753-source-1741506766037-target
      selected: false
      source: '1744342846753'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342309386-source-1744342890395-target
      selected: false
      source: '1744342309386'
      sourceHandle: source
      target: '1744342890395'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342890395-source-1741506766037-target
      selected: false
      source: '1744342890395'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342244843-source-1744342920172-target
      selected: false
      source: '1744342244843'
      sourceHandle: source
      target: '1744342920172'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342920172-source-1741506766037-target
      selected: false
      source: '1744342920172'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 1742807803325-source-1742453019576-target
      selected: false
      source: '1742807803325'
      sourceHandle: source
      target: '1742453019576'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1744255998058-source-1745323059455-target
      selected: false
      source: '1744255998058'
      sourceHandle: source
      target: '1745323059455'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1745323059455-source-1744287265980-target
      selected: false
      source: '1745323059455'
      sourceHandle: source
      target: '1744287265980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1745323078946-source-17443356883380-target
      selected: false
      source: '1745323078946'
      sourceHandle: source
      target: '17443356883380'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430610756270-source-1745323078946-target
      selected: false
      source: '17430610756270'
      sourceHandle: source
      target: '1745323078946'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430595158080-source-1745323114690-target
      selected: false
      source: '17430595158080'
      sourceHandle: source
      target: '1745323114690'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1745323114690-source-17443357899060-target
      selected: false
      source: '1745323114690'
      sourceHandle: source
      target: '17443357899060'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430598152780-source-1745323119371-target
      selected: false
      source: '17430598152780'
      sourceHandle: source
      target: '1745323119371'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1745323119371-source-17443357893440-target
      selected: false
      source: '1745323119371'
      sourceHandle: source
      target: '17443357893440'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17442560822670-source-1745323124559-target
      selected: false
      source: '17442560822670'
      sourceHandle: source
      target: '1745323124559'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1745323124559-source-17443357536900-target
      selected: false
      source: '1745323124559'
      sourceHandle: source
      target: '17443357536900'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980228913-source-1745325937486-target
      source: '1742980228913'
      sourceHandle: source
      target: '1745325937486'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745325937486-source-1744342244843-target
      source: '1745325937486'
      sourceHandle: source
      target: '1744342244843'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980318484-source-1745326017289-target
      source: '1742980318484'
      sourceHandle: source
      target: '1745326017289'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1744342138380-source-1745326029444-target
      source: '1744342138380'
      sourceHandle: source
      target: '1745326029444'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1744342068305-source-1745326038950-target
      source: '1744342068305'
      sourceHandle: source
      target: '1745326038950'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1741502699500-source-1745326055068-target
      source: '1741502699500'
      sourceHandle: source
      target: '1745326055068'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326017289-source-1744342309386-target
      source: '1745326017289'
      sourceHandle: source
      target: '1744342309386'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326029444-source-1744342372882-target
      source: '1745326029444'
      sourceHandle: source
      target: '1744342372882'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326038950-source-1744342426374-target
      source: '1745326038950'
      sourceHandle: source
      target: '1744342426374'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326055068-source-1744342478278-target
      source: '1745326055068'
      sourceHandle: source
      target: '1744342478278'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: llm
        targetType: iteration
      id: 17430596469370-source-1741497176064-target
      source: '17430596469370'
      sourceHandle: source
      target: '1741497176064'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980720651-target
      source: '1741497181784'
      sourceHandle: source
      target: '1742980720651'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980748320-target
      source: '1741497181784'
      sourceHandle: source
      target: '1742980748320'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980780865-target
      source: '1741497181784'
      sourceHandle: source
      target: '1742980780865'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980837261-target
      source: '1741497181784'
      sourceHandle: source
      target: '1742980837261'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980885557-target
      source: '1741497181784'
      sourceHandle: source
      target: '1742980885557'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17443388433580-source-1745388058502-target
      source: '17443388433580'
      sourceHandle: source
      target: '1745388058502'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: llm
      id: 1745388058502-source-17430596469370-target
      source: '1745388058502'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17443388438160-source-17453881280910-target
      source: '17443388438160'
      sourceHandle: source
      target: '17453881280910'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: llm
      id: 17453881280910-source-17430596469370-target
      source: '17453881280910'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17443388443000-source-17453881639600-target
      source: '17443388443000'
      sourceHandle: source
      target: '17453881639600'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: llm
      id: 17453881639600-source-17430596469370-target
      source: '17453881639600'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: code
      id: 1741227526517-source-1742807803325-target
      source: '1741227526517'
      sourceHandle: source
      target: '1742807803325'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 1741509454645-source-1745494305165-target
      source: '1741509454645'
      sourceHandle: source
      target: '1745494305165'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1745494305165-true-17430589567120-target
      source: '1745494305165'
      sourceHandle: 'true'
      target: '17430589567120'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: template-transform
      id: 1745494305165-false-1745494335273-target
      source: '1745494305165'
      sourceHandle: 'false'
      target: '1745494335273'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: end
      id: 1745494335273-source-1745494338512-target
      source: '1745494335273'
      sourceHandle: source
      target: '1745494338512'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-true-1747355986489-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'true'
      target: '1747355986489'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 17430589567120-source-1747355869184-target
      source: '17430589567120'
      sourceHandle: source
      target: '1747355869184'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430598907140-target
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430598907140'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430595109950-target
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430595109950'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430610719970-target
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430610719970'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430610599980-target
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430610599980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-true-17473562733380-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'true'
      target: '17473562733380'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17473562733380-source-17473564454180-target
      source: '17473562733380'
      sourceHandle: source
      target: '17473564454180'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 1747355986489-source-17473564423850-target
      source: '1747355986489'
      sourceHandle: source
      target: '17473564423850'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430597987060-target
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430597987060'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17473564423850-source-1747356893645-target
      source: '17473564423850'
      sourceHandle: source
      target: '1747356893645'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17473564454180-source-1747356923703-target
      source: '17473564454180'
      sourceHandle: source
      target: '1747356923703'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1747356893645-source-17473569800940-target
      source: '1747356893645'
      sourceHandle: source
      target: '17473569800940'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1747356923703-source-17473569800940-target
      source: '1747356923703'
      sourceHandle: source
      target: '17473569800940'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 17473569800940-source-1747357345949-target
      source: '17473569800940'
      sourceHandle: source
      target: '1747357345949'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: start
        type: start
        variables:
        - label: startTime
          max_length: 48
          options: []
          required: true
          type: number
          variable: startTime
        - label: endTime
          max_length: 48
          options: []
          required: true
          type: number
          variable: endTime
        - label: params
          max_length: 9999999
          options: []
          required: false
          type: paragraph
          variable: params
        - label: nodeName
          max_length: 256
          options: []
          required: false
          type: text-input
          variable: nodeName
        - label: nodeIp
          max_length: 48
          options: []
          required: false
          type: text-input
          variable: nodeIp
      height: 193
      id: '1741227526517'
      position:
        x: 30
        y: 359
      positionAbsolute:
        x: 30
        y: 359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 1408
        is_parallel: false
        iterator_selector:
        - '1741509454645'
        - monitor
        output_selector:
        - '1741506766037'
        - text
        output_type: array[string]
        parallel_nums: 10
        selected: false
        start_node_id: 1741497176064start
        title: iteration
        type: iteration
        width: 6503.360125927147
      height: 1408
      id: '1741497176064'
      position:
        x: 5181
        y: 904
      positionAbsolute:
        x: 5181
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 6503
      zIndex: 1
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1741497176064start
      parentId: '1741497176064'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 5205
        y: 972
      selectable: false
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    data = json.loads(arg1)\n    return\
          \ {\n        \"pod\": data.get(\"pod\", \"\"),\n        \"namespace\": data.get(\"\
          namespace\", \"\"),\n        \"pid\": data.get(\"pid\", \"\")\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          namespace:
            children: null
            type: string
          pid:
            children: null
            type: string
          pod:
            children: null
            type: string
        selected: false
        title: get instance info
        type: code
        variables:
        - value_selector:
          - '1741497176064'
          - item
          variable: arg1
      height: 53
      id: '1741497181784'
      parentId: '1741497176064'
      position:
        x: 247.70722025930104
        y: 65
      positionAbsolute:
        x: 5428.707220259301
        y: 969
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container CPU throttling duration (when using Containerd container
          runtime, statistics by container and Pod)
        tool_configurations: {}
        tool_label: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_name: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1741502699500'
      parentId: '1741497176064'
      position:
        x: 844.0068118865438
        y: 800.2561082923241
      positionAbsolute:
        x: 6025.006811886544
        y: 1704.2561082923241
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741512806512'
          - text
          variable: text
        - value_selector: []
          variable: ''
        selected: false
        title: End
        type: end
      height: 89
      id: '1741502839759'
      position:
        x: 12047
        y: 904
      positionAbsolute:
        x: 12047
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        model:
          completion_params:
            temperature: 0.6
          mode: chat
          name: deepseek-chat
          provider: langgenius/deepseek/deepseek
        prompt_template:
        - id: cd35fff4-a037-4e72-af99-2ff8299fc5d2
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: 2b2ad468-efcd-4bcc-aeb9-d53d2f2770ad
          role: user
          text: "# ÂàÜÊûêÁõÆÊ†á  \nÂü∫‰∫éË∑®ËµÑÊ∫êÁ±ªÂà´ÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÊçÆÔºåÂà§Êñ≠Â∫îÁî®ÂÆû‰æã {{#1741497181784.pod#}}ÊòØÂê¶ÂèóÂëäË≠¶‰∫ã‰ª∂ {{#1742807803325.alertName#}}\
            \ ÂΩ±ÂìçÔºåÂπ∂ËøõË°åÂàùÊ≠•Ê†πÂõ†ÂÆö‰Ωç„ÄÇ  \n\n# ËæìÂÖ•Êï∞ÊçÆËßÑËåÉ  \n- **ÂàÜËµÑÊ∫êÁ±ªÂà´Êï∞ÊçÆ**ÔºöÁ∫øÁ®ãÂª∂ËøüÂèäÂÖ≥ËÅîÁöÑÂåóÊûÅÊòüÊåáÊ†áÔºàÂ¶ÇÁΩëÁªúÁ±ªÂª∂ËøüÂØπÂ∫îÁΩëÁªúRTTÔºâ„ÄÇ\
            \  \n- **ÂºÇÂ∏∏Êï∞ÊçÆÁÇπËÆ°Êï∞**ÔºöÂª∂ËøüË∂ÖËøáÂêåÁ±ªÂûãÁ∫øÁ®ãÂéÜÂè≤ÂùáÂÄº20%ÁöÑÂÆû‰æãÊï∞ÔºåÈúÄÊ†áÊ≥®Á∫øÁ®ãÂª∂ËøüÂùáÂÄº„ÄÇ  \n\n# ÂàÜÊûêËßÑÂàô  \n1. **‰∏ªÂºÇÂ∏∏ÊñπÂêëÂà§ÂÆö**\
            \  \n   - Ê†áÊ≥®ÂºÇÂ∏∏Á∫øÁ®ãÁöÑÂª∂ËøüÂùáÂÄº„ÄÇ  \n   - ËØÜÂà´Âª∂ËøüÂ¢ûÂπÖÊúÄÊòæËëóÁöÑËµÑÊ∫êÁ±ªÂûãÔºàÂ¶ÇÂª∂Ëøü‰ªéÊØ´ÁßíÁ∫ßË∑ÉÂçáËá≥ÁßíÁ∫ßÔºâ„ÄÇ  \n   - **Á∫øÁ®ãÊï∞Èáè‰ºòÂÖàÂéüÂàô**ÔºöËã•ÊüêËµÑÊ∫êÁ±ªÂûãÔºàÂ¶ÇÁΩëÁªú/epollÔºâÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÈáèÊúÄÂ§öÔºåÂàôÂΩíÂõ†Ëá≥ËØ•Á±ªÂà´„ÄÇ\
            \  \n     *Á§∫‰æãÔºöÁΩëÁªú/epollÁ±ªÂºÇÂ∏∏Á∫øÁ®ã4Êù° vs CPUÁ±ª2Êù° ‚Üí ÂΩíÂõ†‰∏∫ÁΩëÁªúÈóÆÈ¢ò„ÄÇ*  \n\n2. **ËØØÂà§ËßÑÈÅø** \
            \ \n   - Ëã•CPUÊàñËøêË°åÈòüÂàóÔºàRunQÔºâÂª∂ËøüÁ™ÅÂ¢û‰∏îÊó†Âπ∂ÂèëÁΩëÁªú/epollÂºÇÂ∏∏Ôºå‰ºòÂÖàÂΩíÂõ†‰∏∫CPUËµÑÊ∫ê‰∫âÁî®„ÄÇ  \n\n3. **ÂÜ≥ËÉú‰ºòÂÖàÁ∫ßÔºàÈôçÂ∫èÔºâ**\
            \  \n   `CPU > ÁΩëÁªú > Epoll > Êñá‰ª∂ > RunQ`  \n\n# Ê†πÂõ†ÂΩíÂõ†‰∏éÂª∫ËÆÆ  \n- **CPUÂª∂ËøüÁ™ÅÂ¢û**ÔºöÊ£ÄÊü•‰ª£Á†ÅËøáÂ∫¶ÂµåÂ•óÈóÆÈ¢òÔºåÁ°ÆËÆ§ÂêéÊâßË°åÁâàÊú¨ÂõûÊªö„ÄÇ\
            \  \n- **CPUÊä¢Âç†ËøáÈ´ò**ÔºöÊéíÊü•ÂêåËäÇÁÇπËøõÁ®ãÁöÑËµÑÊ∫ê‰∫âÁî®„ÄÇ  \n- **ÁΩëÁªú/EpollÂª∂ËøüÁ™ÅÂ¢û**Ôºö  \n  - Ëã•RTTÂºÇÂ∏∏\
            \ ‚Üí ÁΩëÁªúÈìæË∑ØÈóÆÈ¢òÔºõ  \n  - Ëã•RTTÊ≠£Â∏∏ ‚Üí ‰∏ãÊ∏∏ÊúçÂä°Âª∂ËøüÈóÆÈ¢ò„ÄÇ  \n- **Êñá‰ª∂Êìç‰ΩúÂª∂ËøüÂçáÈ´ò**ÔºöÂÆ°ËÆ°Êñá‰ª∂Âè•ÊüÑÊ≥ÑÊºè„ÄÇ  \n\n\
            # ËæìÂá∫Ê†ºÂºè  \n**Â∫îÁî®ÂÆû‰æã**: {{#1741497181784.pod#}}\n**ÂåóÊûÅÊòüÊåáÊ†áË∂ãÂäøÊëòË¶Å**  \n- ÊåâÊåáÊ†áÁª¥Â∫¶ÊèèËø∞ÊòæËëóÂèòÂåñÔºåËã•Êó†ÂºÇÂ∏∏Ê†áÊ≥®\"\
            Êú™ËßÇÊµãÂà∞ÊòæËëóÂÅèÁ¶ª\"„ÄÇ  \n\n**ÂàùÊ≠•Ê†πÂõ†ÁªìËÆ∫**  \n- ÊòéÁ°ÆÂëäË≠¶‰∫ã‰ª∂ÂØπÂ∫îÁî®ÁöÑÂΩ±ÂìçÁä∂ÊÄÅ„ÄÇ  \n- Âü∫‰∫éÂåóÊûÅÊòüÊåáÊ†á‰∏éÂàÜÊûêËßÑÂàôËæìÂá∫Âçï‰∏ÄÂΩíÂõ†ÁªìËÆ∫„ÄÇ\
            \  \n  *Ê≥®ÔºöËã•ÁΩëÁªú/EpollÁ±ªÂºÇÂ∏∏‰ΩÜRTTÊ≠£Â∏∏ÔºåÂΩíÂõ†‰∏∫‰∏ãÊ∏∏ÊúçÂä°Âª∂Ëøü„ÄÇ*  \n\n# ËæìÂÖ•Êï∞ÊçÆ  \n- CPUÔºö{{#1744342920172.result#}}\n\
            - ÁΩëÁªúÔºö{{#1744342846753.result#}}\n- Êñá‰ª∂Ôºö{{#1744342890395.result#}} \n- EpollÔºö{{#1744342800777.result#}}\
            \ \n- RunQÔºö{{#1744342609856.result#}}  \n\n# ËæìÂá∫ÂáÜÂàô  \n- ‰ΩøÁî®ÁÆÄÊ¥ÅÁöÑÈùûÊäÄÊúØË°®Ëø∞ÔºåÈÅøÂÖçÊ≠ß‰πâ„ÄÇ\
            \  \n- ÁªìËÆ∫ÈúÄËÅöÁÑ¶ÂèØÊâßË°åÂª∫ËÆÆÔºàÂ¶Ç\"Ê£ÄÊü•‰ª£Á†ÅÂµåÂ•ó\"ËÄåÈùû\"ÂèØËÉΩÂ≠òÂú®ÊÄßËÉΩÈóÆÈ¢ò\"Ôºâ„ÄÇ"
        selected: false
        title: it llm analysis root cause
        type: llm
        variables: []
        vision:
          enabled: false
      height: 95
      id: '1741506766037'
      parentId: '1741497176064'
      position:
        x: 3100.843852684704
        y: 616.9747534648541
      positionAbsolute:
        x: 8281.843852684704
        y: 1520.974753464854
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef main(arg: str) -> dict:\n    data = json.loads(arg)\n\
          \    timeseries = data[\"data\"][\"timeseries\"]\n    \n    seen = set()\n\
          \    pod_info = []\n    first_pod = \"{}\"\n    \n    for item in timeseries:\n\
          \        labels = item[\"labels\"]\n        namespace = labels.get(\"namespace\"\
          , \"\")\n        pod = labels.get(\"pod\", \"\")\n        pid = labels.get(\"\
          pid\", \"\")\n        node = labels.get(\"node\", \"\")\n        if pid\
          \ == '1':\n            continue\n \n        unique_key = (namespace, pod,\
          \ pid)\n        \n        if unique_key not in seen:\n            seen.add(unique_key)\n\
          \            info = {\n                \"namespace\": namespace,\n     \
          \           \"pod\": pod,\n                \"pid\": pid,\n             \
          \   \"node\": node\n            }\n            if first_pod == '{}':\n \
          \               first_pod = json.dumps(info)\n            else:\n      \
          \        pod_info.append(json.dumps(info))\n            \n    return {\n\
          \        \"first\": first_pod,\n        \"monitor\": pod_info,\n    }"
        code_language: python3
        desc: ''
        outputs:
          first:
            children: null
            type: string
          monitor:
            children: null
            type: array[string]
        selected: false
        title: ' get pod info array'
        type: code
        variables:
        - value_selector:
          - '1741597274153'
          - output
          variable: arg
      height: 53
      id: '1741509454645'
      position:
        x: 1545
        y: 543
      positionAbsolute:
        x: 1545
        y: 543
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.6
          mode: chat
          name: deepseek-chat
          provider: langgenius/deepseek/deepseek
        prompt_template:
        - id: 169877de-aa4a-44db-90ef-2cc8f68882c4
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: c9d29276-dfa5-4042-b1c6-562260f9cc7c
          role: user
          text: '# ÁõÆÁöÑ

            Âü∫‰∫éÊúçÂä°Â±ÇÁ∫ßËÅöÂêàPod‰ø°ÊÅØÂπ∂ËæìÂá∫ÊúçÂä°Á∫ßÊ¶ÇËßàÊä•Âëä„ÄÇÈúÄÁ°Æ‰øùÂêÑPodÂÖ∑‰ΩìËøêË°åÁä∂ÊÄÅÁöÑÂèØËßÜÂåñÂëàÁé∞Ê∏ÖÊô∞Áõ¥ËßÇ„ÄÇ

            ÂêåÊó∂Âú®ÂéüÊúâÁöÑÁªìËÆ∫Âü∫Á°Ä‰∏äÔºåÈíàÂØπÂºÇÂ∏∏Á∫øÁ®ãÊúÄÂ§öÁöÑÊ†πÂõ†ÊñπÂêëÁªôÂá∫ÂÖ∑‰ΩìÊâßË°åËß£ÂÜ≥ÈóÆÈ¢òÁöÑÂª∫ËÆÆÂíå‰∏éÈóÆÈ¢òÁõ∏ÂÖ≥ÁöÑÈúÄË¶ÅÊâßË°åÁöÑÂëΩ‰ª§„ÄÇ

            ÊØîÂ¶ÇÔºö

            Ê†πÂõ†‰∏∫CPUÔºö‰ΩøÁî®top -H -p <PID>Êü•ÁúãÂç†Áî®Ôºåpidstat -t -p <PID> 1Êü•Áúã‰ΩøÁî®ÁéáÁ≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫NETÔºöss -sÊü•ÁúãÂÖ®Â±ÄsocketÁä∂ÊÄÅÔºåss -tunapÊü•ÁúãÊâÄÊúâTCP/UDPËøûÊé•Ôºånstat -z Êü•ÁúãÈáç‰º†Á≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫EPOLLÔºöstrace -e epoll_wait,epoll_pwait -tt -T -p <PID>ËøΩË∏™epollË∞ÉÁî®ËÄóÊó∂Ôºåperf
            trace -e epoll:*Êü•ÁúãepollÁõ∏ÂÖ≥‰∫ã‰ª∂Á≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫RUNQÔºödstat -l 1 Êü•ÁúãÁ≥ªÁªüË¥üËΩΩÔºåmpstat -P ALL 1Êü•ÁúãCPUÁöÑ%idleÂíå%utilÁ≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫FILEÔºöiotop -o -p <PID>Êü•ÁúãËøõÁ®ãÁ∫ßÁ£ÅÁõòIOÔºåstrace -e trace=file -tt -T -p <PID>Êü•ÁúãÊñá‰ª∂Áõ∏ÂÖ≥ÁöÑÁ≥ªÁªüË∞ÉÁî®Á≠âÂëΩ‰ª§


            # Ê≥®ÊÑè‰∫ãÈ°π

            1. ÁªìËÆ∫‰∏≠Ëã•CPUÁõ∏ÂÖ≥ÂëäË≠¶‰∫ã‰ª∂ÁªºÂêàÂΩ±ÂìçÁ≥ªÊï∞ËæÉÈ´òÔºåÂ∫î‰ºòÂÖàÊåáÂØºÂ§ÑÁêÜCPUËµÑÊ∫êÁì∂È¢à

            2. ÈááÁî®Ê†ëÁä∂Â±ÇÁ∫ßÂåñËæìÂá∫Ê†ºÂºèÔºåÊúçÂä°Á∫ßÊ±áÊÄªÊåáÊ†á‰∏éPodÊòéÁªÜÊåáÊ†áÈúÄÈÄöËøáÁº©ËøõÂΩ¢ÊàêÊ∏ÖÊô∞ÁªßÊâøÂÖ≥Á≥ª

            3. Ê†∏ÂøÉÈªÑÈáëÊåáÊ†áÔºàCPU„ÄÅepoll„ÄÅnet„ÄÅother/runqÔºâÂëΩÂêç‰∏•Ê†º‰øùÊåÅÂéüÂßãÂΩ¢ÊÄÅ

            4. ÊïÖÈöúÂΩíÂõ†ÂàÜÊûêÈúÄ‰øùÊåÅÂçï‰∏ÄÁª¥Â∫¶ÔºåÁ¶ÅÊ≠¢ÊûÑÂª∫Ë∑®Áª¥Â∫¶ÂÖ≥ËÅîÔºàÂ¶ÇGC‰∏éÈîÅÁ´û‰∫âÔºâ

            5. ÂΩìÁΩëÁªúÊ†àËÄóÊó∂(net)ÂºÇÂ∏∏Â¢ûÈ´ò‰ΩÜÂæÄËøîÊó∂Âª∂(RTT)Â§Ñ‰∫éÂü∫Á∫øËåÉÂõ¥Êó∂ÔºåÈúÄÈáçÁÇπÊèêÁ§∫Ê£ÄÊü•‰∏ãÊ∏∏‰æùËµñÊúçÂä°

            6. Â¶ÇÊûúÁΩëÁªúËÄóÊó∂Â¢ûÂä†Ôºå‰ΩÜ RTT Ê≠£Â∏∏ÔºåÂª∫ËÆÆÁî®Êà∑Ê£ÄÊü•‰∏ãÊ∏∏ÈóÆÈ¢ò


            # ÁªìËÆ∫Êï∞ÊçÆÊ∫ê

            {{#17430596469370.text#}}

            {{#1741497176064.output#}}

            '
        selected: false
        title: summary data
        type: llm
        variables: []
        vision:
          enabled: false
      height: 95
      id: '1741512806512'
      position:
        x: 11744
        y: 904
      positionAbsolute:
        x: 11744
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: ÊúçÂä°ÂêçÂíåËäÇÁÇπÂùá‰∏∫Á©∫ÔºåÊó†Ê≥ïÂàÜÊûêÊ†πÂõ†„ÄÇ
        title: unsupport alert
        type: template-transform
        variables: []
      height: 53
      id: '1741592094819'
      position:
        x: 939
        y: 359
      positionAbsolute:
        x: 939
        y: 359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741592094819'
          - output
          variable: output
        selected: false
        title: End
        type: end
      height: 89
      id: '1741592144815'
      position:
        x: 1242
        y: 359
      positionAbsolute:
        x: 1242
        y: 359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified service name
            ja_JP: Specified service name
            pt_BR: Specified service name
            zh_Hans: ÊåáÂÆöÁöÑÊúçÂä°Âêç
          label:
            en_US: service_name
            ja_JP: service_name
            pt_BR: service_name
            zh_Hans: service_name
          llm_description: Specified service name
          max: null
          min: null
          name: service_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          service_name: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: query pod info by service
        tool_configurations: {}
        tool_label: ÂàóÂá∫ËØ•ÊúçÂä°‰∏ãÁöÑÊâÄÊúâÂÆû‰æã
        tool_name: originx_service_instance
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          service_name:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1741597223833'
      position:
        x: 939
        y: 451
      positionAbsolute:
        x: 939
        y: 451
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: string
        selected: false
        title: summary instance
        type: variable-aggregator
        variables:
        - - '1741597223833'
          - text
        - - '1741599658821'
          - result
        - - '1742629595400'
          - text
      height: 152
      id: '1741597274153'
      position:
        x: 1242
        y: 511.5
      positionAbsolute:
        x: 1242
        y: 511.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str, arg2: str, arg3: str) -> dict:\n    data = {\n\
          \        \"data\": {\n            \"timeseries\": [\n                {\n\
          \                    \"labels\": {\n                        \"namespace\"\
          : arg2,\n                        \"pod\": arg1,\n                      \
          \  \"pid\": arg3,\n                    }\n                }\n          \
          \  ]\n        }\n    }\n    return {\n        \"result\": json.dumps(data),\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: get pod info
        type: code
        variables:
        - value_selector:
          - '1742807803325'
          - pod
          variable: arg1
        - value_selector:
          - '1742807803325'
          - namespace
          variable: arg2
        - value_selector:
          - '1742807803325'
          - pid
          variable: arg3
      height: 53
      id: '1741599658821'
      position:
        x: 939
        y: 543
      positionAbsolute:
        x: 939
        y: 543
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: 22866ae7-2bfa-47e9-9c19-d31e8b63001f
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - pod
          - comparison_operator: not empty
            id: add89997-787b-4d71-a187-3e9f8e8f25a3
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - namespace
          - comparison_operator: not empty
            id: 21b420f6-cac6-4cf3-88b4-69ce01140ef8
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - pid
          id: 'true'
          logical_operator: or
        - case_id: 2949ad86-bdc0-4b1d-bd84-6e01f41915eb
          conditions:
          - comparison_operator: not empty
            id: 4dbbe62a-669f-4549-9028-c4ccd6c8175c
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - service
          id: 2949ad86-bdc0-4b1d-bd84-6e01f41915eb
          logical_operator: and
        - case_id: 74dc1f70-729f-47e1-a6c8-9f0a1d2a6ad9
          conditions:
          - comparison_operator: not empty
            id: a2f849d6-0c4f-40f0-9c91-f37cf81eb3f5
            value: ''
            varType: string
            variable_selector:
            - '1741227526517'
            - nodeName
          id: 74dc1f70-729f-47e1-a6c8-9f0a1d2a6ad9
          logical_operator: and
        desc: ''
        selected: false
        title: alert instance info
        type: if-else
      height: 273
      id: '1742453019576'
      position:
        x: 636
        y: 359
      positionAbsolute:
        x: 636
        y: 359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Query container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742547917612'
      parentId: '1741497176064'
      position:
        x: 837.913049217997
        y: 567.6173152328563
      positionAbsolute:
        x: 6018.9130492179975
        y: 1471.6173152328563
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified node name
            ja_JP: Specified node name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑ‰∏ªÊú∫ÂêçÁß∞
          label:
            en_US: node_name
            ja_JP: node_name
            pt_BR: node_name
            zh_Hans: node_name
          llm_description: Specified pod name
          max: null
          min: null
          name: node_name
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified Process ID
            ja_JP: Specified Process ID
            pt_BR: Specified Process ID
            zh_Hans: ÊåáÂÆöÁöÑËøõÁ®ãID
          label:
            en_US: pid
            ja_JP: pid
            pt_BR: pid
            zh_Hans: pid
          llm_description: Specified Process ID
          max: null
          min: null
          name: pid
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          node_name: ''
          pid: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: get pod info in node
        tool_configurations: {}
        tool_label: Thread Polaris Metrics Process All monitor
        tool_name: originx_service_monitor
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          node_name:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742629595400'
      position:
        x: 939
        y: 635
      positionAbsolute:
        x: 939
        y: 635
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Query container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742798505742'
      parentId: '1741497176064'
      position:
        x: 838.2707565556775
        y: 677.0915533804653
      positionAbsolute:
        x: 6019.2707565556775
        y: 1581.0915533804653
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def get_value(data, keys): \n  for key in keys: \n    value = data.get(key)\
          \ \n    if value is not None: \n      return value \n  return \"\" \n\n\
          import json \n\ndef main(arg: str, node: str) -> dict:\n  data = json.loads(arg)\
          \ \n  return { \n  \"alertName\": get_value(data, [\"alertName\"]),    \
          \  \n  \"service\": get_value(data, [\"svc_name\", \"service\"]), \n  \"\
          endpoint\": get_value(data,[\"endpoint\", \"content_key\"]), \n  \"pod\"\
          : get_value(data,[\"pod\", \"src_pod\", \"pod_name\"]), \n  \"namespace\"\
          : get_value(data,[\"namespace\", \"src_namespace\"]),\n  \"pid\": get_value(data,[\"\
          pid\"]),\n  \"node\": node if node else get_value(data,[\"node\", \"nodeName\"\
          , \"node_name\"]),\n  \"containerId\": get_value(data,[\"containerId\",\
          \ \"container_id\"]),\n}"
        code_language: python3
        desc: ''
        outputs:
          alertName:
            children: null
            type: string
          containerId:
            children: null
            type: string
          endpoint:
            children: null
            type: string
          namespace:
            children: null
            type: string
          node:
            children: null
            type: string
          pid:
            children: null
            type: string
          pod:
            children: null
            type: string
          service:
            children: null
            type: string
        selected: false
        title: get alert event label info
        type: code
        variables:
        - value_selector:
          - '1741227526517'
          - params
          variable: arg
        - value_selector:
          - '1741227526517'
          - nodeName
          variable: node
      height: 53
      id: '1742807803325'
      position:
        x: 334.5801129819097
        y: 359
      positionAbsolute:
        x: 334.5801129819097
        y: 359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container CPU usage rate (Containerd runtime, aggregated by container
          and Pod)
        tool_configurations: {}
        tool_label: Container CPU usage rate (Containerd runtime, aggregated by container
          and Pod)
        tool_name: ÂÆπÂô®CPU‰ΩøÁî®Áéá(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742980228913'
      parentId: '1741497176064'
      position:
        x: 817.3433448742644
        y: 386.77445077825655
      positionAbsolute:
        x: 5998.343344874264
        y: 1290.7744507782566
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container disk read time per second (Containerd runtime, aggregated
          by container and Pod)
        tool_configurations: {}
        tool_label: Container disk read time per second (Containerd runtime, aggregated
          by container and Pod)
        tool_name: ÂÆπÂô®Á£ÅÁõòËØªÂèñËÄóÊó∂ÊØèÁßí(‰ΩøÁî®Containerd,ÊåâPodÂíåÂÆπÂô®ÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742980318484'
      parentId: '1741497176064'
      position:
        x: 829.6661633624499
        y: 478.0639330308825
      positionAbsolute:
        x: 6010.66616336245
        y: 1382.0639330308825
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in CPU
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742980720651'
      parentId: '1741497176064'
      position:
        x: 563.9711290826226
        y: 320.3569405139135
      positionAbsolute:
        x: 5744.971129082623
        y: 1224.3569405139135
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in file
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742980748320'
      parentId: '1741497176064'
      position:
        x: 555.0492745306183
        y: 435.2337750194638
      positionAbsolute:
        x: 5736.049274530618
        y: 1339.2337750194638
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in net
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742980780865'
      parentId: '1741497176064'
      position:
        x: 539.4805129111201
        y: 551.2424325586171
      positionAbsolute:
        x: 5720.48051291112
        y: 1455.242432558617
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in epoll
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742980837261'
      parentId: '1741497176064'
      position:
        x: 513.7505744250511
        y: 675.3340235425774
      positionAbsolute:
        x: 5694.750574425051
        y: 1579.3340235425774
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in runq
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1742980885557'
      parentId: '1741497176064'
      position:
        x: 514.5915555600113
        y: 800.5850619112191
      positionAbsolute:
        x: 5695.591555560011
        y: 1704.585061911219
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    data = json.loads(arg1)\n    return\
          \ {\n        \"pod\": data.get(\"pod\", \"\"),\n        \"namespace\": data.get(\"\
          namespace\", \"\"),\n        \"pid\": data.get(\"pid\", \"\")\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          namespace:
            children: null
            type: string
          pid:
            children: null
            type: string
          pod:
            children: null
            type: string
        selected: false
        title: POD info
        type: code
        variables:
        - value_selector:
          - '1741509454645'
          - first
          variable: arg1
      height: 53
      id: '17430589567120'
      position:
        x: 2151
        y: 702
      positionAbsolute:
        x: 2151
        y: 702
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on CPU (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430595109950'
      position:
        x: 3060
        y: 904
      positionAbsolute:
        x: 3060
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: container cpu
        tool_configurations: {}
        tool_label: Container CPU usage rate (Containerd runtime, aggregated by container
          and Pod)
        tool_name: ÂÆπÂô®CPU‰ΩøÁî®Áéá(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430595158080'
      position:
        x: 3363
        y: 904
      positionAbsolute:
        x: 3363
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        model:
          completion_params:
            temperature: 0.6
          mode: chat
          name: deepseek-chat
          provider: langgenius/deepseek/deepseek
        prompt_template:
        - id: cd35fff4-a037-4e72-af99-2ff8299fc5d2
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: 2b2ad468-efcd-4bcc-aeb9-d53d2f2770ad
          role: user
          text: "# ÂàÜÊûêÁõÆÊ†á\nÂü∫‰∫éË∑®ËµÑÊ∫êÁ±ªÂà´ÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÊçÆÔºåÂà§Êñ≠Â∫îÁî®ÂÆû‰æã{{#17430589567120.pod#}}ÊòØÂê¶ÂèóÂëäË≠¶‰∫ã‰ª∂{{#1742807803325.alertName#}}ÂΩ±ÂìçÔºåÂπ∂ËøõË°åÂàùÊ≠•Ê†πÂõ†ÂÆö‰Ωç„ÄÇ\n\
            \n# ËæìÂÖ•Êï∞ÊçÆËßÑËåÉ\n- **ÂàÜËµÑÊ∫êÁ±ªÂà´Êï∞ÊçÆ**ÔºöÁ∫øÁ®ãÂª∂ËøüÂèäÂÖ≥ËÅîÁöÑÂåóÊûÅÊòüÊåáÊ†áÔºàÂ¶ÇÁΩëÁªúÁ±ªÂª∂ËøüÂä†‰∏äÂØπÂ∫îÁöÑÂºÇÂ∏∏ÁΩëÁªúÁΩëÁªúÈìæË∑ØÂª∂ËøüÊï∞ÊçÆ,‰∏çË¶ÅÂøΩÁï•ÁΩëÁªúÈìæË∑ØÂª∂ËøüÊï∞ÊçÆÔºâ„ÄÇ\n\
            - **ÂºÇÂ∏∏Êï∞ÊçÆÁÇπËÆ°Êï∞**ÔºöÂª∂ËøüË∂ÖËøáÂêåÁ±ªÂûãÁ∫øÁ®ãÂéÜÂè≤ÂùáÂÄº20%ÁöÑÂÆû‰æãÊï∞ÔºåÈúÄÊ†áÊ≥®Á∫øÁ®ãÂª∂ËøüÂùáÂÄº„ÄÇ\n\n# ÂàÜÊûêËßÑÂàô\n1. **‰∏ªÂºÇÂ∏∏ÊñπÂêëÂà§ÂÆö**\n\
            - Ê†áÊ≥®ÂºÇÂ∏∏Á∫øÁ®ãÁöÑÂª∂ËøüÂùáÂÄº„ÄÇ\n- ËØÜÂà´Âª∂ËøüÂ¢ûÂπÖÊúÄÊòæËëóÁöÑËµÑÊ∫êÁ±ªÂûãÔºàÂ¶ÇÂª∂Ëøü‰ªéÊØ´ÁßíÁ∫ßË∑ÉÂçáËá≥ÁßíÁ∫ßÔºâ„ÄÇ\n- **Á∫øÁ®ãÊï∞Èáè‰ºòÂÖàÂéüÂàô**ÔºöËã•ÊüêËµÑÊ∫êÁ±ªÂûãÔºàÂ¶ÇÁΩëÁªú/epollÔºâÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÈáèÊúÄÂ§öÔºåÂàôÂΩíÂõ†Ëá≥ËØ•Á±ªÂà´„ÄÇËØ∑‰ªîÁªÜÂàÜÊûêÂêÑÊñπÂêëÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè„ÄÇ\n\
            *Á§∫‰æãÔºöÁΩëÁªú/epollÁ±ªÂºÇÂ∏∏Á∫øÁ®ã4Êù° vs CPUÁ±ª2Êù° ‚Üí ÂΩíÂõ†‰∏∫ÁΩëÁªúÊñπÂêëÈóÆÈ¢ò„ÄÇ*\n\n2. **ËØØÂà§ËßÑÈÅø**\n- Ëã•CPUÊàñËøêË°åÈòüÂàóÔºàRunQÔºâÂª∂ËøüÁ™ÅÂ¢û‰∏îÊó†Âπ∂ÂèëÁΩëÁªú/epollÂºÇÂ∏∏Ôºå‰ºòÂÖàÂΩíÂõ†‰∏∫CPUËµÑÊ∫ê‰∫âÁî®„ÄÇ\n\
            \n3. **ÂÜ≥ËÉú‰ºòÂÖàÁ∫ßÔºàÈôçÂ∫èÔºâ**\n'CPU > ÁΩëÁªú > Epoll > Êñá‰ª∂ > RunQ'\n\n# Ê†πÂõ†ÂΩíÂõ†‰∏éÂª∫ËÆÆ\n- **CPUÂª∂ËøüÁ™ÅÂ¢û**ÔºöÊ£ÄÊü•‰ª£Á†ÅËøáÂ∫¶ÂµåÂ•óÈóÆÈ¢òÔºåÁ°ÆËÆ§ÂêéÊâßË°åÁâàÊú¨ÂõûÊªö„ÄÇ\n\
            - **CPUÊä¢Âç†ËøáÈ´ò**ÔºöÊéíÊü•ÂêåËäÇÁÇπËøõÁ®ãÁöÑËµÑÊ∫ê‰∫âÁî®„ÄÇ\n- **ÁΩëÁªú/EpollÂª∂ËøüÁ™ÅÂ¢û**Ôºö\n- Ëã•ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ ‚Üí ÁΩëÁªúÈìæË∑ØÈóÆÈ¢ò;\n\
            - Ëã•ÁΩëÁªúÈìæË∑ØÂª∂ËøüÊ≠£Â∏∏ ‚Üí ‰∏ãÊ∏∏ÊúçÂä°Âª∂ËøüÈóÆÈ¢ò„ÄÇ\n- **Êñá‰ª∂Êìç‰ΩúÂª∂ËøüÂçáÈ´ò**ÔºöÂÆ°ËÆ°Êñá‰ª∂Âè•ÊüÑÊ≥ÑÊºè„ÄÇ\n\n# ËæìÂá∫Ê†ºÂºè\n**Â∫îÁî®ÂÆû‰æã**:{{#17430589567120.pod#}}\
            \  \n**ÂåóÊûÅÊòüÊåáÊ†áË∂ãÂäøÊëòË¶Å**\n- ÊåâÊåáÊ†áÁª¥Â∫¶ÊèèËø∞ÊòæËëóÂèòÂåñÔºåËã•Êó†ÂºÇÂ∏∏Ê†áÊ≥®\"Êú™ËßÇÊµãÂà∞ÊòæËëóÂÅèÁ¶ª\"„ÄÇ\n\n**ÂàùÊ≠•Ê†πÂõ†ÁªìËÆ∫**\n\
            - ÊòéÁ°ÆÂëäË≠¶‰∫ã‰ª∂ÂØπÂ∫îÁî®ÁöÑÂΩ±ÂìçÁä∂ÊÄÅ„ÄÇ\n- Âü∫‰∫éÂåóÊûÅÊòüÊåáÊ†á‰∏éÂàÜÊûêËßÑÂàôËæìÂá∫Âçï‰∏ÄÂΩíÂõ†ÁªìËÆ∫„ÄÇ\n*Ê≥®ÔºöËã•ÁΩëÁªú/EpollÁ±ªÂºÇÂ∏∏‰ΩÜÁΩëÁªúÈìæË∑ØÂª∂ËøüÊ≠£Â∏∏ÔºåÂΩíÂõ†‰∏∫‰∏ãÊ∏∏ÊúçÂä°Âª∂Ëøü„ÄÇ*\n\
            Ê≥®Ôºö Â¶ÇÊûúÂØπÂ∫îÊñπÂêëÊúâÊä•ÂëäËøûÊé•ÔºåÈúÄÂ±ïÁ§∫Êä•ÂëäÈìæÊé•ÔºåÂèØÁÇπÂáª\nÊ≤°Êúâ‰∏çÁî®Â±ïÁ§∫Êä•Âëä\n\n# ËæìÂÖ•Êï∞ÊçÆ\n-cpuÔºö{{#17443388433580.result#}}\
            \  \n- netÔºö{{#17443388438160.result#}}  \n- fileÔºö{{#17443388421360.result#}}\
            \  \n- epollÔºö{{#1744290470304.result#}}  \n- RunQÔºö{{#17443388443000.result#}}\n\
            \n#Êä•ÂëäÈìæÊé•ÔºàËØ¥ÊòéÊòØÊä•ÂëäÂç≥ÂèØÔºå‰∏çÁî®ÂÖ≥ËÅîÁ∫øÁ®ãÔºâ\nÊ≤°ÊúâÊä•ÂëäÈìæÊé•‰∏çÁî®ÁªôÂá∫Êù•\ncpu {{#1745388058502.text#}}\nnetworkÊñπÂêë\
            \ {{#17453881280910.text#}}\nrunqÊñπÂêë {{#17453881639600.text#}}\n\n# ËæìÂá∫ÂáÜÂàô\n\
            - ‰ΩøÁî®ÁÆÄÊ¥ÅÁöÑÈùûÊäÄÊúØË°®Ëø∞ÔºåÈÅøÂÖçÊ≠ß‰πâ„ÄÇ\n- ÁªìËÆ∫ÈúÄËÅöÁÑ¶ÂèØÊâßË°åÂª∫ËÆÆÔºàÂ¶Ç\"Ê£ÄÊü•‰ª£Á†ÅÂµåÂ•ó\"ËÄåÈùû\"ÂèØËÉΩÂ≠òÂú®ÊÄßËÉΩÈóÆÈ¢ò\"Ôºâ„ÄÇ"
        selected: false
        title: llm analysis root cause
        type: llm
        variables: []
        vision:
          enabled: false
      height: 95
      id: '17430596469370'
      position:
        x: 4878
        y: 904
      positionAbsolute:
        x: 4878
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on File (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430597987060'
      position:
        x: 3363
        y: 702
      positionAbsolute:
        x: 3363
        y: 702
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: container read disk
        tool_configurations: {}
        tool_label: Container disk read time per second (Containerd runtime, aggregated
          by container and Pod)
        tool_name: ÂÆπÂô®Á£ÅÁõòËØªÂèñËÄóÊó∂ÊØèÁßí(‰ΩøÁî®Containerd,ÊåâPodÂíåÂÆπÂô®ÁªüËÆ°)
        tool_parameters:
          cadvisor_job_name:
            type: mixed
            value: ''
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430598152780'
      position:
        x: 3666
        y: 702
      positionAbsolute:
        x: 3666
        y: 702
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Thread time consumption on Net (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430598907140'
      position:
        x: 2757
        y: 1032
      positionAbsolute:
        x: 2757
        y: 1032
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          node:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#1742807803325.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430598942980'
      position:
        x: 3060
        y: 1032
      positionAbsolute:
        x: 3060
        y: 1032
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on Epoll (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430610599980'
      position:
        x: 3060
        y: 794
      positionAbsolute:
        x: 3060
        y: 794
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          containerId:
            type: mixed
            value: ''
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430610640640'
      position:
        x: 3363
        y: 794
      positionAbsolute:
        x: 3363
        y: 794
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on Runq(by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430610719970'
      position:
        x: 3060
        y: 1160
      positionAbsolute:
        x: 3060
        y: 1160
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container cpu throttling
        tool_configurations: {}
        tool_label: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_name: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17430610756270'
      position:
        x: 3363
        y: 1160
      positionAbsolute:
        x: 3363
        y: 1160
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Get epoll abnormal rtt
        type: code
        variables:
        - value_selector:
          - '17430610640640'
          - text
          variable: data_json
      height: 53
      id: '1744255998058'
      position:
        x: 3666
        y: 794
      positionAbsolute:
        x: 3666
        y: 794
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Get net abnormal rtt
        type: code
        variables:
        - value_selector:
          - '17430598942980'
          - text
          variable: data_json
      height: 53
      id: '17442560822670'
      position:
        x: 3363
        y: 1032
      positionAbsolute:
        x: 3363
        y: 1032
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='epoll')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data or []:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: EPOLL analyze
        type: code
        variables:
        - value_selector:
          - '1745323059455'
          - text
          variable: data_json
        - value_selector:
          - '1744255998058'
          - result
          variable: proof_json
      height: 53
      id: '1744287265980'
      position:
        x: 4272
        y: 794
      positionAbsolute:
        x: 4272
        y: 794
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'epoll')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template epoll
        type: code
        variables:
        - value_selector:
          - '1744287265980'
          - result
          variable: data_json
      height: 53
      id: '1744290470304'
      position:
        x: 4575
        y: 794
      positionAbsolute:
        x: 4575
        y: 794
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='runq')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: RUNQ analyze
        type: code
        variables:
        - value_selector:
          - '1745323078946'
          - text
          variable: data_json
        - value_selector:
          - '17430610756270'
          - text
          variable: proof_json
      height: 53
      id: '17443356883380'
      position:
        x: 3969
        y: 1160
      positionAbsolute:
        x: 3969
        y: 1160
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='net')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: NET analyze
        type: code
        variables:
        - value_selector:
          - '1745323124559'
          - text
          variable: data_json
        - value_selector:
          - '17442560822670'
          - result
          variable: proof_json
      height: 53
      id: '17443357536900'
      position:
        x: 3969
        y: 1032
      positionAbsolute:
        x: 3969
        y: 1032
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='file')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: file analyze
        type: code
        variables:
        - value_selector:
          - '1745323119371'
          - text
          variable: data_json
        - value_selector:
          - '17430598152780'
          - text
          variable: proof_json
      height: 53
      id: '17443357893440'
      position:
        x: 4272
        y: 702
      positionAbsolute:
        x: 4272
        y: 702
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='cpu')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: CPU analyze
        type: code
        variables:
        - value_selector:
          - '1745323114690'
          - text
          variable: data_json
        - value_selector:
          - '17430595158080'
          - text
          variable: proof_json
      height: 53
      id: '17443357899060'
      position:
        x: 3969
        y: 904
      positionAbsolute:
        x: 3969
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'file')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template file
        type: code
        variables:
        - value_selector:
          - '17443357893440'
          - result
          variable: data_json
      height: 53
      id: '17443388421360'
      position:
        x: 4575
        y: 702
      positionAbsolute:
        x: 4575
        y: 702
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'cpu')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template cpu
        type: code
        variables:
        - value_selector:
          - '17443357899060'
          - result
          variable: data_json
      height: 53
      id: '17443388433580'
      position:
        x: 4272
        y: 904
      positionAbsolute:
        x: 4272
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template net
        type: code
        variables:
        - value_selector:
          - '17443357536900'
          - result
          variable: data_json
      height: 53
      id: '17443388438160'
      position:
        x: 4272
        y: 1032
      positionAbsolute:
        x: 4272
        y: 1032
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'runq')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template runq
        type: code
        variables:
        - value_selector:
          - '17443356883380'
          - result
          variable: data_json
      height: 53
      id: '17443388443000'
      position:
        x: 4272
        y: 1160
      positionAbsolute:
        x: 4272
        y: 1160
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: EPOLL ABNORMAL RTT
        type: code
        variables:
        - value_selector:
          - '1742798505742'
          - text
          variable: data_json
      height: 53
      id: '1744342068305'
      parentId: '1741497176064'
      position:
        x: 1163.2885127206846
        y: 673.674875984598
      positionAbsolute:
        x: 6344.288512720685
        y: 1577.674875984598
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: NET ABNORMAL RTT
        type: code
        variables:
        - value_selector:
          - '1742547917612'
          - text
          variable: data_json
      height: 53
      id: '1744342138380'
      parentId: '1741497176064'
      position:
        x: 1183.3553424127522
        y: 574.6824876720586
      positionAbsolute:
        x: 6364.355342412752
        y: 1478.6824876720586
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='cpu')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. cpu analyze
        type: code
        variables:
        - value_selector:
          - '1745325937486'
          - text
          variable: data_json
        - value_selector:
          - '1742980228913'
          - text
          variable: proof_json
      height: 53
      id: '1744342244843'
      parentId: '1741497176064'
      position:
        x: 1791.8192785924111
        y: 371.13327676062727
      positionAbsolute:
        x: 6972.819278592411
        y: 1275.1332767606273
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='file')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. file analyze
        type: code
        variables:
        - value_selector:
          - '1745326017289'
          - text
          variable: data_json
        - value_selector:
          - '1742980318484'
          - text
          variable: proof_json
      height: 53
      id: '1744342309386'
      parentId: '1741497176064'
      position:
        x: 1790.2988857309501
        y: 472.94697102100463
      positionAbsolute:
        x: 6971.29888573095
        y: 1376.9469710210046
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='net')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. net analyze
        type: code
        variables:
        - value_selector:
          - '1745326029444'
          - text
          variable: data_json
        - value_selector:
          - '1744342138380'
          - result
          variable: proof_json
      height: 53
      id: '1744342372882'
      parentId: '1741497176064'
      position:
        x: 2092.972416533212
        y: 575.9896449249493
      positionAbsolute:
        x: 7273.972416533212
        y: 1479.9896449249493
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='epoll')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. epoll analyze
        type: code
        variables:
        - value_selector:
          - '1745326038950'
          - text
          variable: data_json
        - value_selector:
          - '1744342068305'
          - result
          variable: proof_json
      height: 53
      id: '1744342426374'
      parentId: '1741497176064'
      position:
        x: 2092.4007677668633
        y: 671.2138333819241
      positionAbsolute:
        x: 7273.400767766863
        y: 1575.2138333819241
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='runq')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. runq analyze
        type: code
        variables:
        - value_selector:
          - '1745326055068'
          - text
          variable: data_json
        - value_selector:
          - '17430610756270'
          - text
          variable: proof_json
      height: 53
      id: '1744342478278'
      parentId: '1741497176064'
      position:
        x: 1768.3401312758333
        y: 804.853363697991
      positionAbsolute:
        x: 6949.340131275833
        y: 1708.853363697991
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'runq')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template runq
        type: code
        variables:
        - value_selector:
          - '1744342478278'
          - result
          variable: data_json
      height: 53
      id: '1744342609856'
      parentId: '1741497176064'
      position:
        x: 2075.340131275834
        y: 804.853363697991
      positionAbsolute:
        x: 7256.340131275834
        y: 1708.853363697991
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'epoll')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template epoll
        type: code
        variables:
        - value_selector:
          - '1744342426374'
          - result
          variable: data_json
      height: 53
      id: '1744342800777'
      parentId: '1741497176064'
      position:
        x: 2396.2516631873705
        y: 671.1408594726702
      positionAbsolute:
        x: 7577.2516631873705
        y: 1575.1408594726702
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template net
        type: code
        variables:
        - value_selector:
          - '1744342372882'
          - result
          variable: data_json
      height: 53
      id: '1744342846753'
      parentId: '1741497176064'
      position:
        x: 2397.0575190597137
        y: 573.1165915837507
      positionAbsolute:
        x: 7578.057519059714
        y: 1477.1165915837507
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template file
        type: code
        variables:
        - value_selector:
          - '1744342309386'
          - result
          variable: data_json
      height: 53
      id: '1744342890395'
      parentId: '1741497176064'
      position:
        x: 2298.297497136483
        y: 475.73311174167225
      positionAbsolute:
        x: 7479.297497136483
        y: 1379.7331117416722
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template cpu
        type: code
        variables:
        - value_selector:
          - '1744342244843'
          - result
          variable: data_json
      height: 53
      id: '1744342920172'
      parentId: '1741497176064'
      position:
        x: 2291.073286368818
        y: 355.5973351437458
      positionAbsolute:
        x: 7472.073286368818
        y: 1259.5973351437458
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#17430610599980.text#}}'
        type: tool
      height: 53
      id: '1745323059455'
      position:
        x: 3969
        y: 794
      positionAbsolute:
        x: 3969
        y: 794
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#17430610719970.text#}}'
        type: tool
      height: 53
      id: '1745323078946'
      position:
        x: 3666
        y: 1160
      positionAbsolute:
        x: 3666
        y: 1160
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#17430595109950.text#}}'
        type: tool
      height: 53
      id: '1745323114690'
      position:
        x: 3666
        y: 904
      positionAbsolute:
        x: 3666
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#17430597987060.text#}}'
        type: tool
      height: 53
      id: '1745323119371'
      position:
        x: 3969
        y: 702
      positionAbsolute:
        x: 3969
        y: 702
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#17430598907140.text#}}'
        type: tool
      height: 53
      id: '1745323124559'
      position:
        x: 3666
        y: 1032
      positionAbsolute:
        x: 3666
        y: 1032
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêCPUÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980720651.text#}}'
        type: tool
      height: 53
      id: '1745325937486'
      parentId: '1741497176064'
      position:
        x: 1120.3433448742644
        y: 386.77445077825655
      positionAbsolute:
        x: 6301.343344874264
        y: 1290.7744507782566
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêfileÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980748320.text#}}'
        type: tool
      height: 53
      id: '1745326017289'
      parentId: '1741497176064'
      position:
        x: 1132.6661633624499
        y: 478.0639330308825
      positionAbsolute:
        x: 6313.66616336245
        y: 1382.0639330308825
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûênetÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980780865.text#}}'
        type: tool
      height: 53
      id: '1745326029444'
      parentId: '1741497176064'
      position:
        x: 1486.3553424127522
        y: 574.6824876720586
      positionAbsolute:
        x: 6667.355342412752
        y: 1478.6824876720586
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêepollÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980837261.text#}}'
        type: tool
      height: 53
      id: '1745326038950'
      parentId: '1741497176064'
      position:
        x: 1466.2885127206846
        y: 673.674875984598
      positionAbsolute:
        x: 6647.288512720685
        y: 1577.674875984598
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêrunqÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980885557.text#}}'
        type: tool
      height: 53
      id: '1745326055068'
      parentId: '1741497176064'
      position:
        x: 1147.0068118865438
        y: 800.2561082923241
      positionAbsolute:
        x: 6328.006811886544
        y: 1704.2561082923241
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          label:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          llm_description: Service name
          max: null
          min: null
          name: service
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          label:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          llm_description: endpoint
          max: null
          min: null
          name: endpoint
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          label:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          llm_description: Type (cpu,net,file,runq)
          max: null
          min: null
          name: type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          endpoint: ''
          service: ''
          startTime: ''
          type: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢CPUÊ†πÂõ†Êä•Âëä
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_name: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          endpoint:
            type: mixed
            value: '{{#1742807803325.endpoint#}}'
          service:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
          type:
            type: mixed
            value: cpu_time
        type: tool
      height: 89
      id: '1745388058502'
      position:
        x: 4575
        y: 886
      positionAbsolute:
        x: 4575
        y: 886
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          label:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          llm_description: Service name
          max: null
          min: null
          name: service
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          label:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          llm_description: endpoint
          max: null
          min: null
          name: endpoint
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          label:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          llm_description: Type (cpu,net,file,runq)
          max: null
          min: null
          name: type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          endpoint: ''
          service: ''
          startTime: ''
          type: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        retry_config:
          max_retries: 3
          retry_enabled: false
          retry_interval: 1000
        selected: false
        title: Êü•ËØ¢NetÊ†πÂõ†Êä•Âëä
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_name: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          endpoint:
            type: mixed
            value: '{{#1742807803325.endpoint#}}'
          service:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
          type:
            type: mixed
            value: network_time
        type: tool
      height: 89
      id: '17453881280910'
      position:
        x: 4575
        y: 1014
      positionAbsolute:
        x: 4575
        y: 1014
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        default_value:
        - key: text
          type: string
          value: ''
        - key: json
          type: array[object]
          value: '[]'
        desc: ''
        error_strategy: default-value
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          label:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          llm_description: Service name
          max: null
          min: null
          name: service
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          label:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          llm_description: endpoint
          max: null
          min: null
          name: endpoint
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          label:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          llm_description: Type (cpu,net,file,runq)
          max: null
          min: null
          name: type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          endpoint: ''
          service: ''
          startTime: ''
          type: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢runqÊ†πÂõ†Êä•Âëä
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_name: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          endpoint:
            type: mixed
            value: '{{#1742807803325.endpoint#}}'
          service:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
          type:
            type: mixed
            value: scheduling_time
        type: tool
      height: 89
      id: '17453881639600'
      position:
        x: 4575
        y: 1142
      positionAbsolute:
        x: 4575
        y: 1142
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is not
            id: a442dabe-ea1e-43c5-b85b-8e053695ff5a
            value: '{}'
            varType: string
            variable_selector:
            - '1741509454645'
            - first
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: Êù°‰ª∂ÂàÜÊîØ 2
        type: if-else
      height: 125
      id: '1745494305165'
      position:
        x: 1848
        y: 543
      positionAbsolute:
        x: 1848
        y: 543
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: Êú™Êü•ËØ¢Âà∞ÂëäË≠¶ÂÖ≥ËÅîÁöÑÊúçÂä°Á®ãÂ∫èÔºåËØ∑Ê£ÄÊü•apo-one-agentÊòØÂê¶ÂÆâË£ÖÂπ∂ÁõëÊéßÊúçÂä°„ÄÇ
        title: Êú™Êü•ËØ¢Âà∞ÂÖ≥ËÅîÊúçÂä°
        type: template-transform
        variables: []
      height: 53
      id: '1745494335273'
      position:
        x: 2151
        y: 543
      positionAbsolute:
        x: 2151
        y: 543
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1745494335273'
          - output
          variable: output
        selected: false
        title: ÁªìÊùü
        type: end
      height: 89
      id: '1745494338512'
      position:
        x: 2454
        y: 543
      positionAbsolute:
        x: 2454
        y: 543
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: c3fbfa86-caf9-4f75-94f5-2df1dae0ee50
            value: ‰∏ãÊ∏∏‰æùËµñËÄóÊó∂
            varType: string
            variable_selector:
            - '1742807803325'
            - alertName
          - comparison_operator: contains
            id: e7fe1ff9-6001-4551-a560-c9dcf98b1f37
            value: ÂìçÂ∫îËÄóÊó∂
            varType: string
            variable_selector:
            - '1742807803325'
            - alertName
          id: 'true'
          logical_operator: or
        desc: ''
        selected: false
        title: ÂëäË≠¶ÂàùÊ≠•ÊñπÂêëÂàÜÊûê
        type: if-else
      height: 151
      id: '1747355869184'
      position:
        x: 2454
        y: 671
      positionAbsolute:
        x: 2454
        y: 671
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Node name
            ja_JP: Node name
            pt_BR: Node name
            zh_Hans: ‰∏ªÊú∫Âêç
          label:
            en_US: Node name
            ja_JP: Node name
            pt_BR: Node name
            zh_Hans: ‰∏ªÊú∫Âêç
          llm_description: Node name
          max: null
          min: null
          name: node
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          node: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          node:
            type: mixed
            value: ''
          nodeName:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#1742807803325.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '1747355986489'
      position:
        x: 2755.3795535397207
        y: 1270
      positionAbsolute:
        x: 2755.3795535397207
        y: 1270
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: RTT
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          node:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#1742807803325.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 53
      id: '17473562733380'
      position:
        x: 2757
        y: 1362
      positionAbsolute:
        x: 2757
        y: 1362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêNETÊ∂àËÄóÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1747355986489.text#}}'
        type: tool
      height: 53
      id: '17473564423850'
      position:
        x: 3060
        y: 1270
      positionAbsolute:
        x: 3060
        y: 1270
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêRTTÊ∂àËÄóÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#17473562733380.text#}}'
        type: tool
      height: 53
      id: '17473564454180'
      position:
        x: 3060
        y: 1362
      positionAbsolute:
        x: 3060
        y: 1362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\ndef main(data_json):\n    data = json.loads(data_json)\n\
          \    for instance in data:\n        chart = instance['chart']\n        abnormal_count\
          \ = instance['abnormalCount']\n        \n        # ËÆ°ÁÆóabnormal_mean\n   \
          \     sorted_values = sorted(chart.values(), reverse=True)\n        top_abnormal_values\
          \ = sorted_values[:abnormal_count]\n        mean_abnormal = sum(top_abnormal_values)\
          \ / abnormal_count if abnormal_count > 0 else 0\n        instance[\"abnormal_mean\"\
          ] = mean_abnormal\n        \n        # ËÆ°ÁÆóabnormal_avg_growth\n        sorted_timestamps\
          \ = sorted(chart.keys())  # ÊåâÊó∂Èó¥Êà≥ÂçáÂ∫èÊéíÂàó\n        time_to_index = {t: idx for\
          \ idx, t in enumerate(sorted_timestamps)}\n        # Ëé∑Âèñabnormal_count‰∏™ÂºÇÂ∏∏ÁÇπÔºåÊåâÂÄºÈôçÂ∫èÊéíÂàó\n\
          \        abnormal_entries = sorted(chart.items(), key=lambda x: -x[1])[:abnormal_count]\n\
          \        \n        growth_rates = []\n        for timestamp, value in abnormal_entries:\n\
          \            idx = time_to_index[timestamp]\n            prev_value = None\n\
          \            # ÂêëÂâçÊü•ÊâæÁ¨¨‰∏Ä‰∏™ÈùûÈõ∂ÂÄº\n            for j in range(idx - 1, -1, -1):\n\
          \                prev_val = chart[sorted_timestamps[j]]\n              \
          \  if prev_val != 0:\n                    prev_value = prev_val\n      \
          \              break\n            if prev_value is not None:\n         \
          \       growth_rate = (value - prev_value) / prev_value\n              \
          \  growth_rates.append(growth_rate)\n        \n        avg_growth = sum(growth_rates)\
          \ / len(growth_rates) if growth_rates else 0\n        instance[\"abnormal_avg_growth\"\
          ] = avg_growth\n    \n    # Êåâabnormal_meanÈôçÂ∫èÂèñÂâç3\n    top_abnormal_means\
          \ = sorted(data, key=lambda x: x['abnormal_mean'], reverse=True)[:3]\n \
          \   # Êåâabnormal_avg_growthÈôçÂ∫èÂèñÂâç3\n    top_abnormal_growths = sorted(data,\
          \ key=lambda x: x['abnormal_avg_growth'], reverse=True)[:3]\n    \n    return\
          \ {\n        \"top_abnormal_means\": json.dumps(top_abnormal_means),\n \
          \       \"top_abnormal_growths\": json.dumps(top_abnormal_growths)\n   \
          \ }"
        code_language: python3
        desc: ''
        outputs:
          top_abnormal_growths:
            children: null
            type: string
          top_abnormal_means:
            children: null
            type: string
        selected: false
        title: NETÂºÇÂ∏∏ÂÆû‰æã
        type: code
        variables:
        - value_selector:
          - '17473564423850'
          - text
          variable: data_json
      height: 53
      id: '1747356893645'
      position:
        x: 3363
        y: 1270
      positionAbsolute:
        x: 3363
        y: 1270
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(data_json):\n    data = json.loads(data_json)\n\
          \    \n    for instance in data:\n        chart = instance['chart']\n  \
          \      abnormal_count = instance['abnormalCount']\n        \n        # ËÆ°ÁÆó\
          \ abnormal_mean\n        sorted_values = sorted(chart.values(), reverse=True)\n\
          \        top_abnormal_values = sorted_values[:abnormal_count]\n        mean_abnormal\
          \ = sum(top_abnormal_values) / abnormal_count if abnormal_count > 0 else\
          \ 0\n        instance[\"abnormal_mean\"] = mean_abnormal\n        \n   \
          \     # ËÆ°ÁÆó abnormal_avg_growth\n        sorted_timestamps = sorted(chart.keys())\
          \  # ÊåâÊó∂Èó¥Êà≥ÂçáÂ∫èÊéíÂàó\n        time_to_index = {t: idx for idx, t in enumerate(sorted_timestamps)}\n\
          \        # Ëé∑Âèñ abnormal_count ‰∏™ÂºÇÂ∏∏ÁÇπÔºåÊåâÂÄºÈôçÂ∫èÊéíÂàó\n        abnormal_entries = sorted(chart.items(),\
          \ key=lambda x: -x[1])[:abnormal_count]\n        \n        growth_rates\
          \ = []\n        for timestamp, value in abnormal_entries:\n            idx\
          \ = time_to_index[timestamp]\n            prev_value = None\n          \
          \  # ÂêëÂâçÊü•ÊâæÁ¨¨‰∏Ä‰∏™ÈùûÈõ∂ÂÄº\n            for j in range(idx - 1, -1, -1):\n        \
          \        prev_val = chart[sorted_timestamps[j]]\n                if prev_val\
          \ != 0:\n                    prev_value = prev_val\n                   \
          \ break\n            if prev_value is not None:\n                growth_rate\
          \ = (value - prev_value) / prev_value\n                growth_rates.append(growth_rate)\n\
          \        \n        avg_growth = sum(growth_rates) / len(growth_rates) if\
          \ growth_rates else 0\n        instance[\"abnormal_avg_growth\"] = avg_growth\n\
          \        \n        del instance['chart']\n    \n    # Êåâ abnormal_mean ÈôçÂ∫èÂèñÂâç3\n\
          \    top_abnormal_means = sorted(data, key=lambda x: x['abnormal_mean'],\
          \ reverse=True)[:5]\n    # Êåâ abnormal_avg_growth ÈôçÂ∫èÂèñÂâç3\n    top_abnormal_growths\
          \ = sorted(data, key=lambda x: x['abnormal_avg_growth'], reverse=True)[:5]\n\
          \    \n    return {\n        \"top_abnormal_means\": json.dumps(top_abnormal_means),\n\
          \        \"top_abnormal_growths\": json.dumps(top_abnormal_growths)\n  \
          \  }"
        code_language: python3
        desc: ''
        outputs:
          top_abnormal_growths:
            children: null
            type: string
          top_abnormal_means:
            children: null
            type: string
        selected: false
        title: RTTÂºÇÂ∏∏ÂÆû‰æã
        type: code
        variables:
        - value_selector:
          - '17473564454180'
          - text
          variable: data_json
      height: 53
      id: '1747356923703'
      position:
        x: 3363
        y: 1362
      positionAbsolute:
        x: 3363
        y: 1362
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        model:
          completion_params:
            temperature: 0.6
          mode: chat
          name: deepseek-chat
          provider: langgenius/deepseek/deepseek
        prompt_template:
        - id: cd35fff4-a037-4e72-af99-2ff8299fc5d2
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: 2b2ad468-efcd-4bcc-aeb9-d53d2f2770ad
          role: user
          text: "# ÂàÜÊûêÁõÆÊ†á\nÂü∫‰∫éNETÊ∂àËÄóÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÊçÆÂíåRTTÂºÇÂ∏∏ÈïøÊï∞ÊçÆÔºåÂà§Êñ≠Â∫îÁî®ÂÆû‰æã{{#17430589567120.pod#}}ÊòØÂê¶ÂèóÂëäË≠¶‰∫ã‰ª∂{{#1742807803325.alertName#}}ÂΩ±ÂìçÔºåÂπ∂ËøõË°åÂàùÊ≠•Ê†πÂõ†ÂÆö‰Ωç„ÄÇ\n\
            \n# ËæìÂÖ•Êï∞ÊçÆËßÑËåÉ\n- Á∫øÁ®ãÂú®ÂåóÊûÅÊòüÊåáÊ†áNET‰∏äÁöÑÂºÇÂ∏∏Ê∂àËÄóÊ†∑Êú¨„ÄÇ\n- PodÁõ∏ÂÖ≥‰∏ãÊ∏∏ÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Ê∂àËÄóÊ†∑Êú¨„ÄÇ\n\n# ÂàÜÊûêËßÑÂàô\n\
            1. **‰∏ªÂºÇÂ∏∏ÊñπÂêëÂà§ÂÆö**\n- Ê†áÊ≥®ÂºÇÂ∏∏Á∫øÁ®ãÁöÑÂª∂ËøüÂùáÂÄº„ÄÇ\n- ËØÜÂà´Âª∂ËøüÂ¢ûÂπÖÊúÄÊòæËëóÁöÑÁ∫øÁ®ã„ÄÇ\n- Ê†πÊçÆRTTËØÜÂà´ÊòØËá™Ë∫´ÂºÇÂ∏∏ËøòÊòØ‰∏ãÊ∏∏ÂºÇÂ∏∏\n\
            2. **ÁΩëÁªúÈìæË∑ØÂª∂ËøüËØÜÂà´ÊÄùË∑Ø**\n- ÁΩëÁªúÈìæË∑ØÂª∂ËøüÊòæËëóÂ¢ûÈ´òÊàñÊé•Ëøë0.05sÈôÑËøë\n- Ëã•Âè™Êúâ‰∏™Âà´ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂá∫Áé∞ÂºÇÂ∏∏ÔºàÊØîÂ¶ÇÂè™Êúâ‰∏Ä‰∏™‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÔºâÂàôËÆ§‰∏∫ÁΩëÁªúÂºÇÂ∏∏ÊòØÁî±‰∏ãÊ∏∏ÂØºËá¥ÔºåËÄåÈùûËá™Ë∫´ÁΩëÁªúÈóÆÈ¢ò\n\
            - Ëã•ÊúâÂ§ö‰∏™ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂêåÊ≠•Âá∫Áé∞ÂºÇÂ∏∏ÔºàÊØîÂ¶ÇÊúâ3‰∏™Âèä‰ª•‰∏ä‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÔºâÂàôËÆ§‰∏∫ÊòØÂÆπÂô®Ëá™Ë∫´ÁΩëÁªúÂá∫Áé∞ÈóÆÈ¢òÔºåËøõËÄåÂΩ±Âìç‰∫ÜÁΩëÁªúÈìæË∑ØÂª∂Ëøü.\n3.\
            \ \nËã•Êó†Áõ∏ÂÖ≥NETÊàñÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Êï∞ÊçÆÔºåÂàôËÆ§‰∏∫ËØ•Êó∂Èó¥ÊÆµÂÜÖÂØπÂ∫îÊï∞ÊçÆÊó†ÊòéÊòæÂºÇÂ∏∏ÔºåÂèØËÉΩÂè™ÊòØÂá∫Áé∞Áü≠Êó∂Èó¥Â∞èÂπÖÊ≥¢Âä®„ÄÇÊèêÁ§∫Áî®Êà∑ËØ•Êï∞ÊçÆÊó†ÂºÇÂ∏∏„ÄÇ\n\n\
            # ËæìÂá∫Ê†ºÂºè\n**Â∫îÁî®ÂÆû‰æã**:{{#17430589567120.pod#}}  \n**ÂåóÊûÅÊòüÊåáÊ†áË∂ãÂäøÊëòË¶Å**\n- ÊåâÊåáÊ†áÁª¥Â∫¶ÊèèËø∞ÊòæËëóÂèòÂåñÔºåËã•Êó†ÂºÇÂ∏∏Ê†áÊ≥®\"\
            Êú™ËßÇÊµãÂà∞ÊòæËëóÂÅèÁ¶ª\"„ÄÇ\n**‰∏é‰∏ãÊ∏∏ÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂàÜÊûê**\n- Â¶ÇÊûúÊòØ‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÂàôÂàóÂá∫ÂºÇÂ∏∏ÁöÑÁΩëÁªúÈìæË∑ØÂª∂ËøüÂíåÂØπÂ∫î‰∏ãÊ∏∏„ÄÇ\n- Â¶ÇÊûúÊòØËá™Ë∫´ÁΩëÁªúÂØºËá¥‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÂàôÁªôÂá∫ÈÄ†ÊàêÁöÑÂΩ±ÂìçÂπ∂ËØ¥ÊòéÊòØËá™Ë∫´ÂéüÂõ†ÂØºËá¥‰∏é‰∏ãÊ∏∏ÁöÑÁΩëÁªúÈìæË∑ØÂª∂ËøüÂçáÈ´ò\n\
            - ÊúÄÂêéÊ†πÊçÆÂàÜÊûêËßÑÂàôÂà§Êñ≠ÈîôËØØÊñπÂêë„ÄÇ\n\n\n**ÂàùÊ≠•Ê†πÂõ†ÁªìËÆ∫**\n- ÊòéÁ°ÆÂëäË≠¶‰∫ã‰ª∂ÂØπÂ∫îÁî®ÁöÑÂΩ±ÂìçÁä∂ÊÄÅ„ÄÇ\n- Âü∫‰∫éÂåóÊûÅÊòüÊåáÊ†á‰∏éÂàÜÊûêËßÑÂàôËæìÂá∫Âçï‰∏ÄÂΩíÂõ†ÁªìËÆ∫„ÄÇ\n\
            \n# ËæìÂÖ•Êï∞ÊçÆ\n- ÂåóÊûÅÊòüÊåáÊ†áNETÊ∂àËÄóÂºÇÂ∏∏ÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã{{#1747356893645.top_abnormal_means#}}ÔºåÂåóÊûÅÊòüÊåáÊ†áNETÊ∂àËÄóÂºÇÂ∏∏Â¢ûÈÄüÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã{{#1747356893645.top_abnormal_growths#}}\n\
            - ÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Ê∂àËÄóÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã{{#1747356923703.top_abnormal_means#}}\nÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Â¢ûÈÄüÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã\n\
            \n# ËæìÂá∫ÂáÜÂàô\n- ‰ΩøÁî®ÁÆÄÊ¥ÅÁöÑÈùûÊäÄÊúØË°®Ëø∞ÔºåÈÅøÂÖçÊ≠ß‰πâ„ÄÇ\n- ÁªìËÆ∫ÈúÄËÅöÁÑ¶ÂèØÊâßË°åÂª∫ËÆÆÔºàÂ¶Ç\"Ê£ÄÊü•‰ª£Á†ÅÂµåÂ•ó\"ËÄåÈùû\"ÂèØËÉΩÂ≠òÂú®ÊÄßËÉΩÈóÆÈ¢ò\"Ôºâ„ÄÇ"
        selected: false
        title: ÁΩëÁªúÊñπÂêëÂàÜÊûê
        type: llm
        variables: []
        vision:
          enabled: false
      height: 95
      id: '17473569800940'
      position:
        x: 3666
        y: 1252
      positionAbsolute:
        x: 3666
        y: 1252
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '17473569800940'
          - text
          variable: text
        selected: false
        title: ÁªìÊùü
        type: end
      height: 89
      id: '1747357345949'
      position:
        x: 3969
        y: 1252
      positionAbsolute:
        x: 3969
        y: 1252
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -1313.6818334450036
      y: -107.54208703435972
      zoom: 0.25
