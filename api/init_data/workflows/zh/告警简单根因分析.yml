app:
  description: ''
  icon: ü§ñ
  icon_background: '#FFEAD5'
  mode: workflow
  name: ÂëäË≠¶ÁÆÄÂçïÊ†πÂõ†ÂàÜÊûê
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: package
  value:
    plugin_unique_identifier: langgenius/openai_api_compatible:0.0.7@f20c7275bbcf055ec5d170dd5128e341986e2dcba5266d08fd080d4bdf2288f6
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: iteration-start
        targetType: code
      id: 1741497176064start-source-1741497181784-target
      selected: false
      source: 1741497176064start
      sourceHandle: source
      target: '1741497181784'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: iteration
        targetType: llm
      id: 1741497176064-source-1741512806512-target
      selected: false
      source: '1741497176064'
      sourceHandle: source
      target: '1741512806512'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: end
      id: 1741592094819-source-1741592144815-target
      selected: false
      source: '1741592094819'
      sourceHandle: source
      target: '1741592144815'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1741597274153-source-1741509454645-target
      selected: false
      source: '1741597274153'
      sourceHandle: source
      target: '1741509454645'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: template-transform
      id: 1742453019576-false-1741592094819-target
      selected: false
      source: '1742453019576'
      sourceHandle: 'false'
      target: '1741592094819'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980720651-source-1742980228913-target
      selected: false
      source: '1742980720651'
      sourceHandle: source
      target: '1742980228913'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980748320-source-1742980318484-target
      selected: false
      source: '1742980748320'
      sourceHandle: source
      target: '1742980318484'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980780865-source-1742547917612-target
      selected: false
      source: '1742980780865'
      sourceHandle: source
      target: '1742547917612'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980837261-source-1742798505742-target
      selected: false
      source: '1742980837261'
      sourceHandle: source
      target: '1742798505742'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980885557-source-1741502699500-target
      selected: false
      source: '1742980885557'
      sourceHandle: source
      target: '1741502699500'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430595109950-source-17430595158080-target
      selected: false
      source: '17430595109950'
      sourceHandle: source
      target: '17430595158080'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430598907140-source-17430598942980-target
      selected: false
      source: '17430598907140'
      sourceHandle: source
      target: '17430598942980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430610599980-source-17430610640640-target
      selected: false
      source: '17430610599980'
      sourceHandle: source
      target: '17430610640640'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430610719970-source-17430610756270-target
      selected: false
      source: '17430610719970'
      sourceHandle: source
      target: '17430610756270'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17430610640640-source-1744255998058-target
      selected: false
      source: '17430610640640'
      sourceHandle: source
      target: '1744255998058'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17430598942980-source-17442560822670-target
      selected: false
      source: '17430598942980'
      sourceHandle: source
      target: '17442560822670'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1744287265980-source-1744290470304-target
      selected: false
      source: '1744287265980'
      sourceHandle: source
      target: '1744290470304'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443357899060-source-17443388433580-target
      selected: false
      source: '17443357899060'
      sourceHandle: source
      target: '17443388433580'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443357893440-source-17443388421360-target
      selected: false
      source: '17443357893440'
      sourceHandle: source
      target: '17443388421360'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 17443388421360-source-17430596469370-target
      selected: false
      source: '17443388421360'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443357536900-source-17443388438160-target
      selected: false
      source: '17443357536900'
      sourceHandle: source
      target: '17443388438160'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17443356883380-source-17443388443000-target
      selected: false
      source: '17443356883380'
      sourceHandle: source
      target: '17443388443000'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1744290470304-source-17430596469370-target
      selected: false
      source: '1744290470304'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1742798505742-source-1744342068305-target
      selected: false
      source: '1742798505742'
      sourceHandle: source
      target: '1744342068305'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1742547917612-source-1744342138380-target
      selected: false
      source: '1742547917612'
      sourceHandle: source
      target: '1744342138380'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342478278-source-1744342609856-target
      selected: false
      source: '1744342478278'
      sourceHandle: source
      target: '1744342609856'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342609856-source-1741506766037-target
      selected: false
      source: '1744342609856'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342426374-source-1744342800777-target
      selected: false
      source: '1744342426374'
      sourceHandle: source
      target: '1744342800777'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342800777-source-1741506766037-target
      selected: false
      source: '1744342800777'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342372882-source-1744342846753-target
      selected: false
      source: '1744342372882'
      sourceHandle: source
      target: '1744342846753'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342846753-source-1741506766037-target
      selected: false
      source: '1744342846753'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342309386-source-1744342890395-target
      selected: false
      source: '1744342309386'
      sourceHandle: source
      target: '1744342890395'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342890395-source-1741506766037-target
      selected: false
      source: '1744342890395'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: code
      id: 1744342244843-source-1744342920172-target
      selected: false
      source: '1744342244843'
      sourceHandle: source
      target: '1744342920172'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: llm
      id: 1744342920172-source-1741506766037-target
      selected: false
      source: '1744342920172'
      sourceHandle: source
      target: '1741506766037'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 1742807803325-source-1742453019576-target
      selected: false
      source: '1742807803325'
      sourceHandle: source
      target: '1742453019576'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980228913-source-1745325937486-target
      selected: false
      source: '1742980228913'
      sourceHandle: source
      target: '1745325937486'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745325937486-source-1744342244843-target
      selected: false
      source: '1745325937486'
      sourceHandle: source
      target: '1744342244843'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1742980318484-source-1745326017289-target
      selected: false
      source: '1742980318484'
      sourceHandle: source
      target: '1745326017289'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1744342138380-source-1745326029444-target
      selected: false
      source: '1744342138380'
      sourceHandle: source
      target: '1745326029444'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1744342068305-source-1745326038950-target
      selected: false
      source: '1744342068305'
      sourceHandle: source
      target: '1745326038950'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: tool
      id: 1741502699500-source-1745326055068-target
      selected: false
      source: '1741502699500'
      sourceHandle: source
      target: '1745326055068'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326017289-source-1744342309386-target
      selected: false
      source: '1745326017289'
      sourceHandle: source
      target: '1744342309386'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326029444-source-1744342372882-target
      selected: false
      source: '1745326029444'
      sourceHandle: source
      target: '1744342372882'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326038950-source-1744342426374-target
      selected: false
      source: '1745326038950'
      sourceHandle: source
      target: '1744342426374'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: tool
        targetType: code
      id: 1745326055068-source-1744342478278-target
      selected: false
      source: '1745326055068'
      sourceHandle: source
      target: '1744342478278'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: llm
        targetType: iteration
      id: 17430596469370-source-1741497176064-target
      selected: false
      source: '17430596469370'
      sourceHandle: source
      target: '1741497176064'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980720651-target
      selected: false
      source: '1741497181784'
      sourceHandle: source
      target: '1742980720651'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980748320-target
      selected: false
      source: '1741497181784'
      sourceHandle: source
      target: '1742980748320'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980780865-target
      selected: false
      source: '1741497181784'
      sourceHandle: source
      target: '1742980780865'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980837261-target
      selected: false
      source: '1741497181784'
      sourceHandle: source
      target: '1742980837261'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1741497176064'
        sourceType: code
        targetType: tool
      id: 1741497181784-source-1742980885557-target
      selected: false
      source: '1741497181784'
      sourceHandle: source
      target: '1742980885557'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: start
        targetType: code
      id: 1741227526517-source-1742807803325-target
      selected: false
      source: '1741227526517'
      sourceHandle: source
      target: '1742807803325'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 1741509454645-source-1745494305165-target
      selected: false
      source: '1741509454645'
      sourceHandle: source
      target: '1745494305165'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1745494305165-true-17430589567120-target
      selected: false
      source: '1745494305165'
      sourceHandle: 'true'
      target: '17430589567120'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: template-transform
      id: 1745494305165-false-1745494335273-target
      selected: false
      source: '1745494305165'
      sourceHandle: 'false'
      target: '1745494335273'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: end
      id: 1745494335273-source-1745494338512-target
      selected: false
      source: '1745494335273'
      sourceHandle: source
      target: '1745494338512'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-true-1747355986489-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'true'
      target: '1747355986489'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 17430589567120-source-1747355869184-target
      selected: false
      source: '17430589567120'
      sourceHandle: source
      target: '1747355869184'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430598907140-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430598907140'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430595109950-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430595109950'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430610719970-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430610719970'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430610599980-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430610599980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 1747355986489-source-17473564423850-target
      selected: false
      source: '1747355986489'
      sourceHandle: source
      target: '17473564423850'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17430597987060-target
      selected: false
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17430597987060'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17473564423850-source-1747356893645-target
      selected: false
      source: '17473564423850'
      sourceHandle: source
      target: '1747356893645'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1747356893645-source-17473569800940-target
      selected: false
      source: '1747356893645'
      sourceHandle: source
      target: '17473569800940'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: llm
      id: 17473569800940-source-17501667334220-target
      selected: false
      source: '17473569800940'
      sourceHandle: source
      target: '17501667334220'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 17501667334220-source-1747357345949-target
      selected: false
      source: '17501667334220'
      sourceHandle: source
      target: '1747357345949'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1742453019576-true-1750657927551-target
      selected: false
      source: '1742453019576'
      sourceHandle: 'true'
      target: '1750657927551'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1742453019576-2949ad86-bdc0-4b1d-bd84-6e01f41915eb-1750657927551-target
      selected: false
      source: '1742453019576'
      sourceHandle: 2949ad86-bdc0-4b1d-bd84-6e01f41915eb
      target: '1750657927551'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1742453019576-6b6a21b2-be07-4596-8e1b-031dd9ad9055-1750657927551-target
      selected: false
      source: '1742453019576'
      sourceHandle: 6b6a21b2-be07-4596-8e1b-031dd9ad9055
      target: '1750657927551'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1742453019576-0b3c7ecb-381d-4c8b-acd0-496085d91807-1750657965188-target
      selected: false
      source: '1742453019576'
      sourceHandle: 0b3c7ecb-381d-4c8b-acd0-496085d91807
      target: '1750657965188'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1750657965188-source-1750658087300-target
      selected: false
      source: '1750657965188'
      sourceHandle: source
      target: '1750658087300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1750658087300-source-1741597274153-target
      selected: false
      source: '1750658087300'
      sourceHandle: source
      target: '1741597274153'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1750657927551-source-1750658174684-target
      selected: false
      source: '1750657927551'
      sourceHandle: source
      target: '1750658174684'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1750658174684-source-1741597274153-target
      selected: false
      source: '1750658174684'
      sourceHandle: source
      target: '1741597274153'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 17430597987060-source-1750661176423-target
      source: '17430597987060'
      sourceHandle: source
      target: '1750661176423'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: llm
      id: 1750662084996-source-1750662088384-target
      source: '1750662084996'
      sourceHandle: source
      target: '1750662088384'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1750662088384-source-1750661889002-target
      source: '1750662088384'
      sourceHandle: source
      target: '1750661889002'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1750068431868-source-1750672701216-target
      source: '1750068431868'
      sourceHandle: source
      target: '1750672701216'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1750662408086-source-17506728633540-target
      source: '1750662408086'
      sourceHandle: source
      target: '17506728633540'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1750661889002-source-1750754610625-target
      source: '1750661889002'
      sourceHandle: source
      target: '1750754610625'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1750662168285-source-1750754610625-target
      source: '1750662168285'
      sourceHandle: source
      target: '1750754610625'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1750672701216-source-1750754610625-target
      source: '1750672701216'
      sourceHandle: source
      target: '1750754610625'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17506728633540-source-1750754610625-target
      source: '17506728633540'
      sourceHandle: source
      target: '1750754610625'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1750750056742-source-1750754610625-target
      source: '1750750056742'
      sourceHandle: source
      target: '1750754610625'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1750769951427-source-1750754610625-target
      source: '1750769951427'
      sourceHandle: source
      target: '1750754610625'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1750830567613-source-1750830747193-target
      source: '1750830567613'
      sourceHandle: source
      target: '1750830747193'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1750830747193-source-1750830805330-target
      source: '1750830747193'
      sourceHandle: source
      target: '1750830805330'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1750830805330-source-1750819000832-target
      source: '1750830805330'
      sourceHandle: source
      target: '1750819000832'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1750927215923-source-1750769951427-target
      source: '1750927215923'
      sourceHandle: source
      target: '1750769951427'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1750830805330-source-1750927215923-target
      source: '1750830805330'
      sourceHandle: source
      target: '1750927215923'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1750819000832-source-1750927458985-target
      source: '1750819000832'
      sourceHandle: source
      target: '1750927458985'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1750927458985-source-1750769951427-target
      source: '1750927458985'
      sourceHandle: source
      target: '1750769951427'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 1750995139153-source-1741502839759-target
      source: '1750995139153'
      sourceHandle: source
      target: '1741502839759'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1750661176423-source-1751112705936-target
      source: '1750661176423'
      sourceHandle: source
      target: '1751112705936'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1751112705936-source-17443357893440-target
      source: '1751112705936'
      sourceHandle: source
      target: '17443357893440'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1744255998058-source-17511127594560-target
      source: '1744255998058'
      sourceHandle: source
      target: '17511127594560'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17511127594560-source-1744287265980-target
      source: '17511127594560'
      sourceHandle: source
      target: '1744287265980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17430595158080-source-17511128355920-target
      source: '17430595158080'
      sourceHandle: source
      target: '17511128355920'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17511128355920-source-17443357899060-target
      source: '17511128355920'
      sourceHandle: source
      target: '17443357899060'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17442560822670-source-17511128736240-target
      source: '17442560822670'
      sourceHandle: source
      target: '17511128736240'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17511128736240-source-17443357536900-target
      source: '17511128736240'
      sourceHandle: source
      target: '17443357536900'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17430610756270-source-17511129103380-target
      source: '17430610756270'
      sourceHandle: source
      target: '17511129103380'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17511129103380-source-17443356883380-target
      source: '17511129103380'
      sourceHandle: source
      target: '17443356883380'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: tool
      id: 1747355869184-false-17473562733380-target
      source: '1747355869184'
      sourceHandle: 'false'
      target: '17473562733380'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: llm
      id: 17511674060740-source-17430596469370-target
      source: '17511674060740'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17443388433580-source-1751504789699-target
      source: '17443388433580'
      sourceHandle: source
      target: '1751504789699'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: llm
      id: 1751504789699-source-17430596469370-target
      source: '1751504789699'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17443388438160-source-17515048509810-target
      source: '17443388438160'
      sourceHandle: source
      target: '17515048509810'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: llm
      id: 17515048509810-source-17430596469370-target
      source: '17515048509810'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 17443388443000-source-17515048888700-target
      source: '17443388443000'
      sourceHandle: source
      target: '17515048888700'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: llm
      id: 17515048888700-source-17430596469370-target
      source: '17515048888700'
      sourceHandle: source
      target: '17430596469370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 17473562733380-source-17515143872690-target
      source: '17473562733380'
      sourceHandle: source
      target: '17515143872690'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 17515143872690-source-17511674060740-target
      source: '17515143872690'
      sourceHandle: source
      target: '17511674060740'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: llm
      id: 1751601681225-source-1750995139153-target
      source: '1751601681225'
      sourceHandle: source
      target: '1750995139153'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: tool
      id: 1750754610625-source-1751601681225-target
      source: '1750754610625'
      sourceHandle: source
      target: '1751601681225'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: if-else
      id: 1741512806512-source-1751601842740-target
      source: '1741512806512'
      sourceHandle: source
      target: '1751601842740'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1751601842740-false-1750830567613-target
      source: '1751601842740'
      sourceHandle: 'false'
      target: '1750830567613'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: llm
      id: 1751601842740-false-1750662084996-target
      source: '1751601842740'
      sourceHandle: 'false'
      target: '1750662084996'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: llm
      id: 1751601842740-false-1750068431868-target
      source: '1751601842740'
      sourceHandle: 'false'
      target: '1750068431868'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: llm
      id: 1751601842740-false-1750662408086-target
      source: '1751601842740'
      sourceHandle: 'false'
      target: '1750662408086'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1751601842740-false-1750750056742-target
      source: '1751601842740'
      sourceHandle: 'false'
      target: '1750750056742'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: end
      id: 1751601842740-true-1751601994805-target
      source: '1751601842740'
      sourceHandle: 'true'
      target: '1751601994805'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: code
      id: 1751601842740-false-1750662168285-target
      source: '1751601842740'
      sourceHandle: 'false'
      target: '1750662168285'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: start
        type: start
        variables:
        - label: startTime
          max_length: 48
          options: []
          required: true
          type: number
          variable: startTime
        - label: endTime
          max_length: 48
          options: []
          required: true
          type: number
          variable: endTime
        - label: params
          max_length: 9999999
          options: []
          required: false
          type: paragraph
          variable: params
        - label: nodeName
          max_length: 256
          options: []
          required: false
          type: text-input
          variable: nodeName
        - label: nodeIp
          max_length: 48
          options: []
          required: false
          type: text-input
          variable: nodeIp
        - label: edition
          max_length: 48
          options: []
          required: false
          type: paragraph
          variable: edition
      height: 220
      id: '1741227526517'
      position:
        x: 30
        y: 440
      positionAbsolute:
        x: 30
        y: 440
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 1408
        is_parallel: false
        iterator_selector:
        - '1741509454645'
        - monitor
        output_selector:
        - '1741506766037'
        - text
        output_type: array[string]
        parallel_nums: 10
        selected: false
        start_node_id: 1741497176064start
        title: iteration
        type: iteration
        width: 6503.360125927147
      height: 1408
      id: '1741497176064'
      position:
        x: 5540.628458918075
        y: 882
      positionAbsolute:
        x: 5540.628458918075
        y: 882
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 6503
      zIndex: 1
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1741497176064start
      parentId: '1741497176064'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 5564.628458918075
        y: 950
      selectable: false
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        code: "\ndef main(data: dict) -> dict:\n    return {\n        \"pod\": data.get(\"\
          pod\", \"\"),\n        \"namespace\": data.get(\"namespace\", \"\"),\n \
          \       \"pid\": str(data.get(\"pid\", \"\"))\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          namespace:
            children: null
            type: string
          pid:
            children: null
            type: string
          pod:
            children: null
            type: string
        selected: false
        title: get instance info
        type: code
        variables:
        - value_selector:
          - '1741497176064'
          - item
          variable: data
      height: 54
      id: '1741497181784'
      parentId: '1741497176064'
      position:
        x: 247.70722025930104
        y: 65
      positionAbsolute:
        x: 5788.335679177376
        y: 947
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container CPU throttling duration (when using Containerd container
          runtime, statistics by container and Pod)
        tool_configurations: {}
        tool_label: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_name: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1741502699500'
      parentId: '1741497176064'
      position:
        x: 844.0068118865438
        y: 800.2561082923241
      positionAbsolute:
        x: 6384.635270804619
        y: 1682.2561082923241
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741512806512'
          - text
          variable: text
        - value_selector:
          - '1750995139153'
          - text
          variable: alertDirection
        - value_selector:
          - '1751601681225'
          - text
          variable: output
        selected: false
        title: End
        type: end
      height: 142
      id: '1741502839759'
      position:
        x: 15375
        y: 1146
      positionAbsolute:
        x: 15375
        y: 1146
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        model:
          completion_params:
            temperature: 0.6
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: cd35fff4-a037-4e72-af99-2ff8299fc5d2
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: 2b2ad468-efcd-4bcc-aeb9-d53d2f2770ad
          role: user
          text: "# ÂàÜÊûêÁõÆÊ†á  \nÂü∫‰∫éË∑®ËµÑÊ∫êÁ±ªÂà´ÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÊçÆÔºåÂà§Êñ≠Â∫îÁî®ÂÆû‰æã {{#1741497181784.pod#}}ÊòØÂê¶ÂèóÂëäË≠¶‰∫ã‰ª∂ {{#1742807803325.alertName#}}\
            \ ÂΩ±ÂìçÔºåÂπ∂ËøõË°åÂàùÊ≠•Ê†πÂõ†ÂÆö‰Ωç„ÄÇ  \n\n# ËæìÂÖ•Êï∞ÊçÆËßÑËåÉ  \n- **ÂàÜËµÑÊ∫êÁ±ªÂà´Êï∞ÊçÆ**ÔºöÁ∫øÁ®ãÂª∂ËøüÂèäÂÖ≥ËÅîÁöÑÂåóÊûÅÊòüÊåáÊ†áÔºàÂ¶ÇÁΩëÁªúÁ±ªÂª∂ËøüÂØπÂ∫îÁΩëÁªúRTTÔºâ„ÄÇ\
            \  \n- **ÂºÇÂ∏∏Êï∞ÊçÆÁÇπËÆ°Êï∞**ÔºöÂª∂ËøüË∂ÖËøáÂêåÁ±ªÂûãÁ∫øÁ®ãÂéÜÂè≤ÂùáÂÄº20%ÁöÑÂÆû‰æãÊï∞ÔºåÈúÄÊ†áÊ≥®Á∫øÁ®ãÂª∂ËøüÂùáÂÄº„ÄÇ  \n\n# ÂàÜÊûêËßÑÂàô  \n1. **‰∏ªÂºÇÂ∏∏ÊñπÂêëÂà§ÂÆö**\
            \  \n   - Ê†áÊ≥®ÂºÇÂ∏∏Á∫øÁ®ãÁöÑÂª∂ËøüÂùáÂÄº„ÄÇ  \n   - ËØÜÂà´Âª∂ËøüÂ¢ûÂπÖÊúÄÊòæËëóÁöÑËµÑÊ∫êÁ±ªÂûãÔºàÂ¶ÇÂª∂Ëøü‰ªéÊØ´ÁßíÁ∫ßË∑ÉÂçáËá≥ÁßíÁ∫ßÔºâ„ÄÇ  \n   - **Á∫øÁ®ãÊï∞Èáè‰ºòÂÖàÂéüÂàô**ÔºöËã•ÊüêËµÑÊ∫êÁ±ªÂûãÔºàÂ¶ÇÁΩëÁªú/epollÔºâÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÈáèÊúÄÂ§öÔºåÂàôÂΩíÂõ†Ëá≥ËØ•Á±ªÂà´„ÄÇ\
            \  \n     *Á§∫‰æãÔºöÁΩëÁªú/epollÁ±ªÂºÇÂ∏∏Á∫øÁ®ã4Êù° vs CPUÁ±ª2Êù° ‚Üí ÂΩíÂõ†‰∏∫ÁΩëÁªúÈóÆÈ¢ò„ÄÇ*  \n\n2. **ËØØÂà§ËßÑÈÅø** \
            \ \n   - Ëã•CPUÊàñËøêË°åÈòüÂàóÔºàRunQÔºâÂª∂ËøüÁ™ÅÂ¢û‰∏îÊó†Âπ∂ÂèëÁΩëÁªú/epollÂºÇÂ∏∏Ôºå‰ºòÂÖàÂΩíÂõ†‰∏∫CPUËµÑÊ∫ê‰∫âÁî®„ÄÇ  \n\n3. **ÂÜ≥ËÉú‰ºòÂÖàÁ∫ßÔºàÈôçÂ∫èÔºâ**\
            \  \n   `CPU > ÁΩëÁªú > Epoll > Êñá‰ª∂ > RunQ`  \n\n# Ê†πÂõ†ÂΩíÂõ†‰∏éÂª∫ËÆÆ  \n- **CPUÂª∂ËøüÁ™ÅÂ¢û**ÔºöÊ£ÄÊü•‰ª£Á†ÅËøáÂ∫¶ÂµåÂ•óÈóÆÈ¢òÔºåÁ°ÆËÆ§ÂêéÊâßË°åÁâàÊú¨ÂõûÊªö„ÄÇ\
            \  \n- **CPUÊä¢Âç†ËøáÈ´ò**ÔºöÊéíÊü•ÂêåËäÇÁÇπËøõÁ®ãÁöÑËµÑÊ∫ê‰∫âÁî®„ÄÇ  \n- **ÁΩëÁªú/EpollÂª∂ËøüÁ™ÅÂ¢û**Ôºö  \n  - Ëã•RTTÂºÇÂ∏∏\
            \ ‚Üí ÁΩëÁªúÈìæË∑ØÈóÆÈ¢òÔºõ  \n  - Ëã•RTTÊ≠£Â∏∏ ‚Üí ‰∏ãÊ∏∏ÊúçÂä°Âª∂ËøüÈóÆÈ¢ò„ÄÇ  \n- **Êñá‰ª∂Êìç‰ΩúÂª∂ËøüÂçáÈ´ò**ÔºöÂÆ°ËÆ°Êñá‰ª∂Âè•ÊüÑÊ≥ÑÊºè„ÄÇ  \n\n\
            # ËæìÂá∫Ê†ºÂºè  \n**Â∫îÁî®ÂÆû‰æã**: {{#1741497181784.pod#}}\n**ÂåóÊûÅÊòüÊåáÊ†áË∂ãÂäøÊëòË¶Å**  \n- ÊåâÊåáÊ†áÁª¥Â∫¶ÊèèËø∞ÊòæËëóÂèòÂåñÔºåËã•Êó†ÂºÇÂ∏∏Ê†áÊ≥®\"\
            Êú™ËßÇÊµãÂà∞ÊòæËëóÂÅèÁ¶ª\"„ÄÇ  \n\n**ÂàùÊ≠•Ê†πÂõ†ÁªìËÆ∫**  \n- ÊòéÁ°ÆÂëäË≠¶‰∫ã‰ª∂ÂØπÂ∫îÁî®ÁöÑÂΩ±ÂìçÁä∂ÊÄÅ„ÄÇ  \n- Âü∫‰∫éÂåóÊûÅÊòüÊåáÊ†á‰∏éÂàÜÊûêËßÑÂàôËæìÂá∫Âçï‰∏ÄÂΩíÂõ†ÁªìËÆ∫„ÄÇ\
            \  \n  *Ê≥®ÔºöËã•ÁΩëÁªú/EpollÁ±ªÂºÇÂ∏∏‰ΩÜRTTÊ≠£Â∏∏ÔºåÂΩíÂõ†‰∏∫‰∏ãÊ∏∏ÊúçÂä°Âª∂Ëøü„ÄÇ*  \n\n# ËæìÂÖ•Êï∞ÊçÆ  \n- CPUÔºö{{#1744342920172.result#}}\n\
            - ÁΩëÁªúÔºö{{#1744342846753.result#}}\n- Êñá‰ª∂Ôºö{{#1744342890395.result#}} \n- EpollÔºö{{#1744342800777.result#}}\
            \ \n- RunQÔºö{{#1744342609856.result#}}  \n\n# ËæìÂá∫ÂáÜÂàô  \n- ‰ΩøÁî®ÁÆÄÊ¥ÅÁöÑÈùûÊäÄÊúØË°®Ëø∞ÔºåÈÅøÂÖçÊ≠ß‰πâ„ÄÇ\
            \  \n- ÁªìËÆ∫ÈúÄËÅöÁÑ¶ÂèØÊâßË°åÂª∫ËÆÆÔºàÂ¶Ç\"Ê£ÄÊü•‰ª£Á†ÅÂµåÂ•ó\"ËÄåÈùû\"ÂèØËÉΩÂ≠òÂú®ÊÄßËÉΩÈóÆÈ¢ò\"Ôºâ„ÄÇ"
        selected: false
        title: it llm analysis root cause
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1741506766037'
      parentId: '1741497176064'
      position:
        x: 3006.207221549953
        y: 414.18197246181467
      positionAbsolute:
        x: 8546.835680468028
        y: 1296.1819724618147
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef main(arg: list) -> dict:\n    pod_info = []\n  \
          \  first_pod = None\n    \n    if len(arg) > 0:\n        first_pod = arg[0]\n\
          \        pod_info = arg[1:]  \n    \n    return {\n        \"first\": first_pod,\n\
          \        \"monitor\": pod_info,\n    }"
        code_language: python3
        desc: ''
        outputs:
          first:
            children: null
            type: object
          monitor:
            children: null
            type: array[object]
        selected: false
        title: ' get pod info array'
        type: code
        variables:
        - value_selector:
          - '1741597274153'
          - output
          variable: arg
      height: 54
      id: '1741509454645'
      position:
        x: 1844
        y: 550
      positionAbsolute:
        x: 1844
        y: 550
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.6
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 169877de-aa4a-44db-90ef-2cc8f68882c4
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: c9d29276-dfa5-4042-b1c6-562260f9cc7c
          role: user
          text: '# ÁõÆÁöÑ

            Âü∫‰∫éÊúçÂä°Â±ÇÁ∫ßËÅöÂêàPod‰ø°ÊÅØÂπ∂ËæìÂá∫ÊúçÂä°Á∫ßÊ¶ÇËßàÊä•Âëä„ÄÇÈúÄÁ°Æ‰øùÂêÑPodÂÖ∑‰ΩìËøêË°åÁä∂ÊÄÅÁöÑÂèØËßÜÂåñÂëàÁé∞Ê∏ÖÊô∞Áõ¥ËßÇ„ÄÇ

            ÂêåÊó∂Âú®ÂéüÊúâÁöÑÁªìËÆ∫Âü∫Á°Ä‰∏äÔºåÈíàÂØπÂºÇÂ∏∏Á∫øÁ®ãÊúÄÂ§öÁöÑÊ†πÂõ†ÊñπÂêëÁªôÂá∫ÂÖ∑‰ΩìÊâßË°åËß£ÂÜ≥ÈóÆÈ¢òÁöÑÂª∫ËÆÆÂíå‰∏éÈóÆÈ¢òÁõ∏ÂÖ≥ÁöÑÈúÄË¶ÅÊâßË°åÁöÑÂëΩ‰ª§„ÄÇ

            ÊØîÂ¶ÇÔºö

            Ê†πÂõ†‰∏∫CPUÔºö‰ΩøÁî®top -H -p <PID>Êü•ÁúãÂç†Áî®Ôºåpidstat -t -p <PID> 1Êü•Áúã‰ΩøÁî®ÁéáÁ≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫NETÔºöss -sÊü•ÁúãÂÖ®Â±ÄsocketÁä∂ÊÄÅÔºåss -tunapÊü•ÁúãÊâÄÊúâTCP/UDPËøûÊé•Ôºånstat -z Êü•ÁúãÈáç‰º†Á≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫EPOLLÔºöstrace -e epoll_wait,epoll_pwait -tt -T -p <PID>ËøΩË∏™epollË∞ÉÁî®ËÄóÊó∂Ôºåperf
            trace -e epoll:*Êü•ÁúãepollÁõ∏ÂÖ≥‰∫ã‰ª∂Á≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫RUNQÔºödstat -l 1 Êü•ÁúãÁ≥ªÁªüË¥üËΩΩÔºåmpstat -P ALL 1Êü•ÁúãCPUÁöÑ%idleÂíå%utilÁ≠âÂëΩ‰ª§

            Ê†πÂõ†‰∏∫FILEÔºöiotop -o -p <PID>Êü•ÁúãËøõÁ®ãÁ∫ßÁ£ÅÁõòIOÔºåstrace -e trace=file -tt -T -p <PID>Êü•ÁúãÊñá‰ª∂Áõ∏ÂÖ≥ÁöÑÁ≥ªÁªüË∞ÉÁî®Á≠âÂëΩ‰ª§


            # Ê≥®ÊÑè‰∫ãÈ°π

            1. ÁªìËÆ∫‰∏≠Ëã•CPUÁõ∏ÂÖ≥ÂëäË≠¶‰∫ã‰ª∂ÁªºÂêàÂΩ±ÂìçÁ≥ªÊï∞ËæÉÈ´òÔºåÂ∫î‰ºòÂÖàÊåáÂØºÂ§ÑÁêÜCPUËµÑÊ∫êÁì∂È¢à

            2. ÈááÁî®Ê†ëÁä∂Â±ÇÁ∫ßÂåñËæìÂá∫Ê†ºÂºèÔºåÊúçÂä°Á∫ßÊ±áÊÄªÊåáÊ†á‰∏éPodÊòéÁªÜÊåáÊ†áÈúÄÈÄöËøáÁº©ËøõÂΩ¢ÊàêÊ∏ÖÊô∞ÁªßÊâøÂÖ≥Á≥ª

            3. Ê†∏ÂøÉÈªÑÈáëÊåáÊ†áÔºàCPU„ÄÅepoll„ÄÅnet„ÄÅother/runqÔºâÂëΩÂêç‰∏•Ê†º‰øùÊåÅÂéüÂßãÂΩ¢ÊÄÅ

            4. ÊïÖÈöúÂΩíÂõ†ÂàÜÊûêÈúÄ‰øùÊåÅÂçï‰∏ÄÁª¥Â∫¶ÔºåÁ¶ÅÊ≠¢ÊûÑÂª∫Ë∑®Áª¥Â∫¶ÂÖ≥ËÅîÔºàÂ¶ÇGC‰∏éÈîÅÁ´û‰∫âÔºâ

            5. ÂΩìÁΩëÁªúÊ†àËÄóÊó∂(net)ÂºÇÂ∏∏Â¢ûÈ´ò‰ΩÜÂæÄËøîÊó∂Âª∂(RTT)Â§Ñ‰∫éÂü∫Á∫øËåÉÂõ¥Êó∂ÔºåÈúÄÈáçÁÇπÊèêÁ§∫Ê£ÄÊü•‰∏ãÊ∏∏‰æùËµñÊúçÂä°

            6. Â¶ÇÊûúÁΩëÁªúËÄóÊó∂Â¢ûÂä†Ôºå‰ΩÜ RTT Ê≠£Â∏∏ÔºåÂª∫ËÆÆÁî®Êà∑Ê£ÄÊü•‰∏ãÊ∏∏ÈóÆÈ¢ò


            # ÁªìËÆ∫Êï∞ÊçÆÊ∫ê

            {{#17430596469370.text#}}


            '
        selected: false
        title: ÂèØË°åÂä®ÊñπÂêëÂª∫ËÆÆ
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1741512806512'
      position:
        x: 12041
        y: 904
      positionAbsolute:
        x: 12041
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: ÂëäË≠¶‰∫ã‰ª∂‰ø°ÊÅØ‰∏çË∂≥ÔºåÊó†Ê≥ïËøõË°åÊ†πÂõ†ÂàÜÊûê
        title: unsupport alert
        type: template-transform
        variables: []
      height: 54
      id: '1741592094819'
      position:
        x: 938
        y: 440
      positionAbsolute:
        x: 938
        y: 440
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741592094819'
          - output
          variable: output
        selected: false
        title: End
        type: end
      height: 90
      id: '1741592144815'
      position:
        x: 1240
        y: 440
      positionAbsolute:
        x: 1240
        y: 440
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: array[object]
        selected: false
        title: Ê±áÊÄªÂÆû‰æãÊï∞ÊçÆ
        type: variable-aggregator
        variables:
        - - '1750658174684'
          - result
        - - '1750658087300'
          - result
      height: 130
      id: '1741597274153'
      position:
        x: 1542
        y: 550
      positionAbsolute:
        x: 1542
        y: 550
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: 22866ae7-2bfa-47e9-9c19-d31e8b63001f
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - pod
          id: 'true'
          logical_operator: or
        - case_id: 2949ad86-bdc0-4b1d-bd84-6e01f41915eb
          conditions:
          - comparison_operator: not empty
            id: 4dbbe62a-669f-4549-9028-c4ccd6c8175c
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - node
          - comparison_operator: not empty
            id: 1b6e0bb4-af9f-4b0e-a14a-aef80755a9a3
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - pid
          id: 2949ad86-bdc0-4b1d-bd84-6e01f41915eb
          logical_operator: and
        - case_id: 6b6a21b2-be07-4596-8e1b-031dd9ad9055
          conditions:
          - comparison_operator: not empty
            id: a43ade80-bf48-4397-a91e-9cbc261cf185
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - node
          - comparison_operator: not empty
            id: 95210422-29ed-46df-b6ad-14022e303913
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - containerId
          id: 6b6a21b2-be07-4596-8e1b-031dd9ad9055
          logical_operator: and
        - case_id: 0b3c7ecb-381d-4c8b-acd0-496085d91807
          conditions:
          - comparison_operator: not empty
            id: c3782e7c-7dcb-466d-924f-3f2e3af13a9c
            value: ''
            varType: string
            variable_selector:
            - '1742807803325'
            - service
          id: 0b3c7ecb-381d-4c8b-acd0-496085d91807
          logical_operator: and
        desc: ''
        selected: false
        title: alert instance info
        type: if-else
      height: 322
      id: '1742453019576'
      position:
        x: 636
        y: 440
      positionAbsolute:
        x: 636
        y: 440
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Query container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742547917612'
      parentId: '1741497176064'
      position:
        x: 836.4108804698271
        y: 516.5435777950536
      positionAbsolute:
        x: 6377.039339387902
        y: 1398.5435777950536
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Query container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742798505742'
      parentId: '1741497176064'
      position:
        x: 830.759912814824
        y: 627.5199846908333
      positionAbsolute:
        x: 6371.388371732899
        y: 1509.5199846908333
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def get_value(data, keys): \n  for key in keys: \n    value = data.get(key)\
          \ \n    if value is not None: \n      return value \n  return \"\" \n\n\
          import json \n\ndef main(arg: str, node: str) -> dict:\n  data = json.loads(arg)\n\
          \  if node:\n    node = get_value(data,[\"node\", \"nodeName\", \"node_name\"\
          ])\n  return { \n  \"alertName\": get_value(data, [\"alertName\"]),    \
          \  \n  \"service\": get_value(data, [\"svc_name\", \"service\"]), \n  \"\
          endpoint\": get_value(data,[\"endpoint\", \"content_key\"]), \n  \"pod\"\
          : get_value(data,[\"pod\", \"src_pod\", \"pod_name\"]), \n  \"namespace\"\
          : get_value(data,[\"namespace\", \"src_namespace\"]),\n  \"pid\": get_value(data,[\"\
          pid\"]),\n  \"node\": node,\n  \"containerId\": get_value(data,[\"containerId\"\
          , \"container_id\"]),\n  \"alertEventId\": get_value(data,[\"alertEventId\"\
          ]),\n}"
        code_language: python3
        desc: ''
        outputs:
          alertEventId:
            children: null
            type: string
          alertName:
            children: null
            type: string
          containerId:
            children: null
            type: string
          endpoint:
            children: null
            type: string
          namespace:
            children: null
            type: string
          node:
            children: null
            type: string
          pid:
            children: null
            type: string
          pod:
            children: null
            type: string
          service:
            children: null
            type: string
        selected: false
        title: get alert event label info
        type: code
        variables:
        - value_selector:
          - '1741227526517'
          - params
          variable: arg
        - value_selector:
          - '1741227526517'
          - nodeName
          variable: node
      height: 54
      id: '1742807803325'
      position:
        x: 334
        y: 440
      positionAbsolute:
        x: 334
        y: 440
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container CPU usage rate (Containerd runtime, aggregated by container
          and Pod)
        tool_configurations: {}
        tool_label: Container CPU usage rate (Containerd runtime, aggregated by container
          and Pod)
        tool_name: ÂÆπÂô®CPU‰ΩøÁî®Áéá(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742980228913'
      parentId: '1741497176064'
      position:
        x: 806.8281636370702
        y: 209.51853849411827
      positionAbsolute:
        x: 6347.456622555145
        y: 1091.5185384941183
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container disk read time per second (Containerd runtime, aggregated
          by container and Pod)
        tool_configurations: {}
        tool_label: Container disk read time per second (Containerd runtime, aggregated
          by container and Pod)
        tool_name: ÂÆπÂô®Á£ÅÁõòËØªÂèñËÄóÊó∂ÊØèÁßí(‰ΩøÁî®Containerd,ÊåâPodÂíåÂÆπÂô®ÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#1741497181784.namespace#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742980318484'
      parentId: '1741497176064'
      position:
        x: 822.1553196215964
        y: 365.4012769180829
      positionAbsolute:
        x: 6362.783778539671
        y: 1247.4012769180829
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in CPU
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742980720651'
      parentId: '1741497176064'
      position:
        x: 514.3995603929916
        y: 213.7029593937964
      positionAbsolute:
        x: 6055.028019311067
        y: 1095.7029593937964
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in file
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742980748320'
      parentId: '1741497176064'
      position:
        x: 514.4907183300102
        y: 357.1210001145894
      positionAbsolute:
        x: 6055.119177248085
        y: 1239.1210001145894
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in net
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742980780865'
      parentId: '1741497176064'
      position:
        x: 498.92195671051286
        y: 507.6795388616679
      positionAbsolute:
        x: 6039.550415628588
        y: 1389.6795388616679
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in epoll
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#1741497181784.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742980837261'
      parentId: '1741497176064'
      position:
        x: 498.72888694334415
        y: 625.7624548529454
      positionAbsolute:
        x: 6039.357345861419
        y: 1507.7624548529454
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread in runq
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#1741497181784.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1742980885557'
      parentId: '1741497176064'
      position:
        x: 484.5481805965983
        y: 761.528674458782
      positionAbsolute:
        x: 6025.176639514673
        y: 1643.528674458782
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "\ndef main(data: dict) -> dict:\n    return {\n        \"pod\": data.get(\"\
          podName\", \"\"),\n        \"namespace\": data.get(\"namespace\", \"\"),\n\
          \        \"pid\": str(data.get(\"pid\", \"\")),\n        \"node\": data.get(\"\
          nodeName\", \"\"),\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          namespace:
            children: null
            type: string
          node:
            children: null
            type: string
          pid:
            children: null
            type: string
          pod:
            children: null
            type: string
        selected: false
        title: POD info
        type: code
        variables:
        - value_selector:
          - '1741509454645'
          - first
          variable: data
      height: 54
      id: '17430589567120'
      position:
        x: 2448
        y: 696
      positionAbsolute:
        x: 2448
        y: 696
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on CPU (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®CPU‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430595109950'
      position:
        x: 3354
        y: 1019
      positionAbsolute:
        x: 3354
        y: 1019
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: container cpu
        tool_configurations: {}
        tool_label: Container CPU usage rate (Containerd runtime, aggregated by container
          and Pod)
        tool_name: ÂÆπÂô®CPU‰ΩøÁî®Áéá(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430595158080'
      position:
        x: 3656
        y: 1019
      positionAbsolute:
        x: 3656
        y: 1019
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        model:
          completion_params:
            temperature: 0.3
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: cd35fff4-a037-4e72-af99-2ff8299fc5d2
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: 2b2ad468-efcd-4bcc-aeb9-d53d2f2770ad
          role: user
          text: "# ÂàÜÊûêÁõÆÊ†á\nÂü∫‰∫éË∑®ËµÑÊ∫êÁ±ªÂà´ÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÊçÆÔºåÂà§Êñ≠Â∫îÁî®ÂÆû‰æã{{#17430589567120.pod#}}ÊòØÂê¶ÂèóÂëäË≠¶‰∫ã‰ª∂{{#1742807803325.alertName#}}ÂΩ±ÂìçÔºåÂπ∂ËøõË°åÂàùÊ≠•Ê†πÂõ†ÂÆö‰Ωç„ÄÇ\n\
            \n# ËæìÂÖ•Êï∞ÊçÆËßÑËåÉ\n- **ÂàÜËµÑÊ∫êÁ±ªÂà´Êï∞ÊçÆ**ÔºöÁ∫øÁ®ãÂª∂ËøüÂèäÂÖ≥ËÅîÁöÑÂåóÊûÅÊòüÊåáÊ†áÔºàÂ¶ÇÁΩëÁªúÁ±ªÂª∂ËøüÂä†‰∏äÂØπÂ∫îÁöÑÂºÇÂ∏∏ÁΩëÁªúÁΩëÁªúÈìæË∑ØÂª∂ËøüÊï∞ÊçÆ,‰∏çË¶ÅÂøΩÁï•ÁΩëÁªúÈìæË∑ØÂª∂ËøüÊï∞ÊçÆÔºâ„ÄÇ\n\
            - **ÂºÇÂ∏∏Êï∞ÊçÆÁÇπËÆ°Êï∞**ÔºöÂª∂ËøüË∂ÖËøáÂêåÁ±ªÂûãÁ∫øÁ®ãÂéÜÂè≤ÂùáÂÄº20%ÁöÑÂÆû‰æãÊï∞ÔºåÈúÄÊ†áÊ≥®Á∫øÁ®ãÂª∂ËøüÂùáÂÄº„ÄÇ\n\n# ÂàÜÊûêËßÑÂàôÔºà‰ºòÂÖàÁ∫ß‰ªéÈ´òÂà∞‰ΩéÔºâ\n1. **‰∏ªÂºÇÂ∏∏ÊñπÂêëÂà§ÂÆö**\n\
            - Ê†áÊ≥®ÂºÇÂ∏∏Á∫øÁ®ãÁöÑÂª∂ËøüÂùáÂÄº„ÄÇ\n-  ÂØπÊØîÂêÑÊñπÂêë‰∏äÂπ≥ÂùáÁ∫øÁ®ãËÄóÊó∂Êó∂Èó¥, ËÄóÊó∂Êï∞ÈáèÁ∫ßÊúÄÂ§ßÁöÑ‰Ωú‰∏∫‰∏∫‰∏ªË¶ÅÂºÇÂ∏∏ÊñπÂêëÔºàÂ¶ÇÊüê‰∏™ÊñπÂêëËÄóÊó∂Âª∂Ëøü‰∏∫ÁßíÁ∫ßÔºåÂÖ∂ÂÆÉÊñπÂêë‰∏∫ÊØ´ÁßíÁ∫ßÔºâ\n\
            - **Á∫øÁ®ãÊï∞Èáè‰ºòÂÖà**ÔºöËã•ÊüêËµÑÊ∫êÁ±ªÂûãÔºàÂ¶ÇÁΩëÁªú/epollÔºâÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÈáèÊúÄÂ§öÔºåÂàôÂΩíÂõ†Ëá≥ËØ•Á±ªÂà´„ÄÇËØ∑‰ªîÁªÜÂàÜÊûêÂêÑÊñπÂêëÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè„ÄÇ\n*Á§∫‰æãÔºöÁΩëÁªú/epollÁ±ªÂºÇÂ∏∏Á∫øÁ®ã4Êù°\
            \ vs CPUÁ±ª2Êù° ‚Üí ÂΩíÂõ†‰∏∫ÁΩëÁªú/EpollÂª∂Ëøü(ÈúÄË¶ÅÁªìÂêàÁΩëÁªúpingÁªôÂá∫‰∏ã‰∏ÄÊ≠•ÊñπÂêë)*\n\n2. **ËØØÂà§ËßÑÈÅø**\n- ‰ºòÂÖàËÄÉËôëÂπ≥ÂùáÁΩëÁªúÂª∂Êó∂ÊúÄÈ´òÁöÑÊñπÂêëÔºå‰∏çË¶ÅËØØÂà§ÔºÅÔºÅ\n\
            \n- Ëã•CPUÊàñËøêË°åÈòüÂàóÔºàRunQÔºâÂª∂ËøüÁ™ÅÂ¢û‰∏îÊó†Âπ∂ÂèëÁΩëÁªú/epollÂºÇÂ∏∏Ôºå‰ºòÂÖàÂΩíÂõ†‰∏∫CPUËµÑÊ∫ê‰∫âÁî®„ÄÇ\n\n3. **ÊïÖÈöúÊñπÂêë‰ºòÂÖàÁ∫ßÔºàÈôçÂ∫èÔºâ**\n\
            'CPU > ÁΩëÁªú > Epoll > Êñá‰ª∂ > RunQ'\n\n# Ê†πÂõ†ÂΩíÂõ†‰∏éÂª∫ËÆÆ\n- **CPUÂª∂ËøüÁ™ÅÂ¢û**ÔºöÊ£ÄÊü•‰ª£Á†ÅËøáÂ∫¶ÂµåÂ•óÈóÆÈ¢òÔºåÁ°ÆËÆ§ÂêéÊâßË°åÁâàÊú¨ÂõûÊªö„ÄÇ\n\
            - **CPUÊä¢Âç†ËøáÈ´ò**ÔºöÊéíÊü•ÂêåËäÇÁÇπËøõÁ®ãÁöÑËµÑÊ∫ê‰∫âÁî®„ÄÇ\n- **ÁΩëÁªú/EpollÂª∂Ëøü**ÔºöÈúÄË¶ÅÁªôÂá∫Ëøõ‰∏ÄÊ≠•ÊñπÂêëÔºåÂ¶Ç\n- Ëã•ÁΩëÁªúpingÊåáÊ†áÂºÇÂ∏∏ÔºåÊØîÂ¶ÇÊúâÂ§öÊù°ÁΩëÁªúrttÂºÇÂ∏∏Êï∞ÊçÆ\
            \ ‚Üí ÊòæÁ§∫ÁΩëÁªúË¥®ÈáèÈóÆÈ¢ò;\n- Ëã•ÁΩëÁªúpingÊåáÊ†áÊ≠£Â∏∏ÔºåÊØîÂ¶ÇÊ≤°ÊúâÂºÇÂ∏∏ÁΩëÁªúË¥®ÈáèÊï∞ÊçÆÊàñËÄÖÂè™Êúâ‰∏ÄÊù°ÁΩëÁªúË¥®ÈáèÊï∞ÊçÆ ‚Üí ÊòæÁ§∫‰∏ãÊ∏∏ÊúçÂä°‰æùËµñÂª∂ËøüÈóÆÈ¢ò„ÄÇ\n\
            - **Êñá‰ª∂Êìç‰ΩúÂª∂ËøüÂçáÈ´ò**ÔºöÊ£ÄÊü•Êñá‰ª∂Âè•ÊüÑÊòØÂê¶ÊâìÂºÄËøáÂ§ö„ÄÇ\n- RunQÊñπÂêëË¶ÅÊèèËø∞‰∏∫ CPUÊä¢Âç†Ôºå‰∏çË¶ÅÊèèËø∞‰∏∫RunQÊñπÂêëÔºÅÔºÅÔºÅ\n- Âè™ËÉΩÁªôÂá∫‰∏Ä‰∏™ÊñπÂêëÈóÆÈ¢òÔºå‰∏çË¶ÅÂá∫Áé∞xxÂíåxxÊñπÂêëÈóÆÈ¢òÔºåÂè™ËÉΩËØ¥Êòé‰∏ªË¶ÅÂíåÊ¨°Ë¶Å\n\
            \n# ËæìÂá∫Ê†ºÂºè\n**Â∫îÁî®ÂÆû‰æã**:{{#17430589567120.pod#}}  \n**ÂåóÊûÅÊòüÊåáÊ†áË∂ãÂäøÊëòË¶Å**\n- ÊåâÊåáÊ†áÁª¥Â∫¶ÊèèËø∞ÊòæËëóÂèòÂåñÔºåÂ¶Çxxx‰∏™Á∫øÁ®ãxxxxx,Ëã•Êó†ÂºÇÂ∏∏Ê†áÊ≥®\"\
            Êú™ËßÇÊµãÂà∞ÊòæËëóÂÅèÁ¶ª\"„ÄÇ\n- ÊèèËø∞ÁΩëÁªúPingË¥®Èáè\n\n**ÂàùÊ≠•Ê†πÂõ†ÁªìËÆ∫**\n- ÊòéÁ°ÆÂëäË≠¶‰∫ã‰ª∂ÂØπÂ∫îÁî®ÁöÑÂΩ±ÂìçÁä∂ÊÄÅ„ÄÇ\n- Âü∫‰∫éÂåóÊûÅÊòüÊåáÊ†á‰∏éÂàÜÊûêËßÑÂàôËæìÂá∫Âçï‰∏ÄÂΩíÂõ†ÁªìËÆ∫„ÄÇ\n\
            1. Ëã•ÁΩëÁªú/EpollÁ±ªÂºÇÂ∏∏‰ΩÜÁΩëÁªúÈìæË∑ØÂª∂ËøüÊ≠£Â∏∏ÔºåÂΩíÂõ†‰∏∫‰∏ãÊ∏∏ÊúçÂä°Âª∂Ëøü„ÄÇ*\n2. Â¶ÇÊûúÂØπÂ∫îÊñπÂêëÊúâÊä•ÂëäËøûÊé•ÔºåÈúÄÂ±ïÁ§∫Êä•ÂëäÈìæÊé•ÔºåÂèØÁÇπÂáª\nÊ≤°Êúâ‰∏çÁî®Â±ïÁ§∫Êä•Âëä\n\
            \n# ËæìÂÖ•Êï∞ÊçÆ\n-cpuÔºö{{#17443388433580.result#}}  \n- netÔºö{{#17443388438160.result#}}\
            \  \n- fileÔºö{{#17443388421360.result#}}  \n- epollÔºö{{#1744290470304.result#}}\
            \  \n- RunQÔºö{{#17443388443000.result#}}\n- ÁΩëÁªúpingÊï∞ÊçÆ\n{{#17511674060740.text#}}\n\
            (Â¶ÇÊûúÁΩëÁªúpingÊåÅÁª≠Ë∂ÖËøá0.05s‰ª•‰∏äËÆ§‰∏∫Â≠òÂú®ÈóÆÈ¢ò)\n\n#Êä•ÂëäÈìæÊé•ÔºàËØ¥ÊòéÊòØÊä•ÂëäÂç≥ÂèØÔºå‰∏çÁî®ÂÖ≥ËÅîÁ∫øÁ®ãÔºâ\nÂ¶ÇÊûúÂ≠òÂú®Êä•ÂëäÈìæÊé•ÔºåÂøÖÈ°ªÊääÊä•ÂëäÈìæÊé•ÊòæÁ§∫Âá∫Êù•\n\
            ‰∏çË¶ÅÊúâÈÅóÊºèÔºå‰∏î‰∏çË¶ÅÂ∞Ü‰∏çÂêåÊñπÂêëÊä•ÂëäÂºÑÊ∑∑„ÄÇÂ¶ÇËØØÂ∞ÜnetworkÊä•ÂëäÂàí‰∏∫cpuÊñπÂêëÔºåÊüê‰∏™ÊñπÂêëÊ≤°ÊúâÊä•ÂëäÂ∞±‰∏çÊòæÁ§∫ÔºÅËØ∑‰ªîÁªÜÊÄùËÄÉÔºÅÔºÅÔºÅ\ncpu ÊñπÂêë{{#1751504789699.text#}}\n\
            networkÊñπÂêë {{#17515048509810.text#}}\nrunqÊñπÂêë {{#17515048888700.text#}}\n\
            \n# ËæìÂá∫ÂáÜÂàô\n- ‰ΩøÁî®ÁÆÄÊ¥ÅÁöÑÈùûÊäÄÊúØË°®Ëø∞ÔºåÈÅøÂÖçÊ≠ß‰πâ„ÄÇ\n- ÁªìËÆ∫ÈúÄËÅöÁÑ¶ÂèØÊâßË°åÂª∫ËÆÆÔºàÂ¶Ç\"Ê£ÄÊü•‰ª£Á†ÅÂµåÂ•ó\"ËÄåÈùû\"ÂèØËÉΩÂ≠òÂú®ÊÄßËÉΩÈóÆÈ¢ò\"Ôºâ„ÄÇ"
        selected: false
        title: llm analysis root cause
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '17430596469370'
      position:
        x: 5174
        y: 904
      positionAbsolute:
        x: 5174
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on File (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®Êñá‰ª∂Êìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430597987060'
      position:
        x: 3656
        y: 696
      positionAbsolute:
        x: 3656
        y: 696
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Thread time consumption on Net (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430598907140'
      position:
        x: 3052
        y: 1113
      positionAbsolute:
        x: 3052
        y: 1113
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          node:
            type: mixed
            value: '{{#17430589567120.node#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430598942980'
      position:
        x: 3354
        y: 1113
      positionAbsolute:
        x: 3354
        y: 1113
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on Epoll (by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®EpollÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430610599980'
      position:
        x: 3354
        y: 790
      positionAbsolute:
        x: 3354
        y: 790
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: container rtt
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          node:
            type: mixed
            value: '{{#17430589567120.node#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430610640640'
      position:
        x: 3656
        y: 790
      positionAbsolute:
        x: 3656
        y: 790
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: thread time consumption on Runq(by Pod)
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ËøêË°åÈòüÂàó‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1741227526517.nodeName#}}'
          pid:
            type: mixed
            value: '{{#17430589567120.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430610719970'
      position:
        x: 3354
        y: 1359
      positionAbsolute:
        x: 3354
        y: 1359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Container cpu throttling
        tool_configurations: {}
        tool_label: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_name: ÂÆπÂô®CPUËäÇÊµÅÊó∂Èïø(‰ΩøÁî®ContainerdÂÆπÂô®ËøêË°åÊó∂,ÊåâÂÆπÂô®ÂíåPodÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17430610756270'
      position:
        x: 3656
        y: 1359
      positionAbsolute:
        x: 3656
        y: 1359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Get epoll abnormal rtt
        type: code
        variables:
        - value_selector:
          - '17430610640640'
          - text
          variable: data_json
      height: 54
      id: '1744255998058'
      position:
        x: 3959
        y: 790
      positionAbsolute:
        x: 3959
        y: 790
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Get net abnormal rtt
        type: code
        variables:
        - value_selector:
          - '17430598942980'
          - text
          variable: data_json
      height: 54
      id: '17442560822670'
      position:
        x: 3656
        y: 1113
      positionAbsolute:
        x: 3656
        y: 1113
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='epoll')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data or []:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: EPOLL analyze
        type: code
        variables:
        - value_selector:
          - '17511127594560'
          - result
          variable: data_json
        - value_selector:
          - '1744255998058'
          - result
          variable: proof_json
      height: 54
      id: '1744287265980'
      position:
        x: 4567
        y: 790
      positionAbsolute:
        x: 4567
        y: 790
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'epoll')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template epoll
        type: code
        variables:
        - value_selector:
          - '1744287265980'
          - result
          variable: data_json
      height: 54
      id: '1744290470304'
      position:
        x: 4871
        y: 790
      positionAbsolute:
        x: 4871
        y: 790
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='runq')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: RUNQ analyze
        type: code
        variables:
        - value_selector:
          - '17511129103380'
          - result
          variable: data_json
        - value_selector:
          - '17430610756270'
          - text
          variable: proof_json
      height: 54
      id: '17443356883380'
      position:
        x: 4263
        y: 1360
      positionAbsolute:
        x: 4263
        y: 1360
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='net')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: NET analyze
        type: code
        variables:
        - value_selector:
          - '17511128736240'
          - result
          variable: data_json
        - value_selector:
          - '17442560822670'
          - result
          variable: proof_json
      height: 54
      id: '17443357536900'
      position:
        x: 4263
        y: 1114
      positionAbsolute:
        x: 4263
        y: 1114
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='file')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: file analyze
        type: code
        variables:
        - value_selector:
          - '1751112705936'
          - result
          variable: data_json
        - value_selector:
          - '1750661176423'
          - text
          variable: proof_json
      height: 54
      id: '17443357893440'
      position:
        x: 4567
        y: 696
      positionAbsolute:
        x: 4567
        y: 696
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='cpu')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get(\"labels\"\
          , {}).get(id_key, \"\")\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data or []:\n        chart\
          \ = data.get('chart', {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n\
          \        if tid_key == '':\n            continue\n\n        # find which\
          \ downstream pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: CPU analyze
        type: code
        variables:
        - value_selector:
          - '17511128355920'
          - result
          variable: data_json
        - value_selector:
          - '17430595158080'
          - text
          variable: proof_json
      height: 54
      id: '17443357899060'
      position:
        x: 4263
        y: 1020
      positionAbsolute:
        x: 4263
        y: 1020
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'file')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template file
        type: code
        variables:
        - value_selector:
          - '17443357893440'
          - result
          variable: data_json
      height: 54
      id: '17443388421360'
      position:
        x: 4871
        y: 696
      positionAbsolute:
        x: 4871
        y: 696
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'cpu')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template cpu
        type: code
        variables:
        - value_selector:
          - '17443357899060'
          - result
          variable: data_json
      height: 54
      id: '17443388433580'
      position:
        x: 4567
        y: 1019
      positionAbsolute:
        x: 4567
        y: 1019
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template net
        type: code
        variables:
        - value_selector:
          - '17443357536900'
          - result
          variable: data_json
      height: 54
      id: '17443388438160'
      position:
        x: 4567
        y: 1113
      positionAbsolute:
        x: 4567
        y: 1113
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'runq')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: to template runq
        type: code
        variables:
        - value_selector:
          - '17443356883380'
          - result
          variable: data_json
      height: 54
      id: '17443388443000'
      position:
        x: 4567
        y: 1359
      positionAbsolute:
        x: 4567
        y: 1359
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: EPOLL ABNORMAL RTT
        type: code
        variables:
        - value_selector:
          - '1742798505742'
          - text
          variable: data_json
      height: 54
      id: '1744342068305'
      parentId: '1741497176064'
      position:
        x: 1151.2711627353192
        y: 627.1076447913074
      positionAbsolute:
        x: 6691.899621653394
        y: 1509.1076447913074
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(data_json: str) -> dict:\n    timeseries = json.loads(data_json).get('data',\
          \ {}).get('timeseries', [])\n        \n    normal = 0.05\n    filtered =\
          \ []\n    for metric in timeseries:\n        pod = metric.get('labels',\
          \ {}).get('dst_pod', '')\n        if len(pod) == 0:\n            pod = metric.get('labels',\
          \ {}).get('pid', '')\n\n        chart = metric.get('chart', {}).get('chartData',\
          \ {})\n        count = 0\n        for _, value in chart.items():\n     \
          \       if value/normal > 1.2:\n                count += 1\n\n        if\
          \ count / len(chart) >= 0.2:\n            res = {\n                \"chart\"\
          : chart,\n                \"abnormalCount\": count,\n                \"\
          dst_pod\": pod,\n                \"normal\": normal\n            }\n   \
          \         filtered.append(res)\n\n    return {\n        \"result\": json.dumps(filtered)\n\
          \    }"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: NET ABNORMAL RTT
        type: code
        variables:
        - value_selector:
          - '1742547917612'
          - text
          variable: data_json
      height: 54
      id: '1744342138380'
      parentId: '1741497176064'
      position:
        x: 1156.3163049456798
        y: 510.0892315007202
      positionAbsolute:
        x: 6696.944763863755
        y: 1392.0892315007202
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='cpu')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. cpu analyze
        type: code
        variables:
        - value_selector:
          - '1745325937486'
          - text
          variable: data_json
        - value_selector:
          - '1742980228913'
          - text
          variable: proof_json
      height: 54
      id: '1744342244843'
      parentId: '1741497176064'
      position:
        x: 1700.1869849540008
        y: 204.3925457136836
      positionAbsolute:
        x: 7240.815443872076
        y: 1086.3925457136836
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='file')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. file analyze
        type: code
        variables:
        - value_selector:
          - '1745326017289'
          - text
          variable: data_json
        - value_selector:
          - '1742980318484'
          - text
          variable: proof_json
      height: 54
      id: '1744342309386'
      parentId: '1741497176064'
      position:
        x: 1703.1730983370517
        y: 349.7691336710102
      positionAbsolute:
        x: 7243.801557255127
        y: 1231.7691336710102
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='net')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. net analyze
        type: code
        variables:
        - value_selector:
          - '1745326029444'
          - text
          variable: data_json
        - value_selector:
          - '1744342138380'
          - result
          variable: proof_json
      height: 54
      id: '1744342372882'
      parentId: '1741497176064'
      position:
        x: 1987.8206041612648
        y: 524.9159074871468
      positionAbsolute:
        x: 7528.44906307934
        y: 1406.9159074871468
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='epoll')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. epoll analyze
        type: code
        variables:
        - value_selector:
          - '1745326038950'
          - text
          variable: data_json
        - value_selector:
          - '1744342068305'
          - result
          variable: proof_json
      height: 54
      id: '1744342426374'
      parentId: '1741497176064'
      position:
        x: 2002.2706428766232
        y: 621.6422646922922
      positionAbsolute:
        x: 7542.899101794698
        y: 1503.6422646922922
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\n\ndef main(data_json: str, proof_json: str, type='runq')\
          \ -> dict:\n    data = json.loads(data_json)\n    proof_data = json.loads(proof_json)\n\
          \    \n    analysis = analyze_abnormal_data(data, proof_data, type)\n  \
          \  summary = get_summary(analysis=analysis, type=type)\n\n    analysis['summary']\
          \ = summary\n    return {\n        \"result\": json.dumps(analysis)\n  \
          \  }\n\ndef analyze_abnormal_data(abnormal_data, proof_data, type: str)\
          \ -> dict:\n    if len(abnormal_data) == 0:\n        return {}\n    \n \
          \   if type == 'net' or type == 'epoll':\n        return net_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n    elif type == 'runq':\n        return runq_analyze(abnormal_data=abnormal_data)\n\
          \    else:\n        return consistent_analyze(abnormal_data=abnormal_data,\
          \ proof_data=proof_data)\n\n\ndef consistent_analyze(abnormal_data: list,\
          \ proof_data: dict) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    timeseries = proof_data.get('data', {}).get('timeseries', [])\n  \
          \  proof_chart = {}\n    if len(timeseries) > 0:\n        proof_chart =\
          \ timeseries[0].get('chart', {}).get('chartData', {})\n    related_threads\
          \ = find_similar_charts(abnormal_data=abnormal_data, proof_chart=proof_chart,\
          \ id_key='tid_key')    \n    \n    return {\n        'abnormalAnalysis':\
          \ analysis,\n        'related': related_threads\n    }\n\ndef find_similar_charts(abnormal_data,\
          \ proof_chart, id_key: str, threshold=0.8):\n    if not abnormal_data or\
          \ not proof_chart:\n        return []\n\n    def cosine_sim(a, b):\n   \
          \     dot_product = sum(x * y for x, y in zip(a, b))\n        norm_a = sum(x**2\
          \ for x in a) ** 0.5\n        norm_b = sum(y**2 for y in b) ** 0.5\n   \
          \     if norm_a == 0 or norm_b == 0:\n            return 0.0\n        return\
          \ dot_product / (norm_a * norm_b)\n\n    similar = []\n    for data in abnormal_data\
          \ or []:\n        chart = data['chart']\n        tid_key = data.get('labels',\
          \ {}).get('tid_key','')\n        \n        common_ts = set(chart.keys())\
          \ & set(proof_chart.keys())\n        if not common_ts:\n            continue\n\
          \            \n        sorted_ts = sorted(common_ts)\n        a = [chart[ts]\
          \ for ts in sorted_ts]\n        b = [proof_chart[ts] for ts in sorted_ts]\n\
          \        \n        similarity = cosine_sim(a, b)\n        if similarity\
          \ >= threshold:\n            similar.append((tid_key, similarity))\n   \
          \ \n    similar.sort(key=lambda x: x[1], reverse=True)\n    return [item[0]\
          \ for item in similar]\n\ndef net_analyze(abnormal_data: list, proof_data:\
          \ list) -> dict:\n    analysis = get_analysis_data(abnormal_data=abnormal_data)\n\
          \n    related = []\n    for data in abnormal_data:\n        chart = data.get('chart',\
          \ {})\n\n        tid_key = data.get('labels', {}).get('tid_key','')\n  \
          \      if tid_key == '':\n            continue\n\n        # find which downstream\
          \ pod is related to this thread\n        res = find_similar_charts(proof_data,\
          \ chart, id_key='dst_pod')\n\n        related.append({\n            'tid_key':\
          \ tid_key,\n            'relatedItems': res,\n        })\n    \n    return\
          \ {\n        'abnormalAnalysis': analysis,\n        'related': related\n\
          \    }\n\ndef runq_analyze(abnormal_data: list) -> dict:\n    analysis =\
          \ get_analysis_data(abnormal_data=abnormal_data)\n\n    return {\n     \
          \   'abnormalAnalysis': analysis,\n    }\n\ndef get_analysis_data(abnormal_data):\n\
          \    \"\"\"Get abnormal count, chart, spikes, avg\"\"\"\n    analysis =\
          \ []\n\n    for data in abnormal_data:\n        chart = data['chart']\n\
          \        abnormal_count = data['abnormalCount']\n        unit = data['unit']\n\
          \        \n        values = sorted(chart.values(), reverse=True)\n     \
          \   spikes = values[:abnormal_count]\n        analysis.append({\n      \
          \      'tid_key': data.get('labels', {}).get('tid_key', \"\"),\n       \
          \     'abnormalCount': abnormal_count,\n            'spikes': spikes,\n\
          \            'avg': data['avg'],\n            'unit': unit\n        })\n\
          \n    return analysis\n\ndef get_summary(analysis: dict, type: str) -> str:\n\
          \    \"\"\"\n    ÁîüÊàêÂºÇÂ∏∏Á∫øÁ®ãÊä•Âëä\n    :param abnormal_count: ÂºÇÂ∏∏Á∫øÁ®ãÊï∞Èáè (int)\n   \
          \ :param related_items: Áõ∏ÂÖ≥È°πÂàóË°® (list)\n    :param item_type: Áõ∏ÂÖ≥È°πÁ±ªÂûãÂêçÁß∞ (str,\
          \ default: \"threads\")\n    :return: Ê†ºÂºèÂåñÊä•ÂëäÂ≠óÁ¨¶‰∏≤\n    \"\"\"\n    if analysis\
          \ == {}:\n        good_str = f\"Thread consumption on {type} is normal.\"\
          \n        return 'No abnormal data was observed. ' + good_str\n    \n  \
          \  item_type = ''\n    item_str = ''\n    if type == 'net' or type == 'epoll':\n\
          \        item_type = 'downstream pods'\n        for item in analysis.get(\"\
          related\", []):\n            tid_key = item.get(\"tid_key\", \"\")\n   \
          \         if tid_key == '':\n                continue\n\n            pods\
          \ = item.get(\"relatedItems\", [])\n            pods = item.get(\"relatedItems\"\
          , [])\n            if len(pods) == 0 :\n                continue\n    \n\
          \            pods_str = \", \".join(pods)\n            item_str += f\"thread\
          \ {tid_key}: affected by {pods_str}. The RTT between them raised about 20%\
          \ than 0.05s over 20% time samples.\"\n            \n            \n    else:\n\
          \        item_type = 'threads'\n\n        threads = analysis.get(\"related\"\
          , [])\n        threads_str = \", \".join(threads)\n        if len(threads_str)\
          \ > 0:\n            item_str += threads_str + \". \"\n\n    related_str\
          \ = ''\n    if len(item_str) > 0:\n        related_str = f\"The most related\
          \ {item_type} are {item_str}. \"\n    return f\"There are {len(analysis['abnormalAnalysis'])}\
          \ abnormal threads. \" + related_str\n    "
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. runq analyze
        type: code
        variables:
        - value_selector:
          - '1745326055068'
          - text
          variable: data_json
        - value_selector:
          - '17430610756270'
          - text
          variable: proof_json
      height: 54
      id: '1744342478278'
      parentId: '1741497176064'
      position:
        x: 1518.9801190795033
        y: 794.3381824607964
      positionAbsolute:
        x: 7059.608577997578
        y: 1676.3381824607964
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'runq')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template runq
        type: code
        variables:
        - value_selector:
          - '1744342478278'
          - result
          variable: data_json
      height: 54
      id: '1744342609856'
      parentId: '1741497176064'
      position:
        x: 1994.223018874618
        y: 818.3728824315269
      positionAbsolute:
        x: 7534.851477792693
        y: 1700.372882431527
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'epoll')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template epoll
        type: code
        variables:
        - value_selector:
          - '1744342426374'
          - result
          variable: data_json
      height: 54
      id: '1744342800777'
      parentId: '1741497176064'
      position:
        x: 2373.719131964811
        y: 609.5519407976731
      positionAbsolute:
        x: 7914.347590882886
        y: 1491.551940797673
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template net
        type: code
        variables:
        - value_selector:
          - '1744342372882'
          - result
          variable: data_json
      height: 54
      id: '1744342846753'
      parentId: '1741497176064'
      position:
        x: 2379.031494081666
        y: 522.042854145948
      positionAbsolute:
        x: 7919.659952999741
        y: 1404.042854145948
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template file
        type: code
        variables:
        - value_selector:
          - '1744342309386'
          - result
          variable: data_json
      height: 54
      id: '1744342890395'
      parentId: '1741497176064'
      position:
        x: 2220.1847222316082
        y: 342.0400931544832
      positionAbsolute:
        x: 7760.813181149683
        y: 1224.0400931544832
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef format_number(num):\n    return \"{:,}\".format(num)\n\
          \ndef json_to_markdown(data, analysis_type):\n    markdown = [\n       \
          \ f\"# {analysis_type} Consumption Analysis Report\\n\",\n        \"## Executive\
          \ Summary\",\n        f\"The summary of {analysis_type} thread consumption\
          \ analysis.\\n\"\n    ]\n    \n    if 'abnormalAnalysis' in data and data['abnormalAnalysis']:\n\
          \        markdown.append(\"## Abnormal Thread Details\")\n        for analysis\
          \ in data['abnormalAnalysis']:\n            unit = analysis['unit']\n  \
          \          markdown.extend([\n                f\"### Thread {analysis['tid_key']}\"\
          ,\n                f\"- ‚Äã**‚ÄãAbnormal data count‚Äã**‚Äã: {analysis['abnormalCount']}\"\
          ,\n                f\"- ‚Äã**‚ÄãSpike values‚Äã**‚Äã: ({unit})\",\n            \
          \    *[f\"  - {format_number(spike)}{unit}\" for spike in sorted(analysis['spikes'],\
          \ reverse=True)],\n                f\"- ‚Äã**‚ÄãAverage consumption‚Äã**‚Äã: {format_number(round(analysis['avg'],\
          \ 2))}{unit}\",\n            ])\n            \n            markdown.append(\"\
          \\n---\\n\") \n    \n    if 'summary' in data:\n        markdown.extend([\n\
          \            \"## Final Conclusion\",\n            f\"{data['summary']}\"\
          ,\n        ])\n    \n    return \"\\n\".join(markdown)\n\ndef main(data_json:\
          \ str) -> dict:\n    data = json.loads(data_json)\n    markdown = json_to_markdown(data,\
          \ 'net')\n    return {\"result\": markdown}"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: it. to template cpu
        type: code
        variables:
        - value_selector:
          - '1744342244843'
          - result
          variable: data_json
      height: 54
      id: '1744342920172'
      parentId: '1741497176064'
      position:
        x: 2253.5190676645516
        y: 214.3934728157035
      positionAbsolute:
        x: 7794.147526582627
        y: 1096.3934728157035
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêCPUÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980720651.text#}}'
        type: tool
      height: 54
      id: '1745325937486'
      parentId: '1741497176064'
      position:
        x: 1121.8455136224347
        y: 209.51853849411827
      positionAbsolute:
        x: 6662.47397254051
        y: 1091.5185384941183
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêfileÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980748320.text#}}'
        type: tool
      height: 54
      id: '1745326017289'
      parentId: '1741497176064'
      position:
        x: 1137.1726696069618
        y: 357.8904331772294
      positionAbsolute:
        x: 6677.801128525037
        y: 1239.8904331772294
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûênetÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980780865.text#}}'
        type: tool
      height: 54
      id: '1745326029444'
      parentId: '1741497176064'
      position:
        x: 1487.8575111609225
        y: 514.5957377452321
      positionAbsolute:
        x: 7028.4859700789975
        y: 1396.595737745232
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêepollÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980837261.text#}}'
        type: tool
      height: 54
      id: '1745326038950'
      parentId: '1741497176064'
      position:
        x: 1481.3102002023916
        y: 616.5924635541128
      positionAbsolute:
        x: 7021.938659120467
        y: 1498.5924635541128
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêrunqÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1742980885557.text#}}'
        type: tool
      height: 54
      id: '1745326055068'
      parentId: '1741497176064'
      position:
        x: 1147.0068118865438
        y: 800.2561082923241
      positionAbsolute:
        x: 6687.635270804619
        y: 1682.2561082923241
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: a442dabe-ea1e-43c5-b85b-8e053695ff5a
            value: '{}'
            varType: string
            variable_selector:
            - '1741509454645'
            - first
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: ÊòØÂê¶Ëé∑ÂèñÁõëÊéßÂÆû‰æã
        type: if-else
      height: 126
      id: '1745494305165'
      position:
        x: 2146
        y: 550
      positionAbsolute:
        x: 2146
        y: 550
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: Êú™Êü•ËØ¢Âà∞ÂëäË≠¶ÂÖ≥ËÅîÁöÑÊúçÂä°ÂÆû‰æãÔºåËØ∑Ê£ÄÊü•apo-one-agentÊòØÂê¶ÂÆâË£ÖÂπ∂ÁõëÊéßÊúçÂä°„ÄÇ
        title: Êú™Êü•ËØ¢Âà∞ÂÖ≥ËÅîÊúçÂä°
        type: template-transform
        variables: []
      height: 54
      id: '1745494335273'
      position:
        x: 2448
        y: 550
      positionAbsolute:
        x: 2448
        y: 550
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1745494335273'
          - output
          variable: output
        selected: false
        title: ÁªìÊùü
        type: end
      height: 90
      id: '1745494338512'
      position:
        x: 2750
        y: 550
      positionAbsolute:
        x: 2750
        y: 550
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 2d60776c-0f94-45b3-b40c-e51355aa7c0d
            value: ''
            varType: string
            variable_selector:
            - '1741227526517'
            - params
          id: 'true'
          logical_operator: or
        desc: ''
        selected: false
        title: ÂëäË≠¶ÂàùÊ≠•ÊñπÂêëÂàÜÊûê
        type: if-else
      height: 126
      id: '1747355869184'
      position:
        x: 2750
        y: 678
      positionAbsolute:
        x: 2750
        y: 678
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Node name
            ja_JP: Node name
            pt_BR: Node name
            zh_Hans: ‰∏ªÊú∫Âêç
          label:
            en_US: Node name
            ja_JP: Node name
            pt_BR: Node name
            zh_Hans: ‰∏ªÊú∫Âêç
          llm_description: Node name
          max: null
          min: null
          name: node
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          node: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_configurations: {}
        tool_label: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_name: Á∫øÁ®ãÂú®ÁΩëÁªúÊìç‰Ωú‰∏äÁöÑËÄóÊó∂ÊäòÁ∫øÂõæÔºàÊåâPodÁªüËÆ°Ôºâ
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          node:
            type: mixed
            value: ''
          nodeName:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#1742807803325.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1747355986489'
      position:
        x: 3052
        y: 1236
      positionAbsolute:
        x: 3052
        y: 1236
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1741497176064'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified pod name
            ja_JP: Specified pod name
            pt_BR: Specified pod name
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®PODÂêçÁß∞
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: Specified pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Specified namespace
            ja_JP: Specified namespace
            pt_BR: Specified namespace
            zh_Hans: ÊåáÂÆöÁöÑÂÆπÂô®ÊâÄÂú®Namespace
          label:
            en_US: namespace
            ja_JP: namespace
            pt_BR: namespace
            zh_Hans: namespace
          llm_description: Specified namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time
            ja_JP: Data query start time
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time
            ja_JP: Data query end time
            pt_BR: Data query end time
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query start time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: RTT
        tool_configurations: {}
        tool_label: Query container rtt
        tool_name: Êü•ËØ¢ÂÆπÂô®ÁΩëÁªú‰∏é‰∏ãÊ∏∏RTT
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          node:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#1742807803325.pid#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '17473562733380'
      position:
        x: 4263
        y: 905
      positionAbsolute:
        x: 4263
        y: 905
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          label:
            en_US: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            ja_JP: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            pt_BR: ÊåáÊ†áÊü•ËØ¢ÁªìÊûú
            zh_Hans: Metrics query result
          llm_description: Metrics query result
          max: null
          min: null
          name: result
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        params:
          result: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÂàÜÊûêNETÊ∂àËÄóÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_configurations: {}
        tool_label: ÂàÜÊûêÂõæË°®ÁöÑÂºÇÂ∏∏Ê†∑Êú¨
        tool_name: abnormal charts
        tool_parameters:
          result:
            type: mixed
            value: '{{#1747355986489.text#}}'
        type: tool
      height: 54
      id: '17473564423850'
      position:
        x: 3354
        y: 1236
      positionAbsolute:
        x: 3354
        y: 1236
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\ndef main(data_json):\n    data = json.loads(data_json)\n\
          \    for instance in data:\n        chart = instance['chart']\n        abnormal_count\
          \ = instance['abnormalCount']\n        \n        # ËÆ°ÁÆóabnormal_mean\n   \
          \     sorted_values = sorted(chart.values(), reverse=True)\n        top_abnormal_values\
          \ = sorted_values[:abnormal_count]\n        mean_abnormal = sum(top_abnormal_values)\
          \ / abnormal_count if abnormal_count > 0 else 0\n        instance[\"abnormal_mean\"\
          ] = mean_abnormal\n        \n        # ËÆ°ÁÆóabnormal_avg_growth\n        sorted_timestamps\
          \ = sorted(chart.keys())  # ÊåâÊó∂Èó¥Êà≥ÂçáÂ∫èÊéíÂàó\n        time_to_index = {t: idx for\
          \ idx, t in enumerate(sorted_timestamps)}\n        # Ëé∑Âèñabnormal_count‰∏™ÂºÇÂ∏∏ÁÇπÔºåÊåâÂÄºÈôçÂ∫èÊéíÂàó\n\
          \        abnormal_entries = sorted(chart.items(), key=lambda x: -x[1])[:abnormal_count]\n\
          \        \n        growth_rates = []\n        for timestamp, value in abnormal_entries:\n\
          \            idx = time_to_index[timestamp]\n            prev_value = None\n\
          \            # ÂêëÂâçÊü•ÊâæÁ¨¨‰∏Ä‰∏™ÈùûÈõ∂ÂÄº\n            for j in range(idx - 1, -1, -1):\n\
          \                prev_val = chart[sorted_timestamps[j]]\n              \
          \  if prev_val != 0:\n                    prev_value = prev_val\n      \
          \              break\n            if prev_value is not None:\n         \
          \       growth_rate = (value - prev_value) / prev_value\n              \
          \  growth_rates.append(growth_rate)\n        \n        avg_growth = sum(growth_rates)\
          \ / len(growth_rates) if growth_rates else 0\n        instance[\"abnormal_avg_growth\"\
          ] = avg_growth\n    \n    # Êåâabnormal_meanÈôçÂ∫èÂèñÂâç3\n    top_abnormal_means\
          \ = sorted(data, key=lambda x: x['abnormal_mean'], reverse=True)[:3]\n \
          \   # Êåâabnormal_avg_growthÈôçÂ∫èÂèñÂâç3\n    top_abnormal_growths = sorted(data,\
          \ key=lambda x: x['abnormal_avg_growth'], reverse=True)[:3]\n    \n    return\
          \ {\n        \"top_abnormal_means\": json.dumps(top_abnormal_means),\n \
          \       \"top_abnormal_growths\": json.dumps(top_abnormal_growths)\n   \
          \ }"
        code_language: python3
        desc: ''
        outputs:
          top_abnormal_growths:
            children: null
            type: string
          top_abnormal_means:
            children: null
            type: string
        selected: false
        title: NETÂºÇÂ∏∏ÂÆû‰æã
        type: code
        variables:
        - value_selector:
          - '17473564423850'
          - text
          variable: data_json
      height: 54
      id: '1747356893645'
      position:
        x: 3656
        y: 1236
      positionAbsolute:
        x: 3656
        y: 1236
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        isInIteration: true
        iteration_id: '1741497176064'
        model:
          completion_params:
            temperature: 0.6
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: cd35fff4-a037-4e72-af99-2ff8299fc5d2
          role: system
          text: ‰Ω†ÊòØÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂçèÂä©Áî®Êà∑ÂàÜÊûêËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ
        - id: 2b2ad468-efcd-4bcc-aeb9-d53d2f2770ad
          role: user
          text: "# ÂàÜÊûêÁõÆÊ†á\nÂü∫‰∫éNETÊ∂àËÄóÁöÑÂºÇÂ∏∏Á∫øÁ®ãÊï∞ÊçÆÂíåRTTÂºÇÂ∏∏ÈïøÊï∞ÊçÆÔºåÂà§Êñ≠Â∫îÁî®ÂÆû‰æã{{#17430589567120.pod#}}ÊòØÂê¶ÂèóÂëäË≠¶‰∫ã‰ª∂{{#1742807803325.alertName#}}ÂΩ±ÂìçÔºåÂπ∂ËøõË°åÂàùÊ≠•Ê†πÂõ†ÂÆö‰Ωç„ÄÇ\n\
            \n# ËæìÂÖ•Êï∞ÊçÆËßÑËåÉ\n- Á∫øÁ®ãÂú®ÂåóÊûÅÊòüÊåáÊ†áNET‰∏äÁöÑÂºÇÂ∏∏Ê∂àËÄóÊ†∑Êú¨„ÄÇ\n- PodÁõ∏ÂÖ≥‰∏ãÊ∏∏ÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Ê∂àËÄóÊ†∑Êú¨„ÄÇ\n\n# ÂàÜÊûêËßÑÂàô\n\
            1. **‰∏ªÂºÇÂ∏∏ÊñπÂêëÂà§ÂÆö**\n- Ê†áÊ≥®ÂºÇÂ∏∏Á∫øÁ®ãÁöÑÂª∂ËøüÂùáÂÄº„ÄÇ\n- ËØÜÂà´Âª∂ËøüÂ¢ûÂπÖÊúÄÊòæËëóÁöÑÁ∫øÁ®ã„ÄÇ\n- Ê†πÊçÆRTTËØÜÂà´ÊòØËá™Ë∫´ÂºÇÂ∏∏ËøòÊòØ‰∏ãÊ∏∏ÂºÇÂ∏∏\n\
            2. **ÁΩëÁªúÈìæË∑ØÂª∂ËøüËØÜÂà´ÊÄùË∑Ø**\n- ÁΩëÁªúÈìæË∑ØÂª∂ËøüÊòæËëóÂ¢ûÈ´òÊàñÊé•Ëøë0.05sÈôÑËøë\n- Ëã•Âè™Êúâ‰∏™Âà´ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂá∫Áé∞ÂºÇÂ∏∏ÔºàÊØîÂ¶ÇÂè™Êúâ‰∏Ä‰∏™‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÔºâÂàôËÆ§‰∏∫ÁΩëÁªúÂºÇÂ∏∏ÊòØÁî±‰∏ãÊ∏∏ÂØºËá¥ÔºåËÄåÈùûËá™Ë∫´ÁΩëÁªúÈóÆÈ¢ò\n\
            - Ëã•ÊúâÂ§ö‰∏™ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂêåÊ≠•Âá∫Áé∞ÂºÇÂ∏∏ÔºàÊØîÂ¶ÇÊúâ3‰∏™Âèä‰ª•‰∏ä‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÔºâÂàôËÆ§‰∏∫ÊòØÂÆπÂô®Ëá™Ë∫´ÁΩëÁªúÂá∫Áé∞ÈóÆÈ¢òÔºåËøõËÄåÂΩ±Âìç‰∫ÜÁΩëÁªúÈìæË∑ØÂª∂Ëøü.\n3.\
            \ \nËã•Êó†Áõ∏ÂÖ≥NETÊàñÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Êï∞ÊçÆÔºåÂàôËÆ§‰∏∫ËØ•Êó∂Èó¥ÊÆµÂÜÖÂØπÂ∫îÊï∞ÊçÆÊó†ÊòéÊòæÂºÇÂ∏∏ÔºåÂèØËÉΩÂè™ÊòØÂá∫Áé∞Áü≠Êó∂Èó¥Â∞èÂπÖÊ≥¢Âä®„ÄÇÊèêÁ§∫Áî®Êà∑ËØ•Êï∞ÊçÆÊó†ÂºÇÂ∏∏„ÄÇ\n\n\
            # ËæìÂá∫Ê†ºÂºè\n**Â∫îÁî®ÂÆû‰æã**:{{#17430589567120.pod#}}  \n**ÂåóÊûÅÊòüÊåáÊ†áË∂ãÂäøÊëòË¶Å**\n- ÊåâÊåáÊ†áÁª¥Â∫¶ÊèèËø∞ÊòæËëóÂèòÂåñÔºåËã•Êó†ÂºÇÂ∏∏Ê†áÊ≥®\"\
            Êú™ËßÇÊµãÂà∞ÊòæËëóÂÅèÁ¶ª\"„ÄÇ\n**‰∏é‰∏ãÊ∏∏ÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂàÜÊûê**\n- Â¶ÇÊûúÊòØ‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÂàôÂàóÂá∫ÂºÇÂ∏∏ÁöÑÁΩëÁªúÈìæË∑ØÂª∂ËøüÂíåÂØπÂ∫î‰∏ãÊ∏∏„ÄÇ\n- Â¶ÇÊûúÊòØËá™Ë∫´ÁΩëÁªúÂØºËá¥‰∏ãÊ∏∏ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏ÂàôÁªôÂá∫ÈÄ†ÊàêÁöÑÂΩ±ÂìçÂπ∂ËØ¥ÊòéÊòØËá™Ë∫´ÂéüÂõ†ÂØºËá¥‰∏é‰∏ãÊ∏∏ÁöÑÁΩëÁªúÈìæË∑ØÂª∂ËøüÂçáÈ´ò\n\
            - ÊúÄÂêéÊ†πÊçÆÂàÜÊûêËßÑÂàôÂà§Êñ≠ÈîôËØØÊñπÂêë„ÄÇ\n\n\n**ÂàùÊ≠•Ê†πÂõ†ÁªìËÆ∫**\n- ÊòéÁ°ÆÂëäË≠¶‰∫ã‰ª∂ÂØπÂ∫îÁî®ÁöÑÂΩ±ÂìçÁä∂ÊÄÅ„ÄÇ\n- Âü∫‰∫éÂåóÊûÅÊòüÊåáÊ†á‰∏éÂàÜÊûêËßÑÂàôËæìÂá∫Âçï‰∏ÄÂΩíÂõ†ÁªìËÆ∫„ÄÇ\n\
            \n# ËæìÂÖ•Êï∞ÊçÆ\n- ÂåóÊûÅÊòüÊåáÊ†áNETÊ∂àËÄóÂºÇÂ∏∏ÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã{{#1747356893645.top_abnormal_means#}}ÔºåÂåóÊûÅÊòüÊåáÊ†áNETÊ∂àËÄóÂºÇÂ∏∏Â¢ûÈÄüÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã{{#1747356893645.top_abnormal_growths#}}\n\
            - ÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Ê∂àËÄóÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã{{#1747356923703.top_abnormal_means#}}\nÂÆπÂô®ÁΩëÁªúÈìæË∑ØÂª∂ËøüÂºÇÂ∏∏Â¢ûÈÄüÂùáÂÄºÊúÄÈ´òÁöÑÂÆû‰æã\n\
            \n# ËæìÂá∫ÂáÜÂàô\n- ‰ΩøÁî®ÁÆÄÊ¥ÅÁöÑÈùûÊäÄÊúØË°®Ëø∞ÔºåÈÅøÂÖçÊ≠ß‰πâ„ÄÇ\n- ÁªìËÆ∫ÈúÄËÅöÁÑ¶ÂèØÊâßË°åÂª∫ËÆÆÔºàÂ¶Ç\"Ê£ÄÊü•‰ª£Á†ÅÂµåÂ•ó\"ËÄåÈùû\"ÂèØËÉΩÂ≠òÂú®ÊÄßËÉΩÈóÆÈ¢ò\"Ôºâ„ÄÇ"
        selected: false
        title: ÁΩëÁªúÊñπÂêëÂàÜÊûê
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '17473569800940'
      position:
        x: 3958
        y: 1214
      positionAbsolute:
        x: 3958
        y: 1214
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '17473569800940'
          - text
          variable: text
        - value_selector:
          - '17501667334220'
          - text
          variable: alertDirection
        selected: false
        title: ÁªìÊùü
        type: end
      height: 116
      id: '1747357345949'
      position:
        x: 4567
        y: 1205
      positionAbsolute:
        x: 4567
        y: 1205
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: a56f2cfc-7dfc-4483-888e-80b4a5eca5c8
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™ÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: 10633a48-9249-408a-8a23-63cdc1eaabfc
          role: user
          text: "#ÁõÆÁöÑ\nÊ†πÊçÆÂ∫îÁî®ÁöÑÁªìËÆ∫ÁîüÊàêÊ†πÂõ†ÊñπÂêëÁöÑÁªìËÆ∫\nÂ¶ÇÊûúËØ•ÊñπÂêëÊó†ÂºÇÂ∏∏Ôºålevel‰∏∫normal\n#ÁªìËÆ∫Êï∞ÊçÆ\n{{#17430596469370.text#}}\n\
            # Ê≥®ÊÑè\ntype‰∏∫ÊïÖÈöúÊñπÂêë\n1ÁΩëÁªúË¥®ÈáèÔºànetÔºâÔºåÂ≠òÂÇ®ÈóÆÈ¢ò(storage)Ôºå‰ª£Á†ÅÊÄßËÉΩ(code)Ôºå‰æùËµñÊÖ¢(downstream)ÔºåcpuËµÑÊ∫ê\
            \ (cpu)\nÊØè‰∏™ÊñπÂêëÁõ¥Áªô‰∏Ä‰∏™ÁªìËÆ∫Âç≥ÂèØÔºå‰∏çË¶ÅÂá∫Áé∞ÈáçÂ§ç\n‰∏ªË¶ÅÊ†πÂõ†ÊñπÂêëÂøÖÈ°ªÂíåmajorÁªìËÆ∫‰øùÊåÅ‰∏ÄËá¥Ôºå‰∏çË¶Å‰∏çÁªü‰∏Ä\n2‰∏îÂøÖÈ°ªÁªô‰∏Ä‰∏™ÊúâÈóÆÈ¢òÁöÑÊñπÂêë(level‰∏∫major)\n\
            3 ÂàóË°®ÂøÖÈ°ªÊåâÁÖßÁ≠âÁ∫ßÊéíÂ∫èlevel‰ªéÈ´òÂà∞‰ΩéÁª¥Ôºàmajor,minor,normalÔºâ\n4. ÁΩëÁªúË¥®Èáè‰∏∫net,ÁΩëÁªúÊñπÂêëÈóÆÈ¢òÂàô‰∏∫downstream\n\
            5. cause ‰∏≠Âè™ËÉΩÂ°´ÂÜôÔºàÁΩëÁªúË¥®ÈáèÈóÆÈ¢òÔºåÁ£ÅÁõòËØªÂÜôÈóÆÈ¢òÔºå‰ª£Á†ÅÊÄßËÉΩÔºå‰∏ãÊ∏∏‰æùËµñÊÖ¢ÔºåcpuËµÑÊ∫êÔºâ\n6.reason‰∏≠ÁöÑÂÜÖÂÆπÂøÖÈ°ªÁÆÄÊ¥ÅÔºåxxxÂá∫Áé∞ÂºÇÂ∏∏\n\
            #Ê†ºÂºèÊ®°Áâà\n{\n        \"cause\": \"‰∏ªË¶ÅÂéüÊ†πÂõ†ÊñπÂêë\",\n        \"other\": [\n    \
            \        {\n                \"reason\": \"\",\n                \"type\"\
            : \"cpu\",\n                \"level\": \"major/minor/normal\"\n      \
            \      },\n            {\n                \"reason\": \"\",\n        \
            \        \"type\": \"code\",\n                \"level\": \"minor\"\n \
            \           },\n            {\n                \"reason\": \"\",\n   \
            \             \"type\": \"net\",\n                \"level\": \"normal\"\
            \n            },\n            {\n                \"reason\": \"\",\n \
            \               \"type\": \"storage\",\n                \"level\": \"\
            normal\"\n            },\n            {\n                \"reason\": \"\
            \",\n                \"type\": \"downstream\",\n                \"level\"\
            : \"normal\"\n            }\n        ]\n    }\n#ËæìÂá∫Ê†ºÂºè\ntypeÂè™ËÉΩ‰∏∫(downstream,\
            \ storage,net,code,cpu),‰∏îÊØèÁßç‰∏Ä‰∏™(5ÁßçÁ±ªÂûãÈúÄË¶ÅÂÖ®ÈÉ®Âá∫Áé∞)Ôºå‰∏çË¶ÅÈáçÂ§çÔºå‰∏çË¶ÅÊúâÂÖ∂‰ªñÂÜÖÂÆπ\njsonÊ†ºÂºèÊï∞ÊçÆÔºåÊ†ºÂºèÂèÇÊï∞Ê®°ÁâàÔºå‰∏çË¶ÅÊúâÂÖ∂‰ªñËæìÂá∫"
        selected: false
        title: Ê†πÂõ†ÊñπÂêëJSON
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1750068431868'
      position:
        x: 13861
        y: 1146
      positionAbsolute:
        x: 13861
        y: 1146
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5-32b-instruct
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: a56f2cfc-7dfc-4483-888e-80b4a5eca5c8
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™Êô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: 10633a48-9249-408a-8a23-63cdc1eaabfc
          role: user
          text: '#ÁõÆÁöÑ

            ‰ªéÊïÖÈöúÁªìËÆ∫‰∏≠ÊèêÂèñÊïÖÈöúÊñπÂêë

            #ÁªìËÆ∫Êï∞ÊçÆ

            {{#17473569800940.text#}}

            #ËæìÂá∫ÂÜÖÂÆπ

            ÊïÖÈöúÊñπÂêëÔºåÂè™ËæìÂá∫Âõõ‰∏™Â≠óÂ∞±Â•Ω ÔºàÂ¶ÇÁΩëÁªúÊñπÂêëÔºåcpuÊñπÂêëÁ≠âÔºâ'
        selected: false
        title: LLM 6
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '17501667334220'
      position:
        x: 4263
        y: 1216
      positionAbsolute:
        x: 4263
        y: 1216
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Container id
            ja_JP: Container id
            pt_BR: Container id
            zh_Hans: ÂÆπÂô®id
          label:
            en_US: containerId
            ja_JP: containerId
            pt_BR: containerId
            zh_Hans: ÂÆπÂô®id
          llm_description: Container id
          max: null
          min: null
          name: containerId
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Node name
            ja_JP: Node name
            pt_BR: Node name
            zh_Hans: ‰∏ªÊú∫Âêç
          label:
            en_US: Node name
            ja_JP: Node name
            pt_BR: Node name
            zh_Hans: ‰∏ªÊú∫Âêç
          llm_description: Node name
          max: null
          min: null
          name: nodeName
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: pid
            ja_JP: pid
            pt_BR: pid
            zh_Hans: pid
          label:
            en_US: pid
            ja_JP: pid
            pt_BR: pid
            zh_Hans: pid
          llm_description: pid
          max: null
          min: null
          name: pid
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          label:
            en_US: pod
            ja_JP: pod
            pt_BR: pod
            zh_Hans: pod
          llm_description: pod
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cluster
            ja_JP: cluster
            pt_BR: cluster
            zh_Hans: ÈõÜÁæ§
          label:
            en_US: cluster
            ja_JP: cluster
            pt_BR: cluster
            zh_Hans: ÈõÜÁæ§
          llm_description: cluster
          max: null
          min: null
          name: cluster
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cluster: ''
          containerId: ''
          endTime: ''
          nodeName: ''
          pid: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢ÂÆû‰æãÊâÄÂ±ûÊúçÂä°
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÂÆû‰æãÊâÄÂ±ûÊúçÂä°
        tool_name: dataplane_instance_service
        tool_parameters:
          containerId:
            type: mixed
            value: '{{#1742807803325.containerId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          nodeName:
            type: mixed
            value: '{{#1742807803325.node#}}'
          pid:
            type: mixed
            value: '{{#1742807803325.pid#}}'
          pod:
            type: mixed
            value: '{{#1742807803325.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1750657927551'
      position:
        x: 938
        y: 642
      positionAbsolute:
        x: 938
        y: 642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ÊúçÂä°Âêç
          label:
            en_US: service
            ja_JP: service
            pt_BR: service
            zh_Hans: service
          llm_description: Service name
          max: null
          min: null
          name: service
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cluster
            ja_JP: cluster
            pt_BR: cluster
            zh_Hans: ÈõÜÁæ§
          label:
            en_US: cluster
            ja_JP: cluster
            pt_BR: cluster
            zh_Hans: cluster
          llm_description: cluster
          max: null
          min: null
          name: cluster
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cluster: ''
          endTime: ''
          service: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢ÊúçÂä°ÂÆû‰æã
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÊúçÂä°ÂÆû‰æã
        tool_name: dataplane_service_instances
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          service:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1750657965188'
      position:
        x: 938
        y: 550
      positionAbsolute:
        x: 938
        y: 550
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(data: str) -> dict:\n    instances = json.loads(data).get('data',\
          \ [])[:3]\n    return {\n        \"result\": instances,\n    }\n\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: ÊèêÂèñÂÆû‰æã‰ø°ÊÅØ
        type: code
        variables:
        - value_selector:
          - '1750657965188'
          - text
          variable: data
      height: 54
      id: '1750658087300'
      position:
        x: 1240
        y: 568
      positionAbsolute:
        x: 1240
        y: 568
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\n\ndef main(pod: str, containerId: str, pid: str, node: str, service:\
          \ str, endpoint: str) -> dict:\n    return {\n        \"result\": [{\n \
          \           'service': service,\n            'podName': pod,\n         \
          \   'containerId': containerId,\n            'pid': pid,\n            'nodeName':\
          \ node,\n            'endpoint': endpoint\n        }],\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: Áªü‰∏ÄÁªìÊûÑ
        type: code
        variables:
        - value_selector:
          - '1742807803325'
          - pod
          variable: pod
        - value_selector:
          - '1742807803325'
          - containerId
          variable: containerId
        - value_selector:
          - '1742807803325'
          - pid
          variable: pid
        - value_selector:
          - '1742807803325'
          - node
          variable: node
        - value_selector:
          - '1742807803325'
          - service
          variable: service
        - value_selector:
          - '1742807803325'
          - endpoint
          variable: endpoint
      height: 54
      id: '1750658174684'
      position:
        x: 1240
        y: 660
      positionAbsolute:
        x: 1240
        y: 660
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          label:
            en_US: cAdvisor job name
            ja_JP: cAdvisor job name
            pt_BR: cAdvisor job name
            zh_Hans: cAdvisor‰ªªÂä°ÂêçÁß∞
          llm_description: cAdvisor job name
          max: null
          min: null
          name: cadvisor_job_name
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          label:
            en_US: Namespace
            ja_JP: Namespace
            pt_BR: Namespace
            zh_Hans: ÂëΩÂêçÁ©∫Èó¥
          llm_description: Namespace
          max: null
          min: null
          name: namespace
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          label:
            en_US: Pod name
            ja_JP: Pod name
            pt_BR: Pod name
            zh_Hans: PodÂêçÁß∞
          llm_description: Pod name
          max: null
          min: null
          name: pod
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time(Microsecond)
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          cadvisor_job_name: ''
          endTime: ''
          namespace: ''
          pod: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: ÂÆπÂô®Á£ÅÁõòËØªÂèñËÄóÊó∂ÊØèÁßí(‰ΩøÁî®Containerd,ÊåâPodÂíåÂÆπÂô®ÁªüËÆ°)
        tool_configurations: {}
        tool_label: ÂÆπÂô®Á£ÅÁõòËØªÂèñËÄóÊó∂ÊØèÁßí(‰ΩøÁî®Containerd,ÊåâPodÂíåÂÆπÂô®ÁªüËÆ°)
        tool_name: ÂÆπÂô®Á£ÅÁõòËØªÂèñËÄóÊó∂ÊØèÁßí(‰ΩøÁî®Containerd,ÊåâPodÂíåÂÆπÂô®ÁªüËÆ°)
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          namespace:
            type: mixed
            value: '{{#17430589567120.namespace#}}'
          pod:
            type: mixed
            value: '{{#17430589567120.pod#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1750661176423'
      position:
        x: 3959
        y: 696
      positionAbsolute:
        x: 3959
        y: 696
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(timestamp: int, reason: str, tags: dict, detail: str, endpoint:\
          \ str, service: str) -> dict:\n    data = {\n        \"timestamp\": timestamp,\n\
          \        \"detail\": detail,\n        \"reason\": reason,\n        \"tags\"\
          : tags,\n    }\n    if service != \"\":\n        data['tags']['service']\
          \ = service\n    data['tags']['pid'] = str(data['tags']['pid'])\n    data['tags']['pod']\
          \ = data['tags'].get(\"podName\", \"\")\n    data['tags']['endpoint'] =\
          \ endpoint\n    return {\n        \"result\": json.dumps(data),\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ÂëäË≠¶‰∫ã‰ª∂ÊÄªËßà
        type: code
        variables:
        - value_selector:
          - '1741509454645'
          - first
          variable: tags
        - value_selector:
          - '1741227526517'
          - endTime
          variable: timestamp
        - value_selector:
          - '1750662088384'
          - text
          variable: reason
        - value_selector:
          - '1750662084996'
          - text
          variable: detail
        - value_selector:
          - '1742807803325'
          - endpoint
          variable: endpoint
        - value_selector:
          - '1742807803325'
          - service
          variable: service
      height: 54
      id: '1750661889002'
      position:
        x: 14165
        y: 904
      positionAbsolute:
        x: 14165
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 8ecc69bb-4504-40cc-9475-d9da1d54e2f8
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™ÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: 47fedf0d-54f2-4912-8e87-da9e60b6aa0b
          role: user
          text: "#ÁõÆÁöÑ\nÊ†πÊçÆÂ∫îÁî®ÁöÑÁªìËÆ∫ÁîüÊàêÂΩìÂâçÊÉÖÂÜµÁöÑÊèèËø∞\n‰ΩøÁî®ÁªìËÆ∫ÂÜÖÁöÑÊï∞ÊçÆÔºåÂõûÁ≠îÁÆÄÊ¥ÅÊòìÊáÇ\n#ÁªìËÆ∫Êï∞ÊçÆ\n{{#17430596469370.text#}}\n\
            # Êó∂Èó¥\n{{#1741227526517.endTime#}}\n#Ê†ºÂºèÊ®°ÁâàÂèÇËÄÉ\nÂëäË≠¶Êä•‰∫ã‰ª∂ÁªìËÆ∫ \n**‰∫ã‰ª∂Ê¶ÇËø∞**Ôºö\nÂΩìÂâçÂëäË≠¶‰∫ã‰ª∂‰∏∫XXXX\
            \ (ÁÆÄÊ¥ÅÔºå‰∏çË¶ÅÊúâÂÖ∂‰ªñÂÜÖÂÆπ)\n**ÈóÆÈ¢òÂàÜÊûê**\nÂàùÊ≠•ÂàÜÊûêÊòØXXXÊñπÂêëÔºàÁΩëÁªúÔºåCPUÔºâÔºå‰∏çË¶ÅÊúâÂÖ∂‰ªñÂÜÖÂÆπÔºåÁªôÂá∫ÊñπÂêëÂç≥ÂèØ\n**Ëß£ÂÜ≥Êé™ÊñΩ**Ôºö\n\
            - ÊâßË°åXXXXÂëΩ‰ª§ÔºàÂøÖÈ°ªÂíåÊïÖÈöúÊñπÂêëÊúâÂÖ≥Ôºâ\nÂ¶ÇÊûúÁΩëÁªúË¥®ÈáèÂºÇÂ∏∏ÔºåÂª∫ËÆÆÊ∂àÈô§xxxpingÂÄºÁ™ÅÂ¢ûÁöÑÈóÆÈ¢ò\nÂ¶ÇÊûúËøêË°åÈòüÂàóÊñπÂêëÔºàrunqÔºâÈóÆÈ¢ò,Âª∫ËÆÆÊ∂àÈô§Á®ãÂ∫èCPUËµÑÊ∫êÊä¢Âç†ÈóÆÈ¢ò„ÄÇ\n\
            \n#ËæìÂá∫Ê†ºÂºè\nÊ†ºÂºèÂèÇËÄÉÊ®°ÁâàÔºåÊ≥®ÊÑèÊç¢Ë°åÂíåÁ©∫Ê†ºÔºåÁ°Æ‰øùÊñáÊú¨ÁæéËßÇËæìÂá∫ÔºåÁÆÄÂçïÊòìÊáÇ(‰ΩøÁî®MarkDownÊ†ºÂºèÁöÑÊñáÊú¨)Ôºå‰∏î‰∏çË¶ÅÊúâÂÖ∂‰ªñËæìÂá∫"
        selected: false
        title: ÊèèËø∞
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1750662084996'
      position:
        x: 13557
        y: 904
      positionAbsolute:
        x: 13557
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 42284b17-9b6e-4660-aaad-9ba66584a21e
          role: system
          text: ''
        - id: 3d52c2b4-81a0-47d2-bedd-ef62955c057b
          role: user
          text: '#ÁõÆÁöÑ

            Ê†πÊçÆÂ∫îÁî®ÁöÑÁªìËÆ∫Êï∞ÊçÆÔºåËøõ‰∏ÄÊ≠•Ê±áÊÄªÁîüÊàêÂàÜÊûêËøáÁ®ã

            #ÁªìËÆ∫Êï∞ÊçÆ

            {{#17430596469370.text#}}

            # Êó∂Èó¥

            {{#1741227526517.endTime#}}

            #Ê†ºÂºèÊ®°ÁâàÂèÇËÄÉ

            **ÂåóÊûÅÊòüÊåáÊ†áË∂ãÂäøÊëòË¶Å**

            - ÊåâÊåáÊ†áÁª¥Â∫¶ÊèèËø∞ÊòæËëóÂèòÂåñÔºå

            xxxÁªìËÆ∫‰∏≠ÊèêÂèñ


            **ÊñπÂêëÁ°ÆÂÆö**

            Áî±‰∫éxxxÊï∞ÊçÆÂºÇÂ∏∏

            Âõ†Ê≠§ÂàùÊ≠•ËÆ§‰∏∫ÊòØxxxÊñπÂêë

            ‰∏îxxxÊï∞ÊçÆË°®ÂêçxxxÊñπÂêëÊ≠£Â∏∏ÊàñÂΩ±ÂìçËæÉÂ∞è


            #ËæìÂá∫Ê†ºÂºè

            Ê≥®ÊÑèÊç¢Ë°åÂíåÁ©∫Ê†ºÔºåÁ°Æ‰øùÊñáÊú¨ÁæéËßÇËæìÂá∫ÔºåÁÆÄÂçïÊòìÊáÇ(‰ΩøÁî®MarkDownÊ†ºÂºèÁöÑÊñáÊú¨)Ôºå‰∏î‰∏çË¶ÅÊúâÂÖ∂‰ªñËæìÂá∫'
        selected: false
        title: ÂëäË≠¶ÊèèËø∞Ê†ºÂºèÂåñÊñáÊú¨
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1750662088384'
      position:
        x: 13861
        y: 904
      positionAbsolute:
        x: 13861
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(alertEventId: str, run_id: str) -> dict:\n    data = {\n\
          \        \"alertEventId\": alertEventId,\n        \"runId\": run_id\n  \
          \  }\n    return {\n        \"result\": json.dumps(data),\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Êä•ÂëäÊ†áÁ≠æ
        type: code
        variables:
        - value_selector:
          - '1742807803325'
          - alertEventId
          variable: alertEventId
        - value_selector:
          - sys
          - workflow_run_id
          variable: run_id
      height: 54
      id: '1750662168285'
      position:
        x: 14165
        y: 1054
      positionAbsolute:
        x: 14165
        y: 1054
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 9cf805ef-c561-4b9a-a3cd-3e970fc59285
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™Êô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: 904153b5-a654-458e-9452-23aa907cfa57
          role: user
          text: "#ÁõÆÁöÑ\nÁîüÊàêÂª∫ËÆÆÁî®Êà∑ÁöÑË°åÂä®Âª∫ËÆÆ\nÂ¶ÇÊâßË°åÂëΩ‰ª§ÔºåÊàñËÄÖÊâæxxxÊéíÈô§ÈóÆÈ¢ò\n#ÁªìËÆ∫Êï∞ÊçÆ\n{{#17430596469370.text#}}\n\
            \n\n#Ê†ºÂºèÊ®°Áâà\n{\"suggest\": [\n        {\n            \"action\": \"Add index\
            \ to payment transaction table.\",\n            \"level\": \"high\"\n\
            \        },\n        {\n            \"action\": \"Scale up database node\
            \ CPU resources.\",\n            \"level\": \"medium\"\n        }\n  \
            \  ] }\n#ËæìÂá∫Ê†ºÂºè\njsonÊ†ºÂºèÊï∞ÊçÆÔºåÊ†ºÂºèÂèÇÊï∞Ê®°ÁâàÔºå‰∏çË¶ÅÊúâÂÖ∂‰ªñËæìÂá∫"
        selected: false
        title: ÂèØË°åÂä®Âª∫ËÆÆJSON
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1750662408086'
      position:
        x: 13861
        y: 1282
      positionAbsolute:
        x: 13861
        y: 1282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\ndef main(raw_data: str) -> dict:\n    pattern = r'```json\\\
          n(.*?)\\n```'\n    match = re.search(pattern, raw_data, re.DOTALL)\n\n \
          \   json_str = match.group(1)\n    rootcause = json.loads(json_str)\n  \
          \  return {\n        \"result\": json.dumps(rootcause),\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ÊèêÂèñÊ†πÂõ†Êï∞ÊçÆ
        type: code
        variables:
        - value_selector:
          - '1750068431868'
          - text
          variable: raw_data
      height: 54
      id: '1750672701216'
      position:
        x: 14165
        y: 1146
      positionAbsolute:
        x: 14165
        y: 1146
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\ndef main(raw_data: str) -> dict:\n    pattern = r'```json\\\
          n(.*?)\\n```'\n    match = re.search(pattern, raw_data, re.DOTALL)\n\n \
          \   json_str = match.group(1)\n    rootcause = json.loads(json_str)\n  \
          \  return {\n        \"result\": json.dumps(rootcause),\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ÊèêÂèñË°åÂä®Êï∞ÊçÆ
        type: code
        variables:
        - value_selector:
          - '1750662408086'
          - text
          variable: raw_data
      height: 54
      id: '17506728633540'
      position:
        x: 14165
        y: 1282
      positionAbsolute:
        x: 14165
        y: 1282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import requests\nimport json\ndef get_topology(service, cluster, start_time,\
          \ end_time) -> str:\n        params = {\n          'service': service,\n\
          \          'cluster': cluster,\n          'startTime': start_time,\n   \
          \       'endTime': end_time,\n          }\n        resp = requests.get(\"\
          http://apo-backend-svc:8080\"+ '/api/dataplane/topology', params=params)\n\
          \        res = {}\n\n\n        query_params = {\n                    'startTime':\
          \ start_time,\n                    'endTime': end_time,\n              \
          \      'service': service\n        }\n        response = requests.get(\"\
          http://apo-backend-svc:8080\"+ '/api/dataplane/redcharts', params=query_params)\n\
          \        metrics = {}\n        if response.status_code == 200 and response.json()['msg']\
          \ == '':\n            metrics['latency'] = response.json()['results'][0]['timeseries'][0]['chart']\n\
          \            metrics['errorRate'] = response.json()['results'][1]['timeseries'][0]['chart']\n\
          \            metrics['tps'] = response.json()['results'][2]['timeseries'][0]['chart']\n\
          \        res['current'] = {\n            \"service\": service,\n       \
          \     \"description\": \"\",\n            \"metrics\": metrics,\n      \
          \  }\n\n        if resp.status_code == 200 and resp.json()['msg'] == \"\"\
          :\n            list = resp.json()\n            result = []\n           \
          \ for item in list['results'] or []:\n                if item[\"name\"]\
          \ == service:\n                    result = item\n\n            parents\
          \ = []\n            for p_svc in result['parents']:\n                query_params\
          \ = {\n                    'startTime': start_time,\n                  \
          \  'endTime': end_time,\n                    'service': p_svc\n        \
          \        }\n                response = requests.get(\"http://apo-backend-svc:8080\"\
          + '/api/dataplane/redcharts', params=query_params)\n                if response.status_code\
          \ != 200 or response.json()['msg'] != '':\n                    continue\n\
          \                metrics = {}\n                metrics['latency'] = response.json()['results'][0]['timeseries'][0]['chart']\n\
          \                metrics['errorRate'] = response.json()['results'][1]['timeseries'][0]['chart']\n\
          \                metrics['tps'] = response.json()['results'][2]['timeseries'][0]['chart']\n\
          \                parents.append({\n                    'service': p_svc,\n\
          \                    'description': \"\",\n                    'metrics':\
          \ metrics,\n                })\n            \n            children = []\n\
          \            for c_svc in result['children']:\n                query_params\
          \ = {\n                    'startTime': start_time,\n                  \
          \  'endTime': end_time,\n                    'service': c_svc\n        \
          \        }\n                response = requests.get(\"http://apo-backend-svc:8080\"\
          + '/api/dataplane/redcharts', params=query_params)\n                if response.status_code\
          \ != 200 or response.json()['msg'] != '':\n                    continue\n\
          \                metrics = {}\n                metrics['latency'] = response.json()['results'][0]['timeseries'][0]['chart']\n\
          \                metrics['errorRate'] = response.json()['results'][1]['timeseries'][0]['chart']\n\
          \                metrics['tps'] = response.json()['results'][2]['timeseries'][0]['chart']\n\
          \                children.append({\n                    'service': c_svc,\n\
          \                    'description': \"\",\n                    'metrics':\
          \ metrics,\n                })\n            \n            res['children']\
          \ = children\n            res['parents'] = parents\n            return json.dumps(res)\n\
          \n\ndef main(service: str, startTime: int, endTime: int) -> dict:\n    rc\
          \ = get_topology(service, \"\", startTime, endTime)\n    if rc == None:\n\
          \        rc = \"{}\"\n    return {\n        \"result\": rc,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Ëé∑ÂèñÊãìÊâë
        type: code
        variables:
        - value_selector:
          - '1742807803325'
          - service
          variable: service
        - value_selector:
          - '1741227526517'
          - startTime
          variable: startTime
        - value_selector:
          - '1741227526517'
          - endTime
          variable: endTime
      height: 54
      id: '1750750056742'
      position:
        x: 14165
        y: 1374
      positionAbsolute:
        x: 14165
        y: 1374
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: reportType
            ja_JP: reportType
            pt_BR: reportType
            zh_Hans: Êä•ÂëäÁ±ªÂûã
          label:
            en_US: reportType
            ja_JP: reportType
            pt_BR: reportType
            zh_Hans: Êä•ÂëäÁ±ªÂûã
          llm_description: alert report type
          max: null
          min: null
          name: reportType
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: reportType
            ja_JP: reportType
            pt_BR: tags
            zh_Hans: Êä•ÂëäÊ†áÁ≠æÔºàÁî®‰∫éÊ£ÄÁ¥¢Ôºâ
          label:
            en_US: tags
            ja_JP: tags
            pt_BR: tags
            zh_Hans: Êä•ÂëäÊ†áÁ≠æÔºàÁî®‰∫éÊ£ÄÁ¥¢Ôºâ
          llm_description: alert report tags
          max: null
          min: null
          name: tags
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: overview
            ja_JP: overview
            pt_BR: overview
            zh_Hans: ÂëäË≠¶‰∫ã‰ª∂ÊÄªËßà
          label:
            en_US: overview
            ja_JP: overview
            pt_BR: overview
            zh_Hans: ÂëäË≠¶‰∫ã‰ª∂ÊÄªËßà
          llm_description: overview
          max: null
          min: null
          name: overview
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: topology
            ja_JP: topology
            pt_BR: topology
            zh_Hans: Êä•ÂëäÁ±ªÂûã
          label:
            en_US: topology
            ja_JP: topology
            pt_BR: topology
            zh_Hans: ÊãìÊâëÊï∞ÊçÆ
          llm_description: topology data
          max: null
          min: null
          name: topology
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: rootCauseAnalysis
            ja_JP: rootCauseAnalysis
            pt_BR: rootCauseAnalysis
            zh_Hans: Ê†πÂõ†ÂàÜÊûêÁªìËÆ∫
          label:
            en_US: rootCauseAnalysis
            ja_JP: rootCauseAnalysis
            pt_BR: rootCauseAnalysis
            zh_Hans: Ê†πÂõ†ÂàÜÊûêÁªìËÆ∫
          llm_description: rootCauseAnalysis
          max: null
          min: null
          name: rootCauseAnalysis
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: suggest
            ja_JP: suggest
            pt_BR: suggest
            zh_Hans: ÂèØË°åÂä®ÊñπÂêëÂª∫ËÆÆ
          label:
            en_US: suggest
            ja_JP: suggest
            pt_BR: suggest
            zh_Hans: ÂèØË°åÂä®ÊñπÂêëÂª∫ËÆÆ
          llm_description: suggest
          max: null
          min: null
          name: suggest
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: evidence
            ja_JP: evidence
            pt_BR: evidence
            zh_Hans: Ê†πÂõ†ÂàÜÊûêÁªìËÆ∫
          label:
            en_US: evidence
            ja_JP: evidence
            pt_BR: evidence
            zh_Hans: È™åËØÅÊï∞ÊçÆ
          llm_description: evidence
          max: null
          min: null
          name: evidence
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          evidence: ''
          overview: ''
          reportType: ''
          rootCauseAnalysis: ''
          suggest: ''
          tags: ''
          topology: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: ÁîüÊàêÂëäË≠¶ÂàÜÊûêÊä•Âëä
        tool_configurations: {}
        tool_label: ÁîüÊàêÂëäË≠¶ÂàÜÊûêÊä•Âëä
        tool_name: Generate alert analysis report
        tool_parameters:
          evidence:
            type: mixed
            value: '{{#1750769951427.result#}}'
          overview:
            type: mixed
            value: '{{#1750661889002.result#}}'
          reportType:
            type: mixed
            value: slow
          rootCauseAnalysis:
            type: mixed
            value: '{{#1750672701216.result#}}'
          suggest:
            type: mixed
            value: '{{#17506728633540.result#}}'
          tags:
            type: mixed
            value: '{{#1750662168285.result#}}'
          topology:
            type: mixed
            value: '{{#1750750056742.result#}}'
        type: tool
      height: 54
      id: '1750754610625'
      position:
        x: 14467
        y: 1146
      positionAbsolute:
        x: 14467
        y: 1146
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str, red: str, logs: str, red_text: str, rtt_text:\
          \ str, log_text: str) -> dict:\n    rtt = json.loads(arg1)\n    logs_raw\
          \ = json.loads(logs)\n    metrics = {\n      \"type\": \"metrics\",\n  \
          \    \"name\": \"Â∫îÁî®ÁΩëÁªúË¥®ÈáèÊåáÊ†á\",\n      \"description\": rtt_text,\n      \"\
          unit\": \"s\",\n    }\n    data = []\n    label_set = []\n    for metric\
          \ in rtt['data']['timeseries'] or []:\n        if metric['legend'] not in\
          \ label_set:\n            data.append(metric)\n            label_set.append(metric['legend'])\n\
          \n    metrics['data'] = data\n    logs_data = {\n        \"type\": \"log\"\
          ,\n        \"name\": \"Â∫îÁî®Êó•Âøó\",\n        \"description\": log_text,\n   \
          \     \"data\": logs_raw.get(\"logs\", [])\n    }\n    red_data = json.loads(red)\n\
          \    red_data[\"description\"] = red_text\n\n    return {\n        \"result\"\
          : json.dumps({\n            \"evidence\": [logs_data, red_data, metrics]\n\
          \        }),\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ÁîüÊàêÈ™åËØÅÊï∞ÊçÆ
        type: code
        variables:
        - value_selector:
          - '17430598942980'
          - text
          variable: arg1
        - value_selector:
          - '1750819000832'
          - result
          variable: red
        - value_selector:
          - '1750830805330'
          - logs
          variable: logs
        - value_selector:
          - '1750927458985'
          - text
          variable: red_text
        - value_selector:
          - '17511674060740'
          - text
          variable: rtt_text
        - value_selector:
          - '1750927215923'
          - text
          variable: log_text
      height: 54
      id: '1750769951427'
      position:
        x: 14165
        y: 1588
      positionAbsolute:
        x: 14165
        y: 1588
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import requests\nimport json\n\n\ndef get_red(service, cluster, start_time,\
          \ end_time) -> str:\n    query_params = {\"startTime\": start_time, \"endTime\"\
          : end_time, \"service\": service}\n    response = requests.get(\n      \
          \  \"http://apo-backend-svc:8080\" + \"/api/dataplane/redcharts\", params=query_params\n\
          \    )\n    data = []\n    if response.status_code == 200 and response.json()[\"\
          msg\"] == \"\":\n        la = response.json()[\"results\"][0][\"timeseries\"\
          ][0]\n        data.append(\n            {\n                \"type\": \"\
          latency\",\n                \"name\": la[\"legend\"],\n                \"\
          unit\": \"ms\",\n                \"chartData\": la[\"chart\"][\"chartData\"\
          ],\n            }\n        )\n        er = response.json()[\"results\"][1][\"\
          timeseries\"][0]\n        data.append(\n            {\n                \"\
          type\": \"errorRate\",\n                \"name\": er[\"legend\"],\n    \
          \            \"unit\": \"percent\",\n                \"chartData\": er[\"\
          chart\"][\"chartData\"],\n            }\n        )\n        tps = response.json()[\"\
          results\"][2][\"timeseries\"][0]\n        data.append(\n            {\n\
          \                \"type\": \"tps\",\n                \"name\": tps[\"legend\"\
          ],\n                \"unit\": \"tps\",\n                \"chartData\": tps[\"\
          chart\"][\"chartData\"],\n            }\n        )\n        print(data)\n\
          \        return data\n    else:\n        return data\n\n\ndef main(service:\
          \ str, startTime: int, endTime: int) -> dict:\n    rc = get_red(service,\
          \ \"\", startTime, endTime)\n    if rc is None:\n        rc = \"{}\"\n \
          \   return {\n        \"result\": json.dumps({\n            \"name\": \"\
          ÊúçÂä°ÁõëÊéßÊåáÊ†á\",\n            \"type\": \"red\",\n            \"data\": rc\n  \
          \      })\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Ëé∑ÂèñredÊåáÊ†á
        type: code
        variables:
        - value_selector:
          - '1742807803325'
          - service
          variable: service
        - value_selector:
          - '1741227526517'
          - startTime
          variable: startTime
        - value_selector:
          - '1741227526517'
          - endTime
          variable: endTime
      height: 54
      id: '1750819000832'
      position:
        x: 13558
        y: 1746
      positionAbsolute:
        x: 13558
        y: 1746
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(pod: str, service: str, node: str, pid: str, containerId:\
          \ str) -> dict:\n    query = ''\n    if len(containerId) > 0 and len(node)\
          \ > 0:\n        query = f\"\"\"container_id='{containerId}' and host_name='{node}'\"\
          \"\"\n    elif len(pod) > 0 and len(service) > 0:\n        query = f\"\"\
          \"k8s_pod_name='{pod}' and container_name='{service}'\"\"\"\n    elif len(pod)\
          \ > 0:\n        query = f\"\"\"k8s_pod_name='{pod}'\"\"\"\n    elif len(node)\
          \ > 0 and len(pid) > 0:\n        query = f\"\"\"host_name='{node}' and pid='{pid}'\"\
          \"\"\n    elif len(service) > 0:\n        query = f\"\"\"container_name='{service}'\"\
          \"\"\n    elif len(containerId) > 0:\n        query = f\"\"\"container_id='{containerId}'\"\
          \"\"\n    elif len(node) > 0:\n        query = f\"\"\"host_name='{node}'\"\
          \"\"\n\n            \n    return {\n        \"query\": query,\n    }"
        code_language: python3
        desc: ''
        outputs:
          query:
            children: null
            type: string
        selected: false
        title: Ëé∑ÂèñÊó•ÂøóÊü•ËØ¢Êù°‰ª∂
        type: code
        variables:
        - value_selector:
          - '17430589567120'
          - pod
          variable: pod
        - value_selector:
          - '1742807803325'
          - service
          variable: service
        - value_selector:
          - '17430589567120'
          - node
          variable: node
        - value_selector:
          - '17430589567120'
          - pid
          variable: pid
        - value_selector:
          - '1742807803325'
          - containerId
          variable: containerId
      height: 54
      id: '1750830567613'
      position:
        x: 12650
        y: 1471
      positionAbsolute:
        x: 12650
        y: 1471
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Query condition(clickhouse where clause).
            ja_JP: Query condition(clickhouse where clause).
            pt_BR: Query condition(clickhouse where clause).
            zh_Hans: Êü•ËØ¢Êù°‰ª∂Ôºàclickhouse whereÂ≠êÂè•Ôºâ
          label:
            en_US: Query condition(clickhouse where clause).
            ja_JP: Query condition(clickhouse where clause).
            pt_BR: Query condition(clickhouse where clause).
            zh_Hans: Êü•ËØ¢Êù°‰ª∂Ôºàclickhouse whereÂ≠êÂè•Ôºâ
          llm_description: Query condition(clickhouse where clause).
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Current page
            ja_JP: Current page
            pt_BR: Current page
            zh_Hans: ÂΩìÂâçÈ°µ
          label:
            en_US: Current page
            ja_JP: Current page
            pt_BR: Current page
            zh_Hans: ÂΩìÂâçÈ°µ
          llm_description: Current page
          max: null
          min: null
          name: pageNum
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Page size
            ja_JP: Page size
            pt_BR: Page size
            zh_Hans: È°µÂ§ßÂ∞è
          label:
            en_US: Page size
            ja_JP: Page size
            pt_BR: Page size
            zh_Hans: È°µÂ§ßÂ∞è
          llm_description: Page size
          max: null
          min: null
          name: pageSize
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Start timestamp in microseconds
            ja_JP: Start timestamp in microseconds
            pt_BR: Start timestamp in microseconds
            zh_Hans: Êü•ËØ¢ÂºÄÂßãÊó∂Èó¥ÔºàÂæÆÁßíÔºâ
          label:
            en_US: Start Time
            ja_JP: Start Time
            pt_BR: Start Time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥
          llm_description: Microsecond timestamp for start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: End timestamp in microseconds
            ja_JP: End timestamp in microseconds
            pt_BR: End timestamp in microseconds
            zh_Hans: Êü•ËØ¢ÁªìÊùüÊó∂Èó¥ÔºàÂæÆÁßíÔºâ
          label:
            en_US: End Time
            ja_JP: End Time
            pt_BR: End Time
            zh_Hans: ÁªìÊùüÊó∂Èó¥
          llm_description: Microsecond timestamp for end time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          pageNum: ''
          pageSize: ''
          query: ''
          startTime: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢ÂÖ®ÈáèÊó•Âøó
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÂÖ®ÈáèÊó•Âøó
        tool_name: Êü•ËØ¢ÂÖ®ÈáèÊó•Âøó
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          pageNum:
            type: constant
            value: 1
          pageSize:
            type: constant
            value: 999
          query:
            type: mixed
            value: '{{#1750830567613.query#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1750830747193'
      position:
        x: 12953
        y: 1452
      positionAbsolute:
        x: 12953
        y: 1452
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\nfrom typing import List\nimport json\n\nERROR_PATTERNS:\
          \ List[str] = [\n    r\"ERROR\",\n    r\"ERR\",\n    r\"EXCEPTION\",\n \
          \   r\"PANIC\",\n    r\"FAIL(?:ED)?\",\n    r\"WRONG\",\n    r\"FATAL\"\
          ,\n    r\"500\",\n    r\"5\\d{2}\",\n]\n\nERROR_REGEXES = [re.compile(pat,\
          \ re.IGNORECASE) for pat in ERROR_PATTERNS]\n\ndef is_error_log(line: str)\
          \ -> bool:\n    if not isinstance(line, (str, bytes)):\n        return False\n\
          \    for regex in ERROR_REGEXES:\n        if regex.search(line):\n     \
          \       return True\n    return False\n\ndef main(data_json: str) -> dict:\n\
          \    logs = json.loads(data_json).get(\"data\", {}).get(\"logContents\"\
          , {}).get(\"contents\", [])\n    \n    error_logs = []\n    all_logs = []\n\
          \    \n    for log in logs or []:\n        content = log.get(\"body\", \"\
          \")\n        timestamp = log.get(\"timestamp\")\n        tags = log.get('tags',\
          \ {})\n        \n        simplified_log = {\n            \"body\": content,\n\
          \            \"timestamp\": timestamp,\n            \"tags\": tags\n   \
          \     }\n        \n        all_logs.append(simplified_log)\n        if is_error_log(content):\n\
          \            error_logs.append(simplified_log)\n    \n    result_logs =\
          \ error_logs if error_logs else all_logs[:100]\n    \n    MAX_LENGTH = 50000\n\
          \    result_logs_str = json.dumps({\"logs\": result_logs}, separators=(\"\
          ,\", \":\"))\n    \n    while len(result_logs_str) > MAX_LENGTH and len(result_logs)\
          \ > 0:\n        remove_count = max(1, len(result_logs) // 10)\n        result_logs\
          \ = result_logs[:-remove_count]\n        result_logs_str = json.dumps({\"\
          logs\": result_logs}, separators=(\",\", \":\"))\n    \n    return {\"logs\"\
          : result_logs_str}"
        code_language: python3
        desc: ''
        outputs:
          logs:
            children: null
            type: string
        selected: false
        title: ÊèêÂèñÈîôËØØÊó•Âøó
        type: code
        variables:
        - value_selector:
          - '1750830747193'
          - text
          variable: data_json
      height: 54
      id: '1750830805330'
      position:
        x: 13255
        y: 1452
      positionAbsolute:
        x: 13255
        y: 1452
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: eb2032a5-ca17-48b4-b532-1c45ed948e91
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™ÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: 5b7f74ed-32ec-4351-a51d-74a723bad9a8
          role: user
          text: '# ÁõÆÁöÑ

            ËæìÂá∫ÂΩìÂâçÊó•ÂøóÊï∞ÊçÆÁöÑÊÉÖÂÜµÔºåËæìÂá∫Â≠óÊï∞100Â∑¶Âè≥ÔºåÂ∞ΩÈáèÁÆÄÊ¥ÅÂêç‰∫Ü

            # Êó•ÂøóÊï∞ÊçÆ

            {{#1750830805330.logs#}}

            #ËæìÂá∫

            ‰ªéÊó•Âøó‰∏≠ÂèØ‰ª•ÁúãÂá∫xxxx'
        selected: false
        title: Êó•ÂøóÊÄªÁªì
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1750927215923'
      position:
        x: 13861
        y: 1452
      positionAbsolute:
        x: 13861
        y: 1452
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 0d6f5be7-b8d0-4354-ae42-7ad580e19039
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™ÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: e090acfc-76e6-47e7-8296-465513ee7c4b
          role: user
          text: '# ÁõÆÁöÑ

            ËæìÂá∫ÂΩìÂâçÂ∫îÁî®REDÊåáÊ†áÊï∞ÊçÆÔºàtps,Âª∂Êó∂ÔºåÈîôËØØÁéáÔºâÁöÑÊÉÖÂÜµÔºàÂçáÈ´òËøòÊòØ‰∏ãÈôçÔºâÔºåËæìÂá∫Â≠óÊï∞100Â∑¶Âè≥ÔºåÂ∞ΩÈáèÁÆÄÊ¥ÅÂêç‰∫Ü

            # REDÊåáÊ†áÊï∞ÊçÆ

            {{#1750819000832.result#}}

            #ËæìÂá∫

            ‰ªéÂõæË°®‰∏≠ÂèØ‰ª•ÁúãÂá∫xxxx'
        selected: false
        title: Â∫îÁî®REDÊåáÊ†áÊÄªÁªì
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1750927458985'
      position:
        x: 13861
        y: 1724
      positionAbsolute:
        x: 13861
        y: 1724
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: bf855196-6899-4b0c-a363-404c077ba96f
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™ÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: 0ee4016d-1cbb-4dbb-89de-2d76f3caeebc
          role: user
          text: '#ÁõÆÁöÑ

            ‰ªéÊïÖÈöúÁªìËÆ∫‰∏≠ÊèêÂèñÊïÖÈöúÊñπÂêë

            # Ê≥®ÊÑè

            Ê†πÊçÆÁªìËÆ∫ÁöÑÂÜÖÂÆπÂàíÂàÜÊïÖÈöúÊñπÂêë

            1 Â¶ÇÊûúÁΩëÁªúÈìæË∑ØrttÊ≠£Â∏∏ÔºåÁΩëÁªúÊñπÂêëÁªôÂá∫‰∏ãÊ∏∏‰æùËµñÈóÆÈ¢ò

            #ÁªìËÆ∫Êï∞ÊçÆ

            {{#17430596469370.text#}}

            #ËæìÂá∫ÂÜÖÂÆπ

            ÊïÖÈöúÊñπÂêëÔºåÂè™ËæìÂá∫Âõõ‰∏™Â≠óÂ∞±Â•Ω ÔºàÂ¶ÇÁΩëÁªúÊñπÂêëÔºå‰∏ãÊ∏∏‰æùËµñÈóÆÈ¢òÔºåcpuÊñπÂêëÁ≠âÔºâ'
        selected: false
        title: LLM 13
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '1750995139153'
      position:
        x: 15073
        y: 1146
      positionAbsolute:
        x: 15073
        y: 1146
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef _get_avg(values):\n    if not values:\n      \
          \  return 0\n    return sum(values) / len(values)\n\ndef _get_standard_deviation(avg,\
          \ values):\n    if len(values) == 0:\n        return 0\n    squared_diffs\
          \ = [(x - avg)**2 for x in values]\n    sum_squared_diffs = sum(squared_diffs)\n\
          \    variance = sum_squared_diffs / (len(values))\n    return variance**0.5\n\
          \ndef analyze_data(result_str: str):        \n\n        data = json.loads(result_str)\n\
          \        timeseries = data.get('data', {}).get('timeseries', [])[:75]\n\
          \        unit = data.get('unit', '')\n        filtered = []\n\n        for\
          \ entry in timeseries:\n            labels = entry.get('labels', {})\n\n\
          \            chart = entry.get('chart', {}).get('chartData', {})\n     \
          \       values = [v for v in chart.values() if v != 0]\n\n            if\
          \ len(values) == 0:\n                continue\n\n            avg = _get_avg(values)\n\
          \            variance = _get_standard_deviation(avg, values)\n\n       \
          \     threshold = avg + 1 * variance\n            \n            count =\
          \ 0\n            for _, value in chart.items():\n                if value\
          \ > threshold:\n                    count += 1\n\n            if count !=\
          \ 0:\n                res = {\n                    \"chart\": chart,\n \
          \                   \"abnormalCount\": count,\n                    \"labels\"\
          : labels,\n                    \"avg\": avg,\n                    \"unit\"\
          : unit\n                }\n                filtered.append(res)\n      \
          \          \n\n        return json.dumps(filtered)\n    \ndef main(arg1:\
          \ str) -> dict:\n    res = analyze_data(arg1)\n    return {\n        \"\
          result\": res,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: fileÂºÇÂ∏∏ÊåáÊ†á
        type: code
        variables:
        - value_selector:
          - '17430597987060'
          - text
          variable: arg1
      height: 54
      id: '1751112705936'
      position:
        x: 4262
        y: 696
      positionAbsolute:
        x: 4262
        y: 696
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef _get_avg(values):\n    if not values:\n      \
          \  return 0\n    return sum(values) / len(values)\n\ndef _get_standard_deviation(avg,\
          \ values):\n    if len(values) == 0:\n        return 0\n    squared_diffs\
          \ = [(x - avg)**2 for x in values]\n    sum_squared_diffs = sum(squared_diffs)\n\
          \    variance = sum_squared_diffs / (len(values))\n    return variance**0.5\n\
          \ndef analyze_data(result_str: str):        \n\n        data = json.loads(result_str)\n\
          \        timeseries = data.get('data', {}).get('timeseries', [])[:75]\n\
          \        unit = data.get('unit', '')\n        filtered = []\n\n        for\
          \ entry in timeseries:\n            labels = entry.get('labels', {})\n\n\
          \            chart = entry.get('chart', {}).get('chartData', {})\n     \
          \       values = [v for v in chart.values() if v != 0]\n\n            if\
          \ len(values) == 0:\n                continue\n\n            avg = _get_avg(values)\n\
          \            variance = _get_standard_deviation(avg, values)\n\n       \
          \     threshold = avg + 1 * variance\n            \n            count =\
          \ 0\n            for _, value in chart.items():\n                if value\
          \ > threshold:\n                    count += 1\n\n            if count !=\
          \ 0:\n                res = {\n                    \"chart\": chart,\n \
          \                   \"abnormalCount\": count,\n                    \"labels\"\
          : labels,\n                    \"avg\": avg,\n                    \"unit\"\
          : unit\n                }\n                filtered.append(res)\n      \
          \          \n\n        return json.dumps(filtered)\n    \ndef main(arg1:\
          \ str) -> dict:\n    res = analyze_data(arg1)\n    return {\n        \"\
          result\": res,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: epollÂºÇÂ∏∏ÊåáÊ†á
        type: code
        variables:
        - value_selector:
          - '17430610599980'
          - text
          variable: arg1
      height: 54
      id: '17511127594560'
      position:
        x: 4262
        y: 790
      positionAbsolute:
        x: 4262
        y: 790
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef _get_avg(values):\n    if not values:\n      \
          \  return 0\n    return sum(values) / len(values)\n\ndef _get_standard_deviation(avg,\
          \ values):\n    if len(values) == 0:\n        return 0\n    squared_diffs\
          \ = [(x - avg)**2 for x in values]\n    sum_squared_diffs = sum(squared_diffs)\n\
          \    variance = sum_squared_diffs / (len(values))\n    return variance**0.5\n\
          \ndef analyze_data(result_str: str):        \n\n        data = json.loads(result_str)\n\
          \        timeseries = data.get('data', {}).get('timeseries', [])[:75]\n\
          \        unit = data.get('unit', '')\n        filtered = []\n\n        for\
          \ entry in timeseries:\n            labels = entry.get('labels', {})\n\n\
          \            chart = entry.get('chart', {}).get('chartData', {})\n     \
          \       values = [v for v in chart.values() if v != 0]\n\n            if\
          \ len(values) == 0:\n                continue\n\n            avg = _get_avg(values)\n\
          \            variance = _get_standard_deviation(avg, values)\n\n       \
          \     threshold = avg + 1 * variance\n            \n            count =\
          \ 0\n            for _, value in chart.items():\n                if value\
          \ > threshold:\n                    count += 1\n\n            if count !=\
          \ 0:\n                res = {\n                    \"chart\": chart,\n \
          \                   \"abnormalCount\": count,\n                    \"labels\"\
          : labels,\n                    \"avg\": avg,\n                    \"unit\"\
          : unit\n                }\n                filtered.append(res)\n      \
          \          \n\n        return json.dumps(filtered)\n    \ndef main(arg1:\
          \ str) -> dict:\n    res = analyze_data(arg1)\n    return {\n        \"\
          result\": res,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: cpuÂºÇÂ∏∏ÊåáÊ†á
        type: code
        variables:
        - value_selector:
          - '17430595109950'
          - text
          variable: arg1
      height: 54
      id: '17511128355920'
      position:
        x: 3958
        y: 1018
      positionAbsolute:
        x: 3958
        y: 1018
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef _get_avg(values):\n    if not values:\n      \
          \  return 0\n    return sum(values) / len(values)\n\ndef _get_standard_deviation(avg,\
          \ values):\n    if len(values) == 0:\n        return 0\n    squared_diffs\
          \ = [(x - avg)**2 for x in values]\n    sum_squared_diffs = sum(squared_diffs)\n\
          \    variance = sum_squared_diffs / (len(values))\n    return variance**0.5\n\
          \ndef analyze_data(result_str: str):        \n\n        data = json.loads(result_str)\n\
          \        timeseries = data.get('data', {}).get('timeseries', [])[:75]\n\
          \        unit = data.get('unit', '')\n        filtered = []\n\n        for\
          \ entry in timeseries:\n            labels = entry.get('labels', {})\n\n\
          \            chart = entry.get('chart', {}).get('chartData', {})\n     \
          \       values = [v for v in chart.values() if v != 0]\n\n            if\
          \ len(values) == 0:\n                continue\n\n            avg = _get_avg(values)\n\
          \            variance = _get_standard_deviation(avg, values)\n\n       \
          \     threshold = avg + 1 * variance\n            \n            count =\
          \ 0\n            for _, value in chart.items():\n                if value\
          \ > threshold:\n                    count += 1\n\n            if count !=\
          \ 0:\n                res = {\n                    \"chart\": chart,\n \
          \                   \"abnormalCount\": count,\n                    \"labels\"\
          : labels,\n                    \"avg\": avg,\n                    \"unit\"\
          : unit\n                }\n                filtered.append(res)\n      \
          \          \n\n        return json.dumps(filtered)\n    \ndef main(arg1:\
          \ str) -> dict:\n    res = analyze_data(arg1)\n    return {\n        \"\
          result\": res,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: netÂºÇÂ∏∏ÊåáÊ†á
        type: code
        variables:
        - value_selector:
          - '17430598907140'
          - text
          variable: arg1
      height: 54
      id: '17511128736240'
      position:
        x: 3958
        y: 1112
      positionAbsolute:
        x: 3958
        y: 1112
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef _get_avg(values):\n    if not values:\n      \
          \  return 0\n    return sum(values) / len(values)\n\ndef _get_standard_deviation(avg,\
          \ values):\n    if len(values) == 0:\n        return 0\n    squared_diffs\
          \ = [(x - avg)**2 for x in values]\n    sum_squared_diffs = sum(squared_diffs)\n\
          \    variance = sum_squared_diffs / (len(values))\n    return variance**0.5\n\
          \ndef analyze_data(result_str: str):        \n\n        data = json.loads(result_str)\n\
          \        timeseries = data.get('data', {}).get('timeseries', [])[:75]\n\
          \        unit = data.get('unit', '')\n        filtered = []\n\n        for\
          \ entry in timeseries:\n            labels = entry.get('labels', {})\n\n\
          \            chart = entry.get('chart', {}).get('chartData', {})\n     \
          \       values = [v for v in chart.values() if v != 0]\n\n            if\
          \ len(values) == 0:\n                continue\n\n            avg = _get_avg(values)\n\
          \            variance = _get_standard_deviation(avg, values)\n\n       \
          \     threshold = avg + 1 * variance\n            \n            count =\
          \ 0\n            for _, value in chart.items():\n                if value\
          \ > threshold:\n                    count += 1\n\n            if count !=\
          \ 0:\n                res = {\n                    \"chart\": chart,\n \
          \                   \"abnormalCount\": count,\n                    \"labels\"\
          : labels,\n                    \"avg\": avg,\n                    \"unit\"\
          : unit\n                }\n                filtered.append(res)\n      \
          \          \n\n        return json.dumps(filtered)\n    \ndef main(arg1:\
          \ str) -> dict:\n    res = analyze_data(arg1)\n    return {\n        \"\
          result\": res,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: runqÂºÇÂ∏∏ÊåáÊ†á
        type: code
        variables:
        - value_selector:
          - '17430610719970'
          - text
          variable: arg1
      height: 54
      id: '17511129103380'
      position:
        x: 3958
        y: 1358
      positionAbsolute:
        x: 3958
        y: 1358
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /models/qwen2.5-32B
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 40620e63-f76d-4e8b-bd1d-5397dfa824ae
          role: system
          text: ‰Ω†ÊòØ‰∏Ä‰∏™ÂèØËßÇÊµãÊÄßÈ¢ÜÂüüÁöÑÊô∫ËÉΩÂä©ÊâãÔºåÂ∏ÆÂä©Áî®Êà∑Ëß£ÂÜ≥ÈóÆÈ¢ò
        - id: b7859471-5c89-4e79-be39-dc42df906ce5
          role: user
          text: '# ÁõÆÁöÑ

            ËæìÂá∫ÂΩìÂâçÁΩëÁªúË¥®ÈáèÊï∞ÊçÆÔºàRTTÔºâÁöÑÊÉÖÂÜµÔºåÂà§Êñ≠ÊòØÂê¶Â§ßÈáèÂºÇÂ∏∏(Ë∂ÖËøá0.05sÊàñËÄÖ0.2s)ËæìÂá∫Â≠óÊï∞100Â∑¶Âè≥ÔºåÂ∞ΩÈáèÁÆÄÊ¥ÅÂêç‰∫Ü

            # ÁΩëÁªúÂºÇÂ∏∏Ë¥®ÈáèÊï∞ÊçÆ

            {{#17515143872690.result#}}

            # Ê≥®ÊÑè

            ÂøÖÈ°ªË¶ÅÊåÅÁª≠Âá∫Áé∞Â§ßÈáèÂºÇÂ∏∏ÁÇπ‰ΩçÔºåÊâçËÆ§‰∏∫ÁΩëÁªúË¥®ÈáèÂá∫Áé∞ÈóÆÈ¢òÔºåÂê¶ÂàôËøòÊòØËÆ§‰∏∫Áä∂ÊÄÅËâØÂ•Ω

            Â¶ÇÊûúRTTÊï∞ÊçÆ‰∏∫Á©∫ÔºåËæìÂá∫ÁΩëÁªúË¥®ÈáèÊï∞ÊçÆÊ≠£Â∏∏Ôºå‰∏çË¶ÅËæìÂá∫ÊòæÁ§∫Ê≤°Êúâ‰ªª‰ΩïRTTÊï∞ÊçÆ

            #ËæìÂá∫

            ‰ªéÂõæË°®‰∏≠ÂèØ‰ª•ÁúãÂá∫ÁΩëÁªúË¥®Èáèxxx'
        selected: false
        title: ÁΩëÁªúPing
        type: llm
        variables: []
        vision:
          enabled: false
      height: 96
      id: '17511674060740'
      position:
        x: 4870
        y: 882
      positionAbsolute:
        x: 4870
        y: 882
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          label:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          llm_description: Service name
          max: null
          min: null
          name: service
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          label:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          llm_description: endpoint
          max: null
          min: null
          name: endpoint
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          label:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          llm_description: Type (cpu,net,file,runq)
          max: null
          min: null
          name: type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          endpoint: ''
          service: ''
          startTime: ''
          type: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢ÊúçÂä°CPUÊñπÂêëÊ†πÂõ†Êä•Âëä
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_name: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          endpoint:
            type: mixed
            value: '{{#1742807803325.endpoint#}}'
          service:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
          type:
            type: mixed
            value: cpu_time
        type: tool
      height: 54
      id: '1751504789699'
      position:
        x: 4870
        y: 1018
      positionAbsolute:
        x: 4870
        y: 1018
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          label:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          llm_description: Service name
          max: null
          min: null
          name: service
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          label:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          llm_description: endpoint
          max: null
          min: null
          name: endpoint
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          label:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          llm_description: Type (cpu,net,file,runq)
          max: null
          min: null
          name: type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          endpoint: ''
          service: ''
          startTime: ''
          type: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢ÊúçÂä°NetÊñπÂêëÊ†πÂõ†Êä•Âëä
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_name: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          endpoint:
            type: mixed
            value: '{{#1742807803325.endpoint#}}'
          service:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
          type:
            type: mixed
            value: network_time
        type: tool
      height: 54
      id: '17515048509810'
      position:
        x: 4870
        y: 1112
      positionAbsolute:
        x: 4870
        y: 1112
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          label:
            en_US: Service name
            ja_JP: Service name
            pt_BR: Service name
            zh_Hans: ‰∏öÂä°ÊúçÂä°ÂêçÁß∞
          llm_description: Service name
          max: null
          min: null
          name: service
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          label:
            en_US: endpoint
            ja_JP: endpoint
            pt_BR: endpoint
            zh_Hans: ‰∏öÂä°ÊúçÂä°Á´ØÁÇπ
          llm_description: endpoint
          max: null
          min: null
          name: endpoint
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          label:
            en_US: Type (cpu,net,file,runq)
            ja_JP: Type (cpu,net,file,runq)
            pt_BR: Type (cpu,net,file,runq)
            zh_Hans: Êä•ÂëäÁ±ªÂûã(cpu,net,file,runq)
          llm_description: Type (cpu,net,file,runq)
          max: null
          min: null
          name: type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query start time(Microsecond)
            ja_JP: Data query start time(Microsecond)
            pt_BR: Data query start time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: startTime
            ja_JP: startTime
            pt_BR: startTime
            zh_Hans: startTime
          llm_description: Data query start time(Microsecond)
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Data query end time(Microsecond)
            ja_JP: Data query end time(Microsecond)
            pt_BR: Data query end time(Microsecond)
            zh_Hans: ÁªìÊùüÊó∂Èó¥ (ÂæÆÁßí)
          label:
            en_US: endTime
            ja_JP: endTime
            pt_BR: endTime
            zh_Hans: endTime
          llm_description: Data query end time(Microsecond)
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          endTime: ''
          endpoint: ''
          service: ''
          startTime: ''
          type: ''
        provider_id: apo_select
        provider_name: apo_select
        provider_type: builtin
        selected: false
        title: Êü•ËØ¢ÊúçÂä°RunqÊñπÂêëÊ†πÂõ†Êä•Âëä
        tool_configurations: {}
        tool_label: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_name: Êü•ËØ¢ÊúçÂä°Ê†πÂõ†Êä•Âëä
        tool_parameters:
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          endpoint:
            type: mixed
            value: '{{#1742807803325.endpoint#}}'
          service:
            type: mixed
            value: '{{#1742807803325.service#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
          type:
            type: mixed
            value: scheduling_time
        type: tool
      height: 54
      id: '17515048888700'
      position:
        x: 4870
        y: 1358
      positionAbsolute:
        x: 4870
        y: 1358
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\n\ndef _get_avg(values):\n    if not values:\n      \
          \  return 0\n    return sum(values) / len(values)\n\ndef _get_standard_deviation(avg,\
          \ values):\n    if len(values) == 0:\n        return 0\n    squared_diffs\
          \ = [(x - avg)**2 for x in values]\n    sum_squared_diffs = sum(squared_diffs)\n\
          \    variance = sum_squared_diffs / (len(values))\n    return variance**0.5\n\
          \ndef analyze_data(result_str: str):        \n\n        data = json.loads(result_str)\n\
          \        timeseries = data.get('data', {}).get('timeseries', [])\n     \
          \   unit = data.get('unit', '')\n        filtered = []\n\n        for entry\
          \ in timeseries:\n            labels = entry.get('labels', {})\n\n     \
          \       chart = entry.get('chart', {}).get('chartData', {})\n          \
          \  values = [v for v in chart.values() if v != 0]\n\n            if len(values)\
          \ == 0:\n                continue\n\n            avg = _get_avg(values)\n\
          \            variance = _get_standard_deviation(avg, values)\n\n       \
          \     threshold = avg + 1 * variance\n            \n            count =\
          \ 0\n            for _, value in chart.items():\n                if value\
          \ > 0.05:\n                    count += 1\n\n            if count != 0:\n\
          \                res = {\n                    \"chart\": chart,\n      \
          \              \"abnormalCount\": count,\n                    \"labels\"\
          : labels,\n                    \"avg\": avg,\n                    \"unit\"\
          : unit\n                }\n                filtered.append(res)\n      \
          \          \n\n        return json.dumps(filtered)\n    \ndef main(arg1:\
          \ str) -> dict:\n    res = analyze_data(arg1)\n    return {\n        \"\
          result\": res,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: RTTÂàÜÊûê
        type: code
        variables:
        - value_selector:
          - '17473562733380'
          - text
          variable: arg1
      height: 54
      id: '17515143872690'
      position:
        x: 4566
        y: 903
      positionAbsolute:
        x: 4566
        y: 903
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: alertEventId
            ja_JP: alertEventId
            pt_BR: alertEventId
            zh_Hans: Êä•ÂëäÁ±ªÂûã
          label:
            en_US: alertEventId
            ja_JP: alertEventId
            pt_BR: alertEventId
            zh_Hans: ÂëäË≠¶‰∫ã‰ª∂ID
          llm_description: alertEventId
          max: null
          min: null
          name: alertEventId
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: reportText
            ja_JP: reportText
            pt_BR: reportText
            zh_Hans: Êä•ÂëäÁÆÄË¶ÅÊñáÊú¨
          label:
            en_US: reportText
            ja_JP: reportText
            pt_BR: reportText
            zh_Hans: Êä•ÂëäÁÆÄË¶ÅÊñáÊú¨
          llm_description: reportText
          max: null
          min: null
          name: reportText
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: frontPrefix
            ja_JP: frontPrefix
            pt_BR: frontPrefix
            zh_Hans: Êä•ÂëäËÆøÈóÆÂú∞ÂùÄ
          label:
            en_US: frontPrefix
            ja_JP: frontPrefix
            pt_BR: frontPrefix
            zh_Hans: Êä•ÂëäËÆøÈóÆÂú∞ÂùÄ
          llm_description: frontPrefix
          max: null
          min: null
          name: frontPrefix
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Start timestamp in microseconds
            ja_JP: Start timestamp in microseconds
            pt_BR: Start timestamp in microseconds
            zh_Hans: Êü•ËØ¢ÂºÄÂßãÊó∂Èó¥ÔºàÂæÆÁßíÔºâ
          label:
            en_US: Start Time
            ja_JP: Start Time
            pt_BR: Start Time
            zh_Hans: ÂºÄÂßãÊó∂Èó¥
          llm_description: Microsecond timestamp for start time
          max: null
          min: null
          name: startTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: End timestamp in microseconds
            ja_JP: End timestamp in microseconds
            pt_BR: End timestamp in microseconds
            zh_Hans: Êü•ËØ¢ÁªìÊùüÊó∂Èó¥ÔºàÂæÆÁßíÔºâ
          label:
            en_US: End Time
            ja_JP: End Time
            pt_BR: End Time
            zh_Hans: ÁªìÊùüÊó∂Èó¥
          llm_description: Microsecond timestamp for end time
          max: null
          min: null
          name: endTime
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: number
        params:
          alertEventId: ''
          endTime: ''
          frontPrefix: ''
          reportText: ''
          startTime: ''
        provider_id: apo_analysis
        provider_name: apo_analysis
        provider_type: builtin
        selected: false
        title: Ëé∑ÂèñÂëäË≠¶ÂàÜÊûêÊä•ÂëäÈìæÊé•
        tool_configurations: {}
        tool_label: Ëé∑ÂèñÂëäË≠¶ÂàÜÊûêÊä•ÂëäÈìæÊé•
        tool_name: get alert report url
        tool_parameters:
          alertEventId:
            type: mixed
            value: '{{#1742807803325.alertEventId#}}'
          endTime:
            type: variable
            value:
            - '1741227526517'
            - endTime
          frontPrefix:
            type: mixed
            value: ''
          reportText:
            type: mixed
            value: '{{#1750662084996.text#}}'
          startTime:
            type: variable
            value:
            - '1741227526517'
            - startTime
        type: tool
      height: 54
      id: '1751601681225'
      position:
        x: 14769
        y: 1146
      positionAbsolute:
        x: 14769
        y: 1146
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: 77200336-55fa-4c9c-bfac-43d16e54f3ed
            value: ce
            varType: string
            variable_selector:
            - '1741227526517'
            - edition
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: report
        type: if-else
      height: 126
      id: '1751601842740'
      position:
        x: 12345
        y: 904
      positionAbsolute:
        x: 12345
        y: 904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741512806512'
          - text
          variable: text
        selected: false
        title: ÁªìÊùü 5
        type: end
      height: 90
      id: '1751601994805'
      position:
        x: 12719.594033345926
        y: 780.9445175572653
      positionAbsolute:
        x: 12719.594033345926
        y: 780.9445175572653
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -2527.2151023550064
      y: -169.99714214454528
      zoom: 0.604502987399936
