app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: alert event classify
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: package
  value:
    plugin_unique_identifier: langgenius/deepseek:0.0.5@fd6efd37c2a931911de8ab9ca3ba2da303bef146d45ee87ad896b04b36d09403
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: start
        targetType: code
      id: 1745224781828-source-1745224789961-target
      source: '1745224781828'
      sourceHandle: source
      target: '1745224789961'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: variable-aggregator
      id: 1745224899681-true-1745225185151-target
      source: '1745224899681'
      sourceHandle: 'true'
      target: '1745225185151'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1745225185151-source-1745304707998-target
      source: '1745225185151'
      sourceHandle: source
      target: '1745304707998'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: end
      id: 1745304707998-source-1745224862564-target
      source: '1745304707998'
      sourceHandle: source
      target: '1745224862564'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: variable-aggregator
      id: 1747310030413-1-1745225185151-target
      source: '1747310030413'
      sourceHandle: '1'
      target: '1745225185151'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: variable-aggregator
      id: 1747310030413-2-1745225185151-target
      source: '1747310030413'
      sourceHandle: '2'
      target: '1745225185151'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: variable-aggregator
      id: 1747310030413-1747310114991-1745225185151-target
      source: '1747310030413'
      sourceHandle: '1747310114991'
      target: '1745225185151'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 1745224789961-source-1745224899681-target
      source: '1745224789961'
      sourceHandle: source
      target: '1745224899681'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: question-classifier
      id: 1745224899681-false-1747310030413-target
      source: '1745224899681'
      sourceHandle: 'false'
      target: '1747310030413'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: start
        type: start
        variables:
        - label: alertName
          max_length: null
          options: []
          required: true
          type: paragraph
          variable: alertName
        - label: alertGroup
          max_length: null
          options: []
          required: true
          type: paragraph
          variable: alertGroup
      height: 114
      id: '1745224781828'
      position:
        x: 30
        y: 264.5
      positionAbsolute:
        x: 30
        y: 264.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "import re\n\nLATENCY = \"request_latency\"\nAVAILABILITY = \"service_availability\"\
          \nINFRASTRUCTURE = \"infrastructure\"\nUNKNOWN = \"unknown\"\n\nclass AlertClassifier:\n\
          \    def __init__(self):\n        \n        self.rules = {\n           \
          \ AVAILABILITY: [\n                r'\\b(downtime|unavailable|offline|crash|failure|服务不可用|无法访问|中断|停止|error\
          \ rate|error count|killed)\\b',\n                r'\\b.*(service|应用|系统|request|log|container|请求|日志).*(不可用|失败|错误率|宕机|终止|错误).*\\\
          b',\n                r'\\b(5xx|503|502|404)\\b',\n            ],\n     \
          \       INFRASTRUCTURE: [\n                r'\\b(network.*rtt|rtt.*latency)\\\
          b',  # match network rtt\n                r'\\b(cpu|memory|disk|network|bandwidth|storage|资源|硬件|负载|容量|throughput|read\
          \ speed|write speed|i/o|file descriptor|cfs_throttled|usage|utilization)\\\
          b',\n                r'\\b(usage|utilization|exhausted|不足|过载|瓶颈|high|abnormal|low|less\
          \ than|exceeds)\\b',\n                r'\\b(server|node|cluster|数据库|队列|container).*(高负载|故障|资源|使用率|异常)\\\
          b',\n            ],\n            LATENCY: [\n                r'\\b(request|api|接口|调用|查询).*(latency|延时|延迟|缓慢)\\\
          b',  \n                r'.*(request|请求).*(latency|延时|延迟|缓慢).*\\b',\n   \
          \             r'\\b(latency|delay|response time|timeout|slow|秒|毫秒|ms)\\\
          b(?!.*(network|rtt))',  \n            ]\n        }\n\n        \n       \
          \ self.compiled_rules = {\n            category: [re.compile(pattern, re.IGNORECASE)\
          \ for pattern in patterns]\n            for category, patterns in self.rules.items()\n\
          \        }\n\n    def classify_alert(self, alert_text: str) -> str:\n  \
          \      text = alert_text.lower()\n\n        for category, patterns in self.compiled_rules.items():\n\
          \            for pattern in patterns:\n                if pattern.search(text):\n\
          \                    return category\n        \n        return UNKNOWN\n\
          \ndef main(arg1: str, arg2: str) -> dict:\n    classifier = AlertClassifier()\n\
          \    category = classifier.classify_alert(arg1)\n    return {\n        \"\
          result\": str(category),\n    }\n\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: alert event classify
        type: code
        variables:
        - value_selector:
          - '1745224781828'
          - alertName
          variable: arg1
        - value_selector:
          - '1745224781828'
          - alertGroup
          variable: arg2
      height: 52
      id: '1745224789961'
      position:
        x: 333
        y: 264.5
      positionAbsolute:
        x: 333
        y: 264.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1745225185151'
          - output
          variable: workflowName
        - value_selector:
          - '1745304707998'
          - result
          variable: workflowId
        selected: false
        title: end
        type: end
      height: 114
      id: '1745224862564'
      position:
        x: 1848
        y: 264.5
      positionAbsolute:
        x: 1848
        y: 264.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is not
            id: 13155f6d-5696-4f46-a934-aa10828052dd
            value: unknown
            varType: string
            variable_selector:
            - '1745224789961'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: classify succeed
        type: if-else
      height: 124
      id: '1745224899681'
      position:
        x: 636
        y: 264.5
      positionAbsolute:
        x: 636
        y: 264.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        desc: ''
        output_type: string
        selected: false
        title: summary
        type: variable-aggregator
        variables:
        - - '1747310030413'
          - class_name
        - - '1745224789961'
          - result
      height: 129
      id: '1745225185151'
      position:
        x: 1242
        y: 264.5
      positionAbsolute:
        x: 1242
        y: 264.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    res = \"a2d4d3aa-3401-4393-859e-df051bdd5cd1\"\
          \n    match arg1:\n        case \"request_latency\":\n            res =\
          \ \"a2d4d3aa-3401-4393-859e-df051bdd5cd1\"\n        case \"service_availability\"\
          :\n            res = \"40dea201-7aa4-4e27-865b-6ebeab91a0c3\"\n        case\
          \ \"infrastructure\":\n            res = \"f514d742-6043-498e-98f1-ab03cbcb0250\"\
          \n    return {\n        \"result\": res,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: get worflow_id
        type: code
        variables:
        - value_selector:
          - '1745225185151'
          - output
          variable: arg1
      height: 52
      id: '1745304707998'
      position:
        x: 1545
        y: 264.5
      positionAbsolute:
        x: 1545
        y: 264.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        classes:
        - id: '1'
          name: request_latency
        - id: '2'
          name: service_availability
        - id: '1747310114991'
          name: infrastructure
        desc: ''
        instruction: ''
        instructions: ''
        model:
          completion_params:
            temperature: 0.1
          mode: chat
          name: deepseek-chat
          provider: langgenius/deepseek/deepseek
        query_variable_selector:
        - '1745224781828'
        - alertName
        selected: false
        title: 问题分类器
        topics: []
        type: question-classifier
        vision:
          enabled: false
      height: 202
      id: '1747310030413'
      position:
        x: 939
        y: 395.5
      positionAbsolute:
        x: 939
        y: 395.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    viewport:
      x: -390.0498275252221
      y: -1.7848260842371246
      zoom: 0.544042198619822
