#!/bin/bash

set -x

# Help function
show_help() {
  echo "Usage: $0 [OPTIONS]"
  echo ""
  echo "Start the Workflow Scheduler service"
  echo "This is a dedicated Celery Beat instance for workflow schedules"
  echo ""
  echo "Options:"
  echo "  --loglevel LEVEL       Log level (default: INFO)"
  echo "  --pidfile FILE         PID file path (optional)"
  echo "  -h, --help             Show this help message"
  echo ""
  echo "Examples:"
  echo "  $0"
  echo "  $0 --loglevel DEBUG"
  echo "  $0 --pidfile /tmp/workflow-scheduler.pid"
  echo ""
  echo "Description:"
  echo "  The Workflow Scheduler is a required service when using schedule trigger nodes."
  echo "  It reads schedule configurations from the database and dispatches tasks"
  echo "  at the appropriate times."
}

# Parse command line arguments
LOGLEVEL="INFO"
PIDFILE=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --loglevel)
      LOGLEVEL="$2"
      shift 2
      ;;
    --pidfile)
      PIDFILE="$2"
      shift 2
      ;;
    -h|--help)
      show_help
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      show_help
      exit 1
      ;;
  esac
done

SCRIPT_DIR="$(dirname "$(realpath "$0")")"
cd "$SCRIPT_DIR/.."

echo "Starting Workflow Scheduler..."
echo "  Log Level: ${LOGLEVEL}"
if [[ -n "${PIDFILE}" ]]; then
  echo "  PID File: ${PIDFILE}"
fi

# Build celery beat command with custom scheduler
CMD="uv --directory api run celery -A app.celery beat"
CMD="${CMD} --scheduler schedule.schedule_dispatch:WorkflowScheduler"
CMD="${CMD} --loglevel ${LOGLEVEL}"

if [[ -n "${PIDFILE}" ]]; then
  CMD="${CMD} --pidfile ${PIDFILE}"
fi

echo "Using scheduler: schedule.schedule_dispatch:WorkflowScheduler"

# Run the workflow scheduler
exec ${CMD}